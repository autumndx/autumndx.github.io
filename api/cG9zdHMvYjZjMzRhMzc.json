{"title":"GitHub + jsDelivr + PicGo + Imagine 打造稳定快速、高效免费图床","date":"2020-05-12T08:29:03.000Z","date_formatted":{"ll":"2020年5月12日","L":"2020/05/12","MM-DD":"05-12"},"link":"posts/b6c34a37","comments":true,"categories":["博客"],"updated":"2020-06-08T01:53:13.707Z","content":"<h1 id=\"github--jsdelivr--picgo--imagine-打造稳定快速、高效免费图床\">GitHub + jsDelivr + PicGo + Imagine 打造稳定快速、高效免费图床<a href=\"#github--jsdelivr--picgo--imagine-打造稳定快速、高效免费图床\" title=\"GitHub + jsDelivr + PicGo + Imagine 打造稳定快速、高效免费图床\"></a></h1><h2 id=\"前言\">前言<a href=\"#前言\" title=\"前言\"></a></h2><blockquote>\n<p>为什么要使用图床呢？</p>\n</blockquote>\n<p>因为在不同平台发布同一篇文章的时候，最一个痛苦的点就是，图片存储问题，各个平台的文件存储方式各不相同，无法直接 <code>Ctrl + C</code> 的方式一键搞定，为了解决这个问题，使用 <code>MarkDown + 图床</code> 的方式进行文章的写作，将图片放到一个统一的地方，在文章中引入图片外链。<br>所谓图床，就是将图片储存到第三方静态资源库中，其返回给你一个 URL 进行获取图片。<code>MarkDown</code> 支持使用 URL 的方式显示图片，我想这也是程序员为什么对其偏爱的原因之一。<br>作为程序员，你会发现，现在很多论坛和社区都开始支持使用 <code>MarkDown</code>，如果你没使用图床的情况下，你分享同一篇文章，你要在不同的平台，各自重新编辑排版一遍和上传图片一次。<br>有了图床，情况就不一样了，<code>Ctrl+C</code> 的方式就搞定了，根本不用再 Check 文章内容一遍。</p>\n<blockquote>\n<p>图床的选择？</p>\n</blockquote>\n<ol><li><code>微博图床</code>：以前用的人比较多，从 2019 年 4 月开始开启了防盗链，凉凉</li>\n<li><code>SM.MS</code>：运营四年多了，也变得越来越慢了，到了晚上直接打不开图片，速度堪忧</li>\n<li><code>其他小众图床</code>：随时有挂掉的风险</li>\n<li><code>Imgur 等国外图床</code>：国内访问速度太慢，随时有被墙的风险</li>\n<li><code>大厂储存服务</code>：例如七牛云、又拍云、腾讯云COS、阿里云OSS等，操作繁琐，又是实名认证又是域名备案的，麻烦，而且还要花钱（有钱又不怕麻烦的当我没说）</li>\n<li><code>GitHub 图床</code>：免费，但是国内访问速度慢（不过没关系，利用 <code>jsDelivr</code> 提供的免费的 CDN 加速 速度足够了）</li>\n</ol><h2 id=\"使用流程\">使用流程<a href=\"#使用流程\" title=\"使用流程\"></a></h2><ol><li>新建 GitHub 仓库</li>\n<li>生成一个 Token</li>\n<li>配置 PicGo 并使用 jsdelivr 作为 CDN 加速</li>\n<li>使用 Imagine 进行图片压缩</li>\n<li>上传图片到 PicGo 并使用图床</li>\n</ol><h2 id=\"新建-github-仓库\">新建 GitHub 仓库<a href=\"#新建-github-仓库\" title=\"新建 GitHub 仓库\"></a></h2><ul><li>登录/注册 GitHub</li>\n<li>新建一个仓库，填写好仓库名</li>\n<li>仓库描述</li>\n<li>将权限设置成 <code>public</code></li>\n<li>根据需求选择是否为仓库初始化一个 <code>README.md</code> 描述文件</li>\n</ul><p><img src=\"https://cdn.jsdelivr.net/gh/Sitoi/cdn/img/tuchuang001.png\" class=\"φcy\" alt=\"新建 GitHub 仓库\"></p>\n<p><strong>新建 GitHub 仓库</strong></p>\n<h2 id=\"生成一个-token\">生成一个 Token<a href=\"#生成一个-token\" title=\"生成一个 Token\"></a></h2><ol><li>点击用户头像 -&gt; 选择 <code>Settings</code></li>\n</ol><p><img src=\"https://cdn.jsdelivr.net/gh/Sitoi/cdn/img/tuchuang002.png\" class=\"φcy\" alt=\"Settings\"></p>\n<p><strong>Settings</strong></p>\n<ol><li>点击 <code>Developer settings</code></li>\n</ol><p><img src=\"https://cdn.jsdelivr.net/gh/Sitoi/cdn/img/tuchuang003.png\" class=\"φcy\" alt=\"Developer settings\"></p>\n<p><strong>Developer settings</strong></p>\n<ol><li>点击 <code>Personal access tokens</code></li>\n</ol><p><img src=\"https://cdn.jsdelivr.net/gh/Sitoi/cdn/img/tuchuang004.png\" class=\"φcy\" alt=\"Personal access tokens\"></p>\n<p><strong>Personal access tokens</strong></p>\n<ol><li>点击 <code>Generate new token</code></li>\n</ol><p><img src=\"https://cdn.jsdelivr.net/gh/Sitoi/cdn/img/tuchuang005.png\" class=\"φcy\" alt=\"Generate new token\"></p>\n<p><strong>Generate new token</strong></p>\n<ol><li>填写 <code>Token</code> 描述，勾选 <code>repo</code>，然后点击 <code>Generate token</code> 生成一个 <code>Token</code></li>\n</ol><p><img src=\"https://cdn.jsdelivr.net/gh/Sitoi/cdn/img/tuchuang006.png\" class=\"φcy\" alt=\"填写 Token 描述\"></p>\n<p><strong>填写 Token 描述</strong></p>\n<ol><li>获取 <code>Token</code> 密钥</li>\n</ol><blockquote>\n<p>注意这个 Token 只会显示一次，自己先保存下来，或者等后面配置好 PicGo 后再关闭此网页</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Sitoi/cdn/img/tuchuang007.png\" class=\"φcy\" alt=\"获取 Token 密钥\"></p>\n<p><strong>获取 Token 密钥</strong></p>\n<h2 id=\"配置-picgo-并使用-jsdelivr-作为-cdn-加速\">配置 PicGo 并使用 jsdelivr 作为 CDN 加速<a href=\"#配置-picgo-并使用-jsdelivr-作为-cdn-加速\" title=\"配置 PicGo 并使用 jsdelivr 作为 CDN 加速\"></a></h2><p>前往下载 <a href=\"https://sitoi.cn/go.html?u=aHR0cHM6Ly9naXRodWIuY29tL01vbHVuZXJmaW5uL3BpY2dvL3JlbGVhc2Vz\" target=\"_blank\">PicGo</a>（<a href=\"https://sitoi.cn/go.html?u=aHR0cHM6Ly9naXRodWIuY29tL01vbHVuZXJmaW5uL3BpY2dvL3JlbGVhc2Vz\" target=\"_blank\">点击下载</a>），安装好后开始配置图床</p>\n<ul><li>设定仓库名：按照 <code>用户名/图床仓库名</code> 的格式填写</li>\n<li>设定分支名：<code>master</code></li>\n<li>设定 Token：粘贴之前生成的 <code>Token</code></li>\n<li>指定存储路径：填写想要储存的路径，如 <code>img/</code>，这样就会在仓库下创建一个名为 <code>img</code> 的文件夹，图片将会储存在此文件夹中</li>\n<li>设定自定义域名：它的的作用是，在图片上传后，PicGo 会按照<code>自定义域名+上传的图片名</code>的方式生成访问链接，放到粘贴板上，因为我们要使用 <code>jsDelivr</code> 加速访问，所以可以设置为<code>https://cdn.jsdelivr.net/gh/用户名/图床仓库名</code></li>\n</ul><p><img src=\"https://cdn.jsdelivr.net/gh/Sitoi/cdn/img/tuchuang008.png\" class=\"φcy\" alt=\"配置 PicGo\"></p>\n<p><strong>配置 PicGo</strong></p>\n<p>Text</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Q：什么是 jsdelivr ?</span><br><span class=\"line\"></span><br><span class=\"line\">A：jsDelivr 为开发者提供免费公共 CDN 加速服务</span><br></pre></td></tr></table></figure><h2 id=\"使用-imagine-进行图片压缩\">使用 Imagine 进行图片压缩<a href=\"#使用-imagine-进行图片压缩\" title=\"使用 Imagine 进行图片压缩\"></a></h2><p>通常情况下，图片大小都是超过 200KB 的，所以网页加载的时候会特别慢，一般我们会对图片进行压缩，这里我推荐 <a href=\"https://sitoi.cn/go.html?u=aHR0cHM6Ly9naXRodWIuY29tL21lb3d0ZWMvSW1hZ2luZS9yZWxlYXNlcw==\" target=\"_blank\">Imagine</a>（<a href=\"https://sitoi.cn/go.html?u=aHR0cHM6Ly9naXRodWIuY29tL21lb3d0ZWMvSW1hZ2luZS9yZWxlYXNlcw==\" target=\"_blank\">点击下载</a>） 支持全平台。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Sitoi/cdn/img/tuchuang009.png\" class=\"φcy\" alt=\"使用 Imagine 进行图片压缩\"></p>\n<p><strong>使用 Imagine 进行图片压缩</strong></p>\n<blockquote>\n<p>Imagine 采用的是有损压缩，介意的可以忽略这一步</p>\n</blockquote>\n<p>顺便推荐一个无损压缩的网站：<a href=\"https://sitoi.cn/go.html?u=aHR0cHM6Ly90aW55cG5nLmNvbS8=\" target=\"_blank\">https://tinypng.com/</a></p>\n<h2 id=\"上传图片到-picgo-并使用图床\">上传图片到 PicGo 并使用图床<a href=\"#上传图片到-picgo-并使用图床\" title=\"上传图片到 PicGo 并使用图床\"></a></h2><p>配置好 <code>PicGo</code> 后，我们就可以进行高效创作了，将<code>压缩后的图片</code>拖拽到<code>上传区</code>，将会自动上传并复制<code>访问链接</code>，将链接粘贴到博文中就行了，访问速度杠杠的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Sitoi/cdn/img/tuchuang010.png\" class=\"φcy\" alt=\"上传图片到 PicGo 并使用图床\"></p>\n<p><strong>上传图片到 PicGo 并使用图床</strong></p>\n<p>此外 <code>PicGo</code> 还有相册功能，可以对已上传的图片进行删除，修改链接等快捷操作，<code>PicGo</code> 还可以生成不同格式的链接、支持批量上传、快捷键上传、自定义链接格式、上传前重命名等，更多功能自己去探索吧！</p>\n<p class='div-border grey'>文章源于<br>\n[Sitoi](https://sitoi.cn/posts/39161.html)</p>","prev":{"title":"GO语言环境搭建","link":"posts/c876fc85"},"next":{"title":"Step 2 了解英语中关键的关键—单词","link":"posts/2f6cae91"},"plink":"https://dxsummer.gitee.io/posts/b6c34a37/","toc":[{"id":"github--jsdelivr--picgo--imagine-打造稳定快速、高效免费图床","title":"GitHub + jsDelivr + PicGo + Imagine 打造稳定快速、高效免费图床","index":"1","children":[{"id":"前言","title":"前言","index":"1.1"},{"id":"使用流程","title":"使用流程","index":"1.2"},{"id":"新建-github-仓库","title":"新建 GitHub 仓库","index":"1.3"},{"id":"生成一个-token","title":"生成一个 Token","index":"1.4"},{"id":"配置-picgo-并使用-jsdelivr-作为-cdn-加速","title":"配置 PicGo 并使用 jsdelivr 作为 CDN 加速","index":"1.5"},{"id":"使用-imagine-进行图片压缩","title":"使用 Imagine 进行图片压缩","index":"1.6"},{"id":"上传图片到-picgo-并使用图床","title":"上传图片到 PicGo 并使用图床","index":"1.7"}]}],"reward":true,"copyright":{"author":"DxSummer","link":"<a href=\"https://dxsummer.gitee.io/posts/b6c34a37/\" title=\"GitHub + jsDelivr + PicGo + Imagine 打造稳定快速、高效免费图床\">https://dxsummer.gitee.io/posts/b6c34a37/</a>","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\\\"https://creativecommons.org/licenses/by-nc-sa/4.0/\\\" rel=\\\"external nofollow\\\" target=\\\"_blank\\\">CC BY-NC-ND 4.0</a>)","published":"2020年5月12日","updated":"2020年6月8日"}}