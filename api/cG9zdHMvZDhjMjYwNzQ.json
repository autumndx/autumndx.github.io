{"title":"python主要函数","date":"2021-03-31T12:35:52.000Z","date_formatted":{"ll":"2021年3月31日","L":"2021/03/31","MM-DD":"03-31"},"link":"posts/d8c26074","comments":true,"tags":["Python"],"categories":["Python"],"updated":"2021-04-11T11:42:58.364Z","content":"<h2 id=\"字符函数\">字符函数<a href=\"#字符函数\" title=\"字符函数\"></a></h2><h3 id=\"转整数（转字符）\">转整数（转字符）<a href=\"#转整数（转字符）\" title=\"转整数（转字符）\"></a></h3><p><code>ord()</code>函数获取字符的<strong>整数表示</strong>，<code>chr()</code>函数把<strong>编码转换为对应的字符</strong>：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>ord(<span class=\"string\">'A'</span>)</span><br><span class=\"line\"><span class=\"number\">65</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>ord(<span class=\"string\">'中'</span>)</span><br><span class=\"line\"><span class=\"number\">20013</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>chr(<span class=\"number\">66</span>)</span><br><span class=\"line\"><span class=\"string\">'B'</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>chr(<span class=\"number\">25991</span>)</span><br><span class=\"line\"><span class=\"string\">'文'</span></span><br></pre></td></tr></table></figure><p>如果知道字符的整数编码，还可以用十六进制这么写<code>str</code>：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span><span class=\"string\">'\\u4e2d\\u6587'</span></span><br><span class=\"line\"><span class=\"string\">'中文'</span></span><br></pre></td></tr></table></figure><h3 id=\"转字节ascii、utf-8\">转字节(ascii、utf-8)<a href=\"#转字节ascii、utf-8\" title=\"转字节(ascii、utf-8)\"></a></h3><div class=\"φcz\"><div class=\"φdb\"><table><thead><tr>\n<th align=\"left\">字符</th><th align=\"left\">ASCII</th><th align=\"left\">Unicode</th><th align=\"left\">UTF-8</th></tr>\n</thead><tbody><tr>\n<td align=\"left\">A</td><td align=\"left\">01000001</td><td align=\"left\">00000000 01000001</td><td align=\"left\">01000001</td></tr>\n<tr>\n<td align=\"left\">中</td><td align=\"left\">x</td><td align=\"left\">01001110 00101101</td><td align=\"left\">11100100 10111000 10101101</td></tr>\n</tbody></table></div></div><p>对<code>bytes</code>类型的数据用带<code>b</code>前缀的单引号或双引号表示：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">x = <span class=\"string\">b'ABC'</span></span><br></pre></td></tr></table></figure><p>要注意区分<code>&#39;ABC&#39;</code>和<code>b&#39;ABC&#39;</code>，前者是<code>str</code>，后者虽然内容显示得和前者一样，但<strong><code>bytes</code>的每个字符都只占用一个字节。</strong></p>\n<p><mark>以Unicode表示的<code>str</code>通过<code>encode()</code>方法可以编码为指定的<code>bytes</code></mark>，例如：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span><span class=\"string\">'ABC'</span>.encode(<span class=\"string\">'ascii'</span>)</span><br><span class=\"line\"><span class=\"string\">b'ABC'</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span><span class=\"string\">'中文'</span>.encode(<span class=\"string\">'utf-8'</span>)</span><br><span class=\"line\"><span class=\"string\">b'\\xe4\\xb8\\xad\\xe6\\x96\\x87'</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span><span class=\"string\">'中文'</span>.encode(<span class=\"string\">'ascii'</span>)</span><br><span class=\"line\">Traceback (most recent call last):</span><br><span class=\"line\">  File <span class=\"string\">\"&lt;stdin&gt;\"</span>, line <span class=\"number\">1</span>, <span class=\"keyword\">in</span> &lt;module&gt;</span><br><span class=\"line\">UnicodeEncodeError: <span class=\"string\">'ascii'</span> codec can<span class=\"string\">'t encode characters in position 0-1: ordinal not in range(128)</span></span><br></pre></td></tr></table></figure><p>纯英文的<code>str</code>可以用<code>ASCII</code>编码为<code>bytes</code>，内容是一样的，含有中文的<code>str</code>可以用<code>UTF-8</code>编码为<code>bytes</code>。含有中文的<code>str</code>无法用<code>ASCII</code>编码，因为中文编码的范围超过了<code>ASCII</code>编码的范围，Python会报错。</p>\n<p>在<code>bytes</code>中，无法显示为ASCII字符的字节，用<code>\\x##</code>显示。</p>\n<p>反过来，如果我们从网络或磁盘上读取了字节流，那么读到的数据就是<code>bytes</code>。要把<code>bytes</code>变为<code>str</code>，就需要用<code>decode()</code>方法：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span><span class=\"string\">b'ABC'</span>.decode(<span class=\"string\">'ascii'</span>)</span><br><span class=\"line\"><span class=\"string\">'ABC'</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span><span class=\"string\">b'\\xe4\\xb8\\xad\\xe6\\x96\\x87'</span>.decode(<span class=\"string\">'utf-8'</span>)</span><br><span class=\"line\"><span class=\"string\">'中文'</span></span><br></pre></td></tr></table></figure><p>如果<code>bytes</code>中包含无法解码的字节，<code>decode()</code>方法会报错：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span><span class=\"string\">b'\\xe4\\xb8\\xad\\xff'</span>.decode(<span class=\"string\">'utf-8'</span>)</span><br><span class=\"line\">Traceback (most recent call last):</span><br><span class=\"line\">  ...</span><br><span class=\"line\">UnicodeDecodeError: <span class=\"string\">'utf-8'</span> codec can<span class=\"string\">'t decode byte 0xff in position 3: invalid start byte</span></span><br></pre></td></tr></table></figure><p>如果<code>bytes</code>中只有一小部分无效的字节，可以传入<code>errors=&#39;ignore&#39;</code>忽略错误的字节：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span><span class=\"string\">b'\\xe4\\xb8\\xad\\xff'</span>.decode(<span class=\"string\">'utf-8'</span>, errors=<span class=\"string\">'ignore'</span>)</span><br><span class=\"line\"><span class=\"string\">'中'</span></span><br></pre></td></tr></table></figure><h3 id=\"计算字符数\">计算字符数<a href=\"#计算字符数\" title=\"计算字符数\"></a></h3><p>要计算<code>str</code>包含多少个字符，可以用<code>len()</code>函数：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>len(<span class=\"string\">'ABC'</span>)</span><br><span class=\"line\"><span class=\"number\">3</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>len(<span class=\"string\">'中文'</span>)</span><br><span class=\"line\"><span class=\"number\">2</span></span><br></pre></td></tr></table></figure><p><code>len()</code>函数计算的是<code>str</code>的字符数，如果换成<code>bytes</code>，<code>len()</code>函数就计算字节数：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>len(<span class=\"string\">b'ABC'</span>)</span><br><span class=\"line\"><span class=\"number\">3</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>len(<span class=\"string\">b'\\xe4\\xb8\\xad\\xe6\\x96\\x87'</span>)</span><br><span class=\"line\"><span class=\"number\">6</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>len(<span class=\"string\">'中文'</span>.encode(<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\"><span class=\"number\">6</span></span><br></pre></td></tr></table></figure><h2 id=\"列表\">列表<a href=\"#列表\" title=\"列表\"></a></h2><h3 id=\"列表元素个数\">列表元素个数<a href=\"#列表元素个数\" title=\"列表元素个数\"></a></h3><p>用<code>len()</code>函数可以获得list元素的个数：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>classmates = [<span class=\"string\">'Michael'</span>, <span class=\"string\">'Bob'</span>, <span class=\"string\">'Tracy'</span>]</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>len(classmates)</span><br><span class=\"line\"><span class=\"number\">3</span></span><br></pre></td></tr></table></figure><h3 id=\"索引元素\">索引元素<a href=\"#索引元素\" title=\"索引元素\"></a></h3><p><strong>如果要取最后一个元素，除了计算索引位置外，还可以用<code>-1</code>做索引，直接获取最后一个元素：</strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>classmates[<span class=\"number\">-1</span>]</span><br><span class=\"line\"><span class=\"string\">'Tracy'</span></span><br></pre></td></tr></table></figure><p>以此类推，可以获取倒数第2个、倒数第3个：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; classmates[-2]</span><br><span class=\"line\">&#39;Bob&#39;</span><br><span class=\"line\">&gt;&gt;&gt; classmates[-3]</span><br><span class=\"line\">&#39;Michael&#39;</span><br><span class=\"line\">&gt;&gt;&gt; classmates[-4]</span><br><span class=\"line\">Traceback (most recent call last):</span><br><span class=\"line\">  File &quot;&lt;stdin&gt;&quot;, line 1, in &lt;module&gt;</span><br><span class=\"line\">IndexError: list index out of range</span><br></pre></td></tr></table></figure><p>当然，倒数第4个就越界了。</p>\n<h3 id=\"追加元素\">追加元素<a href=\"#追加元素\" title=\"追加元素\"></a></h3><p><strong>追加元素到末尾</strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>classmates.append(<span class=\"string\">'Adam'</span>)</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>classmates</span><br><span class=\"line\">[<span class=\"string\">'Michael'</span>, <span class=\"string\">'Bob'</span>, <span class=\"string\">'Tracy'</span>, <span class=\"string\">'Adam'</span>]</span><br></pre></td></tr></table></figure><p><strong>把元素插入到指定的位置</strong></p>\n<p>比如索引号为<code>1</code>的位置：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>classmates.insert(<span class=\"number\">1</span>, <span class=\"string\">'Jack'</span>)</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>classmates</span><br><span class=\"line\">[<span class=\"string\">'Michael'</span>, <span class=\"string\">'Jack'</span>, <span class=\"string\">'Bob'</span>, <span class=\"string\">'Tracy'</span>, <span class=\"string\">'Adam'</span>]</span><br></pre></td></tr></table></figure><h3 id=\"删除元素\">删除元素<a href=\"#删除元素\" title=\"删除元素\"></a></h3><p><strong>删除list末尾的元素</strong>，用<code>pop()</code>方法：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>classmates.pop()</span><br><span class=\"line\"><span class=\"string\">'Adam'</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>classmates</span><br><span class=\"line\">[<span class=\"string\">'Michael'</span>, <span class=\"string\">'Jack'</span>, <span class=\"string\">'Bob'</span>, <span class=\"string\">'Tracy'</span>]</span><br></pre></td></tr></table></figure><p>要<strong>删除指定位置的元素</strong>，用<code>pop(i)</code>方法，其中<code>i</code>是索引位置：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>classmates.pop(<span class=\"number\">1</span>)</span><br><span class=\"line\"><span class=\"string\">'Jack'</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>classmates</span><br><span class=\"line\">[<span class=\"string\">'Michael'</span>, <span class=\"string\">'Bob'</span>, <span class=\"string\">'Tracy'</span>]</span><br></pre></td></tr></table></figure><h3 id=\"元素替换\">元素替换<a href=\"#元素替换\" title=\"元素替换\"></a></h3><p>要把某个<strong>元素替换成别的元素</strong>，可以直接赋值给对应的索引位置：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>classmates[<span class=\"number\">1</span>] = <span class=\"string\">'Sarah'</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>classmates</span><br><span class=\"line\">[<span class=\"string\">'Michael'</span>, <span class=\"string\">'Sarah'</span>, <span class=\"string\">'Tracy'</span>]</span><br></pre></td></tr></table></figure><p><mark>list里面的<strong>元素的数据类型也可以不同</strong></mark>，比如：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>L = [<span class=\"string\">'Apple'</span>, <span class=\"number\">123</span>, <span class=\"literal\">True</span>]</span><br></pre></td></tr></table></figure><p>list元素也可以是另一个list，比如：</p>\n","prev":{"title":"SQL Sever安装教程","link":"posts/d6a1283f"},"next":{"title":"Python基础","link":"posts/99832f47"},"plink":"https://dxsummer.gitee.io/posts/d8c26074/","toc":[{"id":"字符函数","title":"字符函数","index":"1","children":[{"id":"转整数（转字符）","title":"转整数（转字符）","index":"1.1"},{"id":"转字节ascii、utf-8","title":"转字节(ascii、utf-8)","index":"1.2"},{"id":"计算字符数","title":"计算字符数","index":"1.3"}]},{"id":"列表","title":"列表","index":"2","children":[{"id":"列表元素个数","title":"列表元素个数","index":"2.1"},{"id":"索引元素","title":"索引元素","index":"2.2"},{"id":"追加元素","title":"追加元素","index":"2.3"},{"id":"删除元素","title":"删除元素","index":"2.4"},{"id":"元素替换","title":"元素替换","index":"2.5"}]}],"reward":true,"copyright":{"author":"DxSummer","link":"<a href=\"https://dxsummer.gitee.io/posts/d8c26074/\" title=\"python主要函数\">https://dxsummer.gitee.io/posts/d8c26074/</a>","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\\\"https://creativecommons.org/licenses/by-nc-sa/4.0/\\\" rel=\\\"external nofollow\\\" target=\\\"_blank\\\">CC BY-NC-ND 4.0</a>)","published":"2021年3月31日","updated":"2021年4月11日"}}