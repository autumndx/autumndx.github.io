{"title":"string.h中常用函数","date":"2020-05-30T07:08:03.000Z","date_formatted":{"ll":"2020年5月30日","L":"2020/05/30","MM-DD":"05-30"},"link":"posts/52078792","comments":true,"categories":["C语言"],"updated":"2020-06-08T01:58:31.331Z","content":"<h3 id=\"strlen\">strlen<a href=\"#strlen\" title=\"strlen\"></a></h3><p>计算字符串长度</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">size_t</span> <span class=\"title\">strlen</span><span class=\"params\">(<span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *str)</span></span></span><br></pre></td></tr></table></figure><p>计算字符串 str 的长度，直到空结束字符，但不包括空结束字符。</p>\n<p>函数实现：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">Strlen</span><span class=\"params\">(<span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *str)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tassert(str);</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> len = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> ((*str++) != <span class=\"string\">'\\0'</span>)len++;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> len;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><h3 id=\"strcpy\">strcpy<a href=\"#strcpy\" title=\"strcpy\"></a></h3><p>字符串复制</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">char</span> *<span class=\"title\">strcpy</span><span class=\"params\">(<span class=\"keyword\">char</span> *dest, <span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *src)</span></span></span><br></pre></td></tr></table></figure><p>把 src 所指向的字符串复制到 dest。</p>\n<p>函数实现：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">char</span> *<span class=\"title\">Strcpy</span><span class=\"params\">(<span class=\"keyword\">char</span> *dst, <span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *src)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tassert(dst &amp;&amp; src);</span><br><span class=\"line\">\t<span class=\"keyword\">char</span> *tmp = dst;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> ((*dst++ = *src++) != <span class=\"string\">'\\0'</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> tmp;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><h3 id=\"strncpy\">strncpy<a href=\"#strncpy\" title=\"strncpy\"></a></h3><p>复制连续的n个字符</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">char</span> *<span class=\"title\">strncpy</span><span class=\"params\">(<span class=\"keyword\">char</span> *dest, <span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *src, <span class=\"keyword\">size_t</span> n)</span></span></span><br></pre></td></tr></table></figure><p>把 src 所指向的字符串复制到 dest，最多复制 n 个字符。</p>\n<p>函数实现：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">char</span> *<span class=\"title\">Strncpy</span><span class=\"params\">(<span class=\"keyword\">char</span> *dst, <span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *src, <span class=\"keyword\">int</span> len)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tassert(dst&amp;&amp;src);</span><br><span class=\"line\">\t<span class=\"keyword\">char</span> *tmp = dst;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> offset = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (len &gt; <span class=\"built_in\">strlen</span>(src))</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\toffset = len - <span class=\"built_in\">strlen</span>(src);</span><br><span class=\"line\">\t\tlen = <span class=\"built_in\">strlen</span>(src);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (len--)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t*dst++ = *src++;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (offset--)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t*dst++ = <span class=\"string\">'\\0'</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> tmp;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><h3 id=\"strcat\">strcat<a href=\"#strcat\" title=\"strcat\"></a></h3><p>把一个字符串连接到另一个字符串后面</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">char</span> *<span class=\"title\">strcat</span><span class=\"params\">(<span class=\"keyword\">char</span> *dest, <span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *src)</span></span></span><br></pre></td></tr></table></figure><p>把 src 所指向的字符串追加到 dest 所指向的字符串的结尾。</p>\n<p>函数实现：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">char</span> *<span class=\"title\">Strcat</span><span class=\"params\">(<span class=\"keyword\">char</span> *dst, <span class=\"keyword\">const</span> <span class=\"keyword\">char</span>* src)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tassert(dst &amp;&amp; src);</span><br><span class=\"line\">\t<span class=\"keyword\">char</span> *tmp = dst;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (*dst++);</span><br><span class=\"line\">\tdst--;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (*dst++ = *src++);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> tmp;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><h3 id=\"strncat\">strncat<a href=\"#strncat\" title=\"strncat\"></a></h3><p>把连续的n个字符连接到另一个字符串后面</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">char</span> *<span class=\"title\">strncat</span><span class=\"params\">(<span class=\"keyword\">char</span> *dest, <span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *src, <span class=\"keyword\">size_t</span> n)</span></span></span><br></pre></td></tr></table></figure><p>把 src 所指向的字符串追加到 dest 所指向的字符串的结尾，直到 n 字符长度为止。</p>\n<p>函数实现：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">char</span> *<span class=\"title\">Strncat</span><span class=\"params\">(<span class=\"keyword\">char</span> *dst, <span class=\"keyword\">const</span> <span class=\"keyword\">char</span>* src, <span class=\"keyword\">int</span> len)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tassert(dst &amp;&amp; src);</span><br><span class=\"line\">\t<span class=\"keyword\">char</span> *tmp = dst;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (*dst++);</span><br><span class=\"line\">\tdst--;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (len--)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t*dst++ = *src++;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t*dst = <span class=\"string\">'\\0'</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> tmp;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><p>示例：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;string.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"keyword\">void</span>)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">char</span> str0[<span class=\"number\">20</span>] = <span class=\"string\">\"Test:\"</span>;</span><br><span class=\"line\">    <span class=\"keyword\">char</span> str1[<span class=\"number\">20</span>] = <span class=\"string\">\"Welcome9999\"</span>;</span><br><span class=\"line\">    <span class=\"keyword\">char</span> str2[<span class=\"number\">20</span>] = <span class=\"string\">\" To \"</span>;</span><br><span class=\"line\">    <span class=\"keyword\">char</span> str3[<span class=\"number\">20</span>] = <span class=\"string\">\"0123Beijing55\"</span>;</span><br><span class=\"line\">    <span class=\"keyword\">char</span> tmp[<span class=\"number\">100</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">strcpy</span>(tmp, str0);</span><br><span class=\"line\">    <span class=\"built_in\">puts</span>(tmp);      <span class=\"comment\">//Test:</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">strncpy</span>(tmp, str1, <span class=\"number\">7</span>);  <span class=\"comment\">//取st1前7个字符</span></span><br><span class=\"line\">    <span class=\"built_in\">puts</span>(tmp);      <span class=\"comment\">//Welcome</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">strcat</span>(tmp, str2);      <span class=\"comment\">//连接str2</span></span><br><span class=\"line\">    <span class=\"built_in\">puts</span>(tmp);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">strncat</span>(tmp, str3 + <span class=\"number\">4</span>, <span class=\"number\">7</span>);  <span class=\"comment\">//取str3+4之后的7个字符</span></span><br><span class=\"line\">    <span class=\"built_in\">puts</span>(tmp);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><p>输出结果：</p>\n<p><img src=\"https://wcc-blog.oss-cn-beijing.aliyuncs.com/img/C-string.jpg\" class=\"φcy\" alt=\"img\"></p>\n<h3 id=\"strchr\">strchr<a href=\"#strchr\" title=\"strchr\"></a></h3><p>查找某字符在字符串中首次出现的位置指针，如果不存在则返回NULL</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">char</span> *<span class=\"title\">strchr</span><span class=\"params\">(<span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *str, <span class=\"keyword\">int</span> c)</span></span></span><br></pre></td></tr></table></figure><p>在参数 str 所指向的字符串中搜索第一次出现字符 c（一个无符号字符）的位置。</p>\n<p>函数实现：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">char</span>* <span class=\"title\">My_strchr</span><span class=\"params\">(<span class=\"keyword\">char</span> *s, <span class=\"keyword\">char</span> c)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(*s != <span class=\"string\">'\\0'</span> &amp;&amp; *s != c)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        ++s;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> *s==c ? s : <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><p>示例：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;string.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"keyword\">void</span>)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">char</span> <span class=\"built_in\">string</span>[<span class=\"number\">20</span>] = <span class=\"string\">\"This is a string\"</span>;</span><br><span class=\"line\">    <span class=\"keyword\">char</span> *ptr1, *ptr2;</span><br><span class=\"line\">    <span class=\"keyword\">char</span> c1 = <span class=\"string\">'r'</span>, c2 = <span class=\"string\">'b'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    ptr1 = <span class=\"built_in\">strchr</span>(<span class=\"built_in\">string</span>, c1);</span><br><span class=\"line\">    ptr2 = <span class=\"built_in\">strchr</span>(<span class=\"built_in\">string</span>, c2);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(ptr1)</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"字符1:%c 的位置是: %s \\n\"</span>,c1,ptr1);</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"字符1:%c 未找到 \\n\"</span>, c1);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(ptr2)</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"字符2:%c 的位置是: %s \\n\"</span>,c2,ptr2);</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"字符2:%c 未找到 \\n\"</span>, c2);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><p>输出结果：</p>\n<p><img src=\"https://wcc-blog.oss-cn-beijing.aliyuncs.com/img/C-string2.jpg\" class=\"φcy\" alt=\"img\"></p>\n<h3 id=\"strcmp\">strcmp<a href=\"#strcmp\" title=\"strcmp\"></a></h3><p>字符串比较</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">strcmp</span><span class=\"params\">(<span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *str1, <span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *str2)</span></span></span><br></pre></td></tr></table></figure><p>把 str1 所指向的字符串和 str2 所指向的字符串进行比较。</p>\n<p>设这两个字符串为str1，str2，<br>若str1=str2，则返回零；<br>若str1&lt;str2，则返回负数；<br>若str1&gt;str2，则返回正数。</p>\n<p>函数实现：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">Strcmp</span><span class=\"params\">(<span class=\"keyword\">char</span> <span class=\"keyword\">const</span> *s1, <span class=\"keyword\">char</span> <span class=\"keyword\">const</span> *s2)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tassert(s1&amp;&amp;s2);</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (*s1 == *s2 &amp;&amp; *s1 != <span class=\"string\">'\\0'</span> &amp;&amp; *s2 != <span class=\"string\">'\\0'</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\ts1++;</span><br><span class=\"line\">\t\ts2++;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (*s1 == *s2)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (*s1 &gt; *s2)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">-1</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><p>示例：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;string.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"keyword\">void</span>)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">char</span> str1[<span class=\"number\">20</span>] = <span class=\"string\">\"abc\"</span>;</span><br><span class=\"line\">    <span class=\"keyword\">char</span> str2[<span class=\"number\">20</span>] = <span class=\"string\">\"abc\"</span>;</span><br><span class=\"line\">    <span class=\"keyword\">char</span> str3[<span class=\"number\">20</span>] = <span class=\"string\">\"bbc\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">int</span> r1, r2, r3;</span><br><span class=\"line\"></span><br><span class=\"line\">    r1 = <span class=\"built_in\">strcmp</span>(str1, str2);</span><br><span class=\"line\">    r2 = <span class=\"built_in\">strcmp</span>(str1, str3);</span><br><span class=\"line\">    r3 = <span class=\"built_in\">strcmp</span>(str3, str1);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"r1 = %d, r2 = %d, r3 = %d \\n\"</span>, r1, r2, r3);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><p>输出结果：</p>\n<p><img src=\"https://wcc-blog.oss-cn-beijing.aliyuncs.com/img/C-string3.jpg\" class=\"φcy\" alt=\"img\"></p>\n<h3 id=\"strstr\">strstr<a href=\"#strstr\" title=\"strstr\"></a></h3><p>字符串查找</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">char</span> *<span class=\"title\">strstr</span><span class=\"params\">(<span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *haystack, <span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *needle)</span></span></span><br></pre></td></tr></table></figure><p>在字符串 haystack 中查找第一次出现字符串 needle（不包含空结束字符）的位置。</p>\n<p>函数实现：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">char</span> *<span class=\"title\">Strstr</span><span class=\"params\">(<span class=\"keyword\">char</span> <span class=\"keyword\">const</span> *s1, <span class=\"keyword\">char</span> <span class=\"keyword\">const</span> *s2)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tassert(s1&amp;&amp;s2);</span><br><span class=\"line\">\t<span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *ps1, *ps2;</span><br><span class=\"line\">\tps1 = s1;</span><br><span class=\"line\">\tps2 = s2;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (*ps1)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *tmp = ps1;</span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span> (*tmp++ == *ps2++);</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (*ps2 == <span class=\"string\">'\\0'</span>)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> (<span class=\"keyword\">char</span>*)ps1;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tps2 = s2;</span><br><span class=\"line\">\t\tps1++;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><h3 id=\"strncmp\">strncmp<a href=\"#strncmp\" title=\"strncmp\"></a></h3><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">strncmp</span><span class=\"params\">(<span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *str1, <span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *str2, <span class=\"keyword\">size_t</span> n)</span></span></span><br></pre></td></tr></table></figure><p>把 str1 和 str2 进行比较，最多比较前 n 个字节。</p>\n<p>函数实现：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">Strncmp</span><span class=\"params\">(<span class=\"keyword\">char</span> <span class=\"keyword\">const</span> *s1, <span class=\"keyword\">char</span> <span class=\"keyword\">const</span> *s2, <span class=\"keyword\">int</span> len)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tassert(s1&amp;&amp;s2);</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (len-- &amp;&amp; *s1 == *s2 &amp;&amp; *s1 != <span class=\"string\">'\\0'</span> &amp;&amp; *s2 != <span class=\"string\">'\\0'</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\ts1++;</span><br><span class=\"line\">\t\ts2++;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> *s1 - *s2;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><h3 id=\"memcpy\">memcpy<a href=\"#memcpy\" title=\"memcpy\"></a></h3><p>内存复制</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> *<span class=\"title\">memcpy</span><span class=\"params\">(<span class=\"keyword\">void</span> *dest, <span class=\"keyword\">const</span> <span class=\"keyword\">void</span> *src, <span class=\"keyword\">size_t</span> n)</span></span></span><br></pre></td></tr></table></figure><p>从 src 复制 n 个字符到 dest。</p>\n<p>函数实现</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> *<span class=\"title\">Memcpy</span><span class=\"params\">(<span class=\"keyword\">char</span> *dst, <span class=\"keyword\">char</span> <span class=\"keyword\">const</span> *src, <span class=\"keyword\">int</span> len)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tassert(dst &amp;&amp; src);</span><br><span class=\"line\">\t<span class=\"keyword\">char</span> *tmp = dst;</span><br><span class=\"line\">\t<span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *s = src;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (len--)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t*dst++ = *src;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> tmp;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","prev":{"title":"Step3 运算符、表达式和语句","link":"posts/d0061c8b"},"next":{"title":"模拟电子技术基础笔记","link":"posts/dbbc2d17"},"plink":"https://dxsummer.gitee.io/posts/52078792/","toc":[{"id":"strlen","title":"strlen","index":"1"},{"id":"strcpy","title":"strcpy","index":"2"},{"id":"strncpy","title":"strncpy","index":"3"},{"id":"strcat","title":"strcat","index":"4"},{"id":"strncat","title":"strncat","index":"5"},{"id":"strchr","title":"strchr","index":"6"},{"id":"strcmp","title":"strcmp","index":"7"},{"id":"strstr","title":"strstr","index":"8"},{"id":"strncmp","title":"strncmp","index":"9"},{"id":"memcpy","title":"memcpy","index":"10"}],"reward":true,"copyright":{"author":"DxSummer","link":"<a href=\"https://dxsummer.gitee.io/posts/52078792/\" title=\"string.h中常用函数\">https://dxsummer.gitee.io/posts/52078792/</a>","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\\\"https://creativecommons.org/licenses/by-nc-sa/4.0/\\\" rel=\\\"external nofollow\\\" target=\\\"_blank\\\">CC BY-NC-ND 4.0</a>)","published":"2020年5月30日","updated":"2020年6月8日"}}