{"title":"SQL Sever笔记","date":"2021-04-05T11:02:51.000Z","date_formatted":{"ll":"2021年4月5日","L":"2021/04/05","MM-DD":"04-05"},"link":"posts/ab4279d1","comments":true,"tags":["SQL"],"categories":["SQL"],"updated":"2021-05-12T12:51:32.207Z","content":"<h1 id=\"第二章-关系数据库\">第二章 关系数据库<a href=\"#第二章-关系数据库\" title=\"第二章 关系数据库\"></a></h1><h2 id=\"1-关系数据结构及形式化定义\">1. 关系数据结构及形式化定义<a href=\"#1-关系数据结构及形式化定义\" title=\"1. 关系数据结构及形式化定义\"></a></h2><h3 id=\"11-关系\">1.1 关系<a href=\"#11-关系\" title=\"1.1 关系\"></a></h3><h4 id=\"111-域\">1.1.1 域<a href=\"#111-域\" title=\"1.1.1 域\"></a></h4><p>域是一组具有<strong>相同数据类型的值</strong>的集合。 例:</p>\n<ul><li>整数</li>\n<li>实数</li>\n<li>介于某个取值范围的整数</li>\n<li>指定长度的字符串集合</li>\n<li>{‘男’ ， ‘女’ }</li>\n</ul><h4 id=\"112-笛卡尔积\">1.1.2 笛卡尔积<a href=\"#112-笛卡尔积\" title=\"1.1.2 笛卡尔积\"></a></h4><p>给定一组域D1， D2， …， Dn， 允许其中<strong>某些域是相同的</strong>。<br>D1， D2， …， Dn的笛卡尔积为：<br>D1× D2× …× Dn ＝｛（d1， d2， …， dn） ｜ di∈Di， i＝1， 2， …， n｝</p>\n<ul><li>所有域的所有取值的一个组合</li>\n<li>不能重复 </li>\n</ul><h5 id=\"元组（tuple）\">元组（Tuple）<a href=\"#元组（tuple）\" title=\"元组（Tuple）\"></a></h5><ul><li>笛卡尔积中每一个元素<strong>（d1， d2， …， dn）</strong>叫作一个<strong>n元组</strong>（n-tuple）或简称元组</li>\n</ul><img src=\"https://cdn.jsdelivr.net/gh/Dxsummer/cdn/img/sql/20210405200541.png\" style=\"zoom: 80%;\" /><ul><li><p>(张清玫，计算机专业，李勇)</p>\n</li>\n<li><p>(张清玫，计算机专业，刘晨) 等 都是元组  </p>\n</li>\n</ul><h5 id=\"分量（component）\">分量（Component）<a href=\"#分量（component）\" title=\"分量（Component）\"></a></h5><ul><li>笛卡尔积元素（d1， d2， …， dn）中的<strong>每一个值di</strong> 叫作一个分量</li>\n</ul><img src=\"https://cdn.jsdelivr.net/gh/Dxsummer/cdn/img/sql/20210405200711.png\" style=\"zoom:80%;\" /><ul><li>张清玫、计算机专业、李勇、刘晨等都是分量 </li>\n</ul><h5 id=\"基数（cardinal-number）\">基数（Cardinal number）<a href=\"#基数（cardinal-number）\" title=\"基数（Cardinal number）\"></a></h5><ul><li><p>若Di（i＝1， 2， …， n）为有限集，其基数为mi（i＝1，2， …， n） ， 则D1× D2× …× Dn的基数M为：</p>\n<img src=\"https://cdn.jsdelivr.net/gh/Dxsummer/cdn/img/sql/20210405201042.png\" style=\"zoom:80%;\" /></li>\n</ul><h5 id=\"笛卡尔积的表示方法\">笛卡尔积的表示方法<a href=\"#笛卡尔积的表示方法\" title=\"笛卡尔积的表示方法\"></a></h5><ul><li>笛卡尔积可表示为一张<strong>二维表</strong></li>\n<li>表中的<strong>每行对应一个<font color=\"red\">元组</font></strong>， 表中的<strong>每列对应一个<font color=\"red\">域</font></strong></li>\n</ul><blockquote>\n<p>例</p>\n</blockquote>\n<p>例如， 给出3个域：<br>D1=导师集合SUPERVISOR=｛ 张清玫， 刘逸｝<br>D2=专业集合SPECIALITY=｛ 计算机专业， 信息专业｝<br>D3=研究生集合POSTGRADUATE=｛ 李勇， 刘晨， 王敏｝<br><strong>D1， D2， D3的笛卡尔积为</strong>  </p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">D1× D2× D3＝｛</span><br><span class=\"line\">(张清玫，计算机专业，李勇)， (张清玫，计算机专业，刘晨)，</span><br><span class=\"line\">(张清玫，计算机专业，王敏)， (张清玫，信息专业，李勇)，</span><br><span class=\"line\">(张清玫，信息专业，刘晨)， (张清玫，信息专业，王敏)，</span><br><span class=\"line\">(刘逸，计算机专业，李勇)， (刘逸，计算机专业，刘晨)，</span><br><span class=\"line\">(刘逸，计算机专业，王敏)， (刘逸，信息专业，李勇)，</span><br><span class=\"line\">(刘逸，信息专业，刘晨)， (刘逸，信息专业，王敏) ｝</span><br></pre></td></tr></table></figure><p><strong>基数为2× 2× 3＝12</strong>  </p>\n<h4 id=\"113-关系\">1.1.3 关系<a href=\"#113-关系\" title=\"1.1.3 关系\"></a></h4><ol><li><p><strong>关系</strong><br><code>D1× D2× …× Dn</code>的子集叫作在域<code>D1， D2， …， Dn</code>上的关系， 表示为<br><code>R（D1， D2， …， Dn）</code></p>\n<ul><li><p>R： 关系名</p>\n</li>\n<li><p>n： 关系的目或度（Degree）  </p>\n</li>\n</ul></li>\n<li><p><strong>元组</strong><br>关系中的每个元素是关系中的元组， 通常用<code>t</code>表示。</p>\n</li>\n<li><p><strong>单元关系与二元关系</strong><br>当n=1时， 称该关系为<strong>单元关系</strong>（Unary relation）或<strong>一元关系</strong><br>当n=2时， 称该关系为<strong>二元关系</strong>（Binary relation）  </p>\n</li>\n<li><p><strong>关系的表示</strong><br>关系也是一个<strong>二维表</strong>， 表的每行对应一个元组， 表的每列对应一个域  </p>\n</li>\n<li><p><strong>属性</strong></p>\n<ul><li>关系中<mark><strong>不同列可以对应相同的域</strong></mark></li>\n<li>为了加以区分， 必须对<strong>每列起一个名字</strong>， 称为<strong>属性</strong>（Attribute）</li>\n<li><strong>n目关系必有n个属性</strong>  </li>\n</ul></li>\n<li><p><strong>码</strong></p>\n<ul><li><strong>候选码</strong>（Candidate key）<br>若关系中的<mark><strong>某一属性组的值能唯一地标识一个元组</strong></mark>，则称该属性组为<strong>候选码</strong><br><strong>简单的情况</strong>：候选码只包含一个属性</li>\n<li><strong>全码</strong>（All-key）<br><strong>最极端的情况</strong>：关系模式的<strong>所有属性组是这个关系模式的候选码</strong>，称为<strong>全码</strong>（All-key）</li>\n<li><strong>主码</strong><br>若一个关系有多个候选码，则选定其中一个为<strong>主码</strong>（Primary key）</li>\n<li><strong>主属性</strong><br><mark><strong>候选码的诸属性</strong></mark>称为<strong>主属性</strong>（Prime attribute）<br>不包含在任何侯选码中的属性称为<strong>非主属性</strong>（Non-Primeattribute）或<strong>非码属性</strong>（Non-key attribute）    </li>\n</ul></li>\n<li><p><strong>三类关系</strong><br><strong><u>基本关系</u></strong>（基本表或基表）</p>\n<pre><code>实际存在的表，是实际存储数据的逻辑表示</code></pre><p><strong>查询表</strong></p>\n<pre><code>查询结果对应的表</code></pre><p><strong>视图表</strong></p>\n<pre><code>由基本表或其他视图表导出的表， 是虚表， 不对应实际存储的数据  </code></pre></li>\n<li><p><strong>基本关系的性质</strong><br>① 列是同质的（Homogeneous）<br>② <strong>不同的列可出自同一个域</strong></p>\n<ul><li>其中的<strong>每一列称为一个属性</strong></li>\n<li>不同的属性要给予不同的属性名</li>\n</ul><p>③ <strong>列的顺序无所谓</strong>, 列的次序可以任意交换<br>④ <strong><mark>任意两个元组的候选码不能相同</mark></strong><br>⑤ <strong>行的顺序无所谓</strong>， 行的次序可以任意交换  </p>\n</li>\n</ol><h3 id=\"12-关系模式\">1.2 关系模式<a href=\"#12-关系模式\" title=\"1.2 关系模式\"></a></h3><h4 id=\"121-什么是关系模式\">1.2.1 什么是关系模式<a href=\"#121-什么是关系模式\" title=\"1.2.1 什么是关系模式\"></a></h4><ul><li><p>关系模式（ Relation Schema） 是<strong>型</strong></p>\n</li>\n<li><p>关系是<strong>值</strong></p>\n</li>\n<li><p>关系模式是对关系的<strong>描述</strong></p>\n<ul><li>元组集合的结构<ul><li><strong>属性</strong>构成</li>\n<li><strong>属性</strong>来自的<strong>域</strong></li>\n<li>属性与域之间的映象关系</li>\n</ul></li>\n<li>完整性约束条件  </li>\n</ul></li>\n</ul><h4 id=\"122-定义关系模式\">1.2.2 定义关系模式<a href=\"#122-定义关系模式\" title=\"1.2.2 定义关系模式\"></a></h4><p>关系模式可以形式化地表示为：<code>R（ U， D， DOM， F）</code></p>\n<div class=\"φcz\"><div class=\"φdb\"><table><thead><tr>\n<th>R</th><th>关系名</th></tr>\n</thead><tbody><tr>\n<td>U</td><td>组成该关系的<strong>属性名</strong>集合</td></tr>\n<tr>\n<td>D</td><td>U中<strong>属性所来自的域</strong></td></tr>\n<tr>\n<td>DOM</td><td><strong>属性向域的映象</strong>集合（<mark><strong>说明它们分别出自哪个域</strong></mark>)</td></tr>\n<tr>\n<td>F</td><td><strong>属性间数据的依赖关系</strong>的集合</td></tr>\n</tbody></table></div></div><blockquote>\n<p>例:</p>\n</blockquote>\n<p><u>导师</u>和<u>研究生</u>出自同一个域——<strong>人</strong>，<br>取不同的属性名，并<strong>在模式中定义属性向域的映象</strong>，即<strong>说明它们分别出自哪个域</strong>：<br>DOM（SUPERVISOR-PERSON）<br>= DOM（POSTGRADUATE-PERSON）<br>= PERSON  </p>\n<p><strong>关系模式通常可以简记为</strong><br><code>R (U)</code> 或 <code>R (A1， A2， …， An)</code></p>\n<ul><li>R: <strong>关系名</strong></li>\n<li>A1， A2， …， An : <strong>属性名</strong></li>\n</ul><p>注：<strong>域名</strong>及<strong>属性向域的映象</strong>常常直接说明为<strong>属性的类型、长度</strong>  </p>\n<h4 id=\"123-关系模式与关系\">1.2.3 关系模式与关系<a href=\"#123-关系模式与关系\" title=\"1.2.3 关系模式与关系\"></a></h4><p><strong>关系模式</strong></p>\n<ul><li>对关系的描述</li>\n<li><strong>静态</strong>的、 稳定的</li>\n</ul><p><strong>关系</strong></p>\n<ul><li>关系模式在某一时刻的状态或内容</li>\n<li><strong>动态</strong>的、 随时间不断变化的</li>\n</ul><p><strong>关系模式和关系往往笼统称为关系</strong></p>\n<ul><li>通过上下文加以区别  </li>\n</ul><h3 id=\"13-关系数据库\">1.3 关系数据库<a href=\"#13-关系数据库\" title=\"1.3 关系数据库\"></a></h3><ul><li><strong>关系数据库</strong><ul><li>在一个给定的应用领域中， 所有关系的集合构成一个关系数据库</li>\n</ul></li>\n<li><strong>关系数据库的型与值</strong><ul><li>关系数据库的<strong>型</strong>: 关系数据库<strong>模式</strong>， 是对关系数据库的<strong>描述</strong></li>\n<li>关系数据库的<strong>值</strong>: 关系模式在<strong>某一时刻对应的关系的集合</strong>， 通常称为<strong>关系数据库</strong>    </li>\n</ul></li>\n</ul><h3 id=\"14-关系模型的存储结构\">1.4 关系模型的存储结构<a href=\"#14-关系模型的存储结构\" title=\"1.4 关系模型的存储结构\"></a></h3><ul><li>关系数据库的物理组织<ul><li>有的关系数据库管理系统中<strong>一个表对应一个操作系统文件</strong>，将物理数据组织交给操作系统完成</li>\n<li>有的关系数据库管理系统从操作系统那里申请若干个大的文件，自己划分文件空间，组织表、索引等存储结构，并进行存储管理  </li>\n</ul></li>\n</ul><h2 id=\"2-关系操作\">2. 关系操作<a href=\"#2-关系操作\" title=\"2. 关系操作\"></a></h2><p><strong>常用的关系操作</strong></p>\n<ul><li><p><strong>查询操作</strong>：选择、 投影、 连接、 除、 并、 差、 交、 笛卡尔积</p>\n</li>\n<li><p>选择、 投影、 并、 差、 笛卡尔基是5种基本操作</p>\n</li>\n<li><p><strong>数据更新</strong>：插入、 删除、 修改</p>\n</li>\n</ul><p><strong>关系操作的特点</strong></p>\n<ul><li>集合操作方式：操作的对象和结果都是集合， <font color=\"red\"><strong>一次一集合</strong></font>的方式  </li>\n</ul><h3 id=\"21-关系数据库语言的分类\">2.1 关系数据库语言的分类<a href=\"#21-关系数据库语言的分类\" title=\"2.1 关系数据库语言的分类\"></a></h3><p><strong>关系代数语言</strong></p>\n<ul><li>用对关系的运算来表达查询要求</li>\n<li>代表： ISBL</li>\n</ul><p><strong>关系演算语言：用谓词来表达查询要求</strong></p>\n<ul><li>元组关系演算语言<ul><li>谓词变元的基本对象是元组变量</li>\n<li>代表： APLHA, QUEL</li>\n</ul></li>\n<li>域关系演算语言<ul><li>谓词变元的基本对象是域变量</li>\n<li>代表： QBE</li>\n</ul></li>\n</ul><p><strong>具有关系代数和关系演算双重特点的语言</strong></p>\n<ul><li>代表： SQL（Structured Query Language）  </li>\n</ul><h2 id=\"3-关系的完整性\">3. 关系的完整性<a href=\"#3-关系的完整性\" title=\"3. 关系的完整性\"></a></h2><p><strong>实体完整性和参照完整性</strong></p>\n<ul><li>关系模型必须满足的完整性约束条件称为关系的两个不变性， 应该由关系系统自动支持</li>\n</ul><p><strong>用户定义的完整性</strong></p>\n<ul><li>应用领域需要遵循的约束条件， 体现了具体领域中的语义约束  </li>\n</ul><h3 id=\"31-实体完整性\">3.1 实体完整性<a href=\"#31-实体完整性\" title=\"3.1 实体完整性\"></a></h3><p><strong>实体完整性规则（Entity Integrity）</strong></p>\n<ul><li>若<strong>属性A是基本关系R的主属性</strong>， 则<strong>属性A不能取空值</strong></li>\n<li>空值就是“不知道” 或“不存在” 或“无意义” 的值</li>\n</ul><blockquote>\n<p> 例：</p>\n</blockquote>\n<p>​    选修（<u>学号， 课程号</u>， 成绩）<br>​    “学号、 课程号” 为<strong>主码</strong><br>​    “学号” 和“课程号” 两个属性都<strong>不能取空值</strong>  </p>\n<h3 id=\"32-参照完整性\">3.2 参照完整性<a href=\"#32-参照完整性\" title=\"3.2 参照完整性\"></a></h3><h4 id=\"321-关系间的引用\">3.2.1 关系间的引用<a href=\"#321-关系间的引用\" title=\"3.2.1 关系间的引用\"></a></h4><p>在关系模型中实体及实体间的联系都是用<strong>关系</strong>来描述的， 自然存在着关系与关系间的引用  </p>\n<img src=\"https://cdn.jsdelivr.net/gh/Dxsummer/cdn/img/sql/20210406150140.png\" style=\"zoom:67%;\" /><ul><li><strong>学生关系引用了专业关系的主码“专业号”。</strong> </li>\n<li><strong>学生关系中的“专业号”值必须是<mark>确实存在</mark>的专业的专业号</strong>   </li>\n</ul><blockquote>\n<p>例[2.2]     <strong>学生、 课程、 学生与课程之间的<mark>多对多</mark>联系</strong></p>\n</blockquote>\n<p>学生（<font color=\"red\"><strong>学号</strong></font>， 姓名， 性别， 专业号， 年龄）<br>课程（<font color=\"blue\"><strong>课程号</strong></font>， 课程名， 学分）<br>选修（<font color=\"red\"><strong>学号</strong></font>， <font color=\"blue\"><strong>课程号</strong></font>， 成绩）  </p>\n<blockquote>\n<p> 例[2.3]     学生实体及其内部的<mark><strong>一对多</strong></mark>联系</p>\n</blockquote>\n<p>学生（<font color=\"blue\"><strong>学号</strong></font>， 姓名， 性别， 专业号， 年龄， <font color=\"blue\"><strong>班长</strong></font>）</p>\n<div class=\"φcz\"><div class=\"φdb\"><table><thead><tr>\n<th>学号</th><th>姓名</th><th>性别</th><th>专业号</th><th>年龄</th><th>班长</th></tr>\n</thead><tbody><tr>\n<td>801</td><td>张三</td><td>女</td><td>01</td><td>19</td><td>802</td></tr>\n<tr>\n<td>802</td><td>李四</td><td>男</td><td>01</td><td>20</td><td></td></tr>\n<tr>\n<td>803</td><td>王五</td><td>男</td><td>01</td><td>20</td><td>802</td></tr>\n<tr>\n<td>804</td><td>赵六</td><td>女</td><td>02</td><td>20</td><td>806</td></tr>\n<tr>\n<td>805</td><td>钱七</td><td>男</td><td>02</td><td>19</td><td></td></tr>\n</tbody></table></div></div><ul><li>“学号”是<strong>主码</strong>，“班长”是<strong>外码</strong>，它引用了本关系的“学号”</li>\n<li>“班长” 必须是确实存在的学生的学号  </li>\n</ul><h4 id=\"322-外码\">3.2.2 外码<a href=\"#322-外码\" title=\"3.2.2 外码\"></a></h4><blockquote>\n<p>[例2.1]    <strong>学生关系</strong>的“专业号”与<strong>专业关系</strong>的主码“专业号”相对应</p>\n</blockquote>\n<ul><li>“专业号”属性是学生关系的<strong>外码</strong></li>\n<li>专业关系是<strong>被参照关系</strong>，学生关系为<strong>参照关系</strong></li>\n</ul><img src=\"https://cdn.jsdelivr.net/gh/Dxsummer/cdn/img/sql/20210406153509.jpg\" style=\"zoom: 50%;\" /><blockquote>\n<p>[例2.2]中</p>\n</blockquote>\n<p>选修关系的“学号” 与学生关系的主码“学号”相对应<br>选修关系的“课程号”与课程关系的主码“课程号”相对应</p>\n<img src=\"https://cdn.jsdelivr.net/gh/Dxsummer/cdn/img/sql/20210406154130.jpg\" style=\"zoom:50%;\" /><ul><li>“学号”和“课程号”是选修关系的<strong>外码</strong></li>\n<li>学生关系和课程关系均为<strong>被参照关系</strong></li>\n<li>选修关系为<strong>参照关系</strong></li>\n</ul><blockquote>\n<p>[例2.3]中“班长”与本身的主码“学号”相对应</p>\n</blockquote>\n<img src=\"https://cdn.jsdelivr.net/gh/Dxsummer/cdn/img/sql/20210406163354.jpg\" style=\"zoom:50%;\" /><ul><li>“班长”是<strong>外码</strong></li>\n<li>学生关系既是<strong>参照关系</strong>也是被<strong>参照关系</strong>  </li>\n</ul><h4 id=\"323-参照完整性规则\">3.2.3 参照完整性规则<a href=\"#323-参照完整性规则\" title=\"3.2.3 参照完整性规则\"></a></h4><blockquote>\n<p>[例2.1]    学生关系中每个元组的“<strong><font color=\"red\">专业号</font></strong>” 属性只取两类值：</p>\n</blockquote>\n<p>（1） <font color=\"red\"><strong>空值</strong></font>， 表示尚未给该学生分配专业<br>（ 2） 非空值， 这时该值必须<font color=\"red\"><strong>是专业关系中某个元组的“专业号” 值</strong></font>， 表示该学生不可能分配一个不存在的专业  </p>\n<blockquote>\n<p>[例2.2] 选修（<u>学号</u>， <u>课程号</u>，成绩）</p>\n</blockquote>\n<p>“学号”和“课程号”可能的取值 ：<br>（1）选修关系中的主属性，不能取空值<br>（2）只能取相应被参照关系中已经存在的主码值  </p>\n<blockquote>\n<p>[例2.3]     学生（<u><strong>学号</strong></u>，姓名，性别，专业号，年龄， <strong>班长</strong>）</p>\n</blockquote>\n<p>“班长”属性值可以取两类值：<br>（1）空值，表示该学生所在班级尚未选出班长<br>（2）非空值，该值必须是本关系中某个元组的学号值  </p>\n<h3 id=\"33-用户定义的完整性\">3.3 用户定义的完整性<a href=\"#33-用户定义的完整性\" title=\"3.3 用户定义的完整性\"></a></h3><blockquote>\n<p>例:    课程（<u>课程号</u>， 课程名， 学分）</p>\n</blockquote>\n<ul><li>“课程号” 属性必须取唯一值</li>\n<li>非主属性“课程名” 也不能取空值</li>\n<li>“学分” 属性只能取值{1， 2， 3， 4}  </li>\n</ul><h2 id=\"4-关系代数\">4. 关系代数<a href=\"#4-关系代数\" title=\"4. 关系代数\"></a></h2><p>关系代数是一种抽象的<strong>查询语言</strong>，它用<strong>对关系的运算来表达查询</strong></p>\n<p>关系代数</p>\n<ul><li>运算对象是关系</li>\n<li>运算结果亦为关系</li>\n<li>关系代数的运算符有两类：<strong>集合运算符</strong>和专门的<strong>关系运算符</strong></li>\n</ul><p>传统的集合运算是从关系的“<strong>水平</strong>”方向即<strong>行的角度</strong>进行<br>专门的关系运算不仅涉及行而且涉及列  </p>\n<img src=\"https://cdn.jsdelivr.net/gh/Dxsummer/cdn/img/sql/20210406190303.png\" alt=\"关系代数运算符\" style=\"zoom:67%;\" /><h3 id=\"并（union）\">并（Union）<a href=\"#并（union）\" title=\"并（Union）\"></a></h3><img src=\"https://cdn.jsdelivr.net/gh/Dxsummer/cdn/img/sql/20210406190843.png\" style=\"zoom: 67%;\" /><p><strong>R和S</strong></p>\n<ul><li><mark>具有相同的目n（ 即两个关系<strong>都有n个属性</strong>）</mark></li>\n<li>相应的<strong>属性取自同一个域</strong></li>\n</ul><p><strong>R∪ S</strong></p>\n<ul><li>仍为n目关系， 由属于R或属于S的元组组成<br>R∪ S = { t|t∈R∨t ∈S }  </li>\n</ul><h3 id=\"差-（difference）\">差 （Difference）<a href=\"#差-（difference）\" title=\"差 （Difference）\"></a></h3><img src=\"https://cdn.jsdelivr.net/gh/Dxsummer/cdn/img/sql/20210406192336.png\" style=\"zoom:67%;\" /><p><strong>R和S</strong></p>\n<ul><li><p>具有相同的目n</p>\n</li>\n<li><p>相应的属性取自同一个域</p>\n</li>\n</ul><p><strong>R - S</strong></p>\n<ul><li>仍为n目关系， 由属于R而不属于S的所有元组组成<br>R -S = { t|t∈R∧t ∉ S }  </li>\n</ul><h3 id=\"交（-intersection）\">交（ Intersection）<a href=\"#交（-intersection）\" title=\"交（ Intersection）\"></a></h3><img src=\"https://cdn.jsdelivr.net/gh/Dxsummer/cdn/img/sql/20210406192821.png\" style=\"zoom:67%;\" /><p><strong>R和S</strong></p>\n<ul><li>具有相同的目n</li>\n<li>相应的属性取自同一个域</li>\n</ul><p><strong>R∩S</strong></p>\n<ul><li>仍为n目关系， 由既属于R又属于S的元组组成<br>R∩S = { t|t ∈ R∧t ∈S }<br>R∩S = R –(R-S）  </li>\n</ul><h3 id=\"笛卡尔积（-cartesian-product）\">笛卡尔积（ Cartesian Product）<a href=\"#笛卡尔积（-cartesian-product）\" title=\"笛卡尔积（ Cartesian Product）\"></a></h3><p>严 格 地 讲 应 该 是 广 义 的 <strong>笛 卡 尔 积</strong> （ ExtendedCartesian Product）</p>\n<img src=\"https://cdn.jsdelivr.net/gh/Dxsummer/cdn/img/sql/20210407145832.png\" style=\"zoom:67%;\" /><p>R: n目关系， k1个元组<br>S: m目关系， k2个元组<br><strong>R × S</strong></p>\n<ul><li><strong>列</strong>：（ n+m） 列元组的集合<ul><li>元组的前n列是关系R的一个元组</li>\n<li>后m列是关系S的一个元组</li>\n</ul></li>\n<li><strong>行</strong>： k1× k2个元组<ul><li><img src=\"https://cdn.jsdelivr.net/gh/Dxsummer/cdn/img/sql/20210407145521.png\"></li>\n</ul></li>\n</ul><blockquote>\n<p>符号</p>\n</blockquote>\n<p>R， t∈R， t[Ai]<br>设关系模式为<code>R(A1，A2， …，An)</code><br>它的一个关系设为<strong>R</strong><br><strong>t∈R</strong>表示t是R的一个元组<br><strong>t[A<sub>i</sub>]</strong>则表示元组t中相应于属性Ai的一个分量  </p>\n<h3 id=\"选择（selection）\">选择（Selection）<a href=\"#选择（selection）\" title=\"选择（Selection）\"></a></h3><img src=\"https://cdn.jsdelivr.net/gh/Dxsummer/cdn/img/sql/20210407151839.png\" style=\"zoom:50%;\" />\n<img src=\"https://cdn.jsdelivr.net/gh/Dxsummer/cdn/img/sql/20210407151840.png\" style=\"zoom:50%;\" />\n<img src=\"https://cdn.jsdelivr.net/gh/Dxsummer/cdn/img/sql/20210407151841.png\" style=\"zoom:50%;\" /><p><strong>选择又称为限制（Restriction）</strong></p>\n<p>选择运算符的含义</p>\n<ul><li><p>在关系R中选择满足给定条件的诸元组</p>\n<p>​    σ<sub>F</sub>(R) = {t|t∈R∧F(t)= ‘真’}</p>\n</li>\n<li><p>F：选择条件， 是一个逻辑表达式， 取值为“ 真”或“假”</p>\n<ul><li>基本形式为： X<sub>1</sub>θ Y<sub>1</sub></li>\n<li>θ表示比较运算符， 它可以是＞， ≥， ＜， ≤， ＝或&lt;&gt;  </li>\n</ul></li>\n</ul><p>选择运算是从关系R中选取使逻辑表达式F为真的元组， 是从<mark><strong>行的角度进行的运算</strong></mark>  </p>\n<img src=\"https://cdn.jsdelivr.net/gh/Dxsummer/cdn/img/sql/20210407183958.png\" style=\"zoom:50%;\" /><blockquote>\n<p><strong>[例2.4] 查询信息系（IS系） 全体学生。</strong></p>\n</blockquote>\n<p>σ<sub>Sdept= ‘IS’</sub> (Student)</p>\n<p><strong>结果：</strong></p>\n<div class=\"φcz\"><div class=\"φdb\"><table><thead><tr>\n<th>Sno</th><th>Sname</th><th>Ssex</th><th>Sage</th><th>Sdept</th></tr>\n</thead><tbody><tr>\n<td>201215125</td><td>张立</td><td>男</td><td>19</td><td>IS</td></tr>\n</tbody></table></div></div><blockquote>\n<p><strong>[例2.5] 查询年龄小于20岁的学生。</strong></p>\n</blockquote>\n<p>σ<sub>Sage &lt; 20</sub>(Student)</p>\n<p><strong>结果：</strong></p>\n<div class=\"φcz\"><div class=\"φdb\"><table><thead><tr>\n<th>Sno</th><th>Sname</th><th>Ssex</th><th>Sage</th><th>Sdept</th></tr>\n</thead><tbody><tr>\n<td>201215122</td><td>刘晨</td><td>女</td><td>19</td><td>IS</td></tr>\n<tr>\n<td>201215123</td><td>王敏</td><td>女</td><td>18</td><td>MA</td></tr>\n<tr>\n<td>201215125</td><td>张立</td><td>男</td><td>19</td><td>IS</td></tr>\n</tbody></table></div></div><h3 id=\"投影（projection）\">投影（Projection）<a href=\"#投影（projection）\" title=\"投影（Projection）\"></a></h3><ul><li><p>从R中选择出若干属性列组成新的关系</p>\n<pre><code>π&lt;sub&gt;A&lt;/sub&gt;(R) = { t[A] | t ∈R }\nA： R中的属性列</code></pre></li>\n<li><p>投影操作主要是<mark><strong>从列的角度进行运算</strong></mark>  </p>\n</li>\n</ul><img src=\"https://cdn.jsdelivr.net/gh/Dxsummer/cdn/img/sql/20210407191002.png\" style=\"zoom:50%;\" /><ul><li>投影之后不仅<strong>取消了原关系中的某些列</strong>， 而且还<strong>可能取消某些元组</strong>（避免重复行）  </li>\n</ul><blockquote>\n<p>[例2.6] 查询学生的姓名和所在系。</p>\n</blockquote>\n<p>即求Student关系上学生姓名和所在系两个属性上的投影</p>\n<p>π<sub>Sname,Sdept</sub>(Student)</p>\n<p>结果：</p>\n<div class=\"φcz\"><div class=\"φdb\"><table><thead><tr>\n<th>Sname</th><th>Sdept</th></tr>\n</thead><tbody><tr>\n<td>李勇</td><td>CS</td></tr>\n<tr>\n<td>刘晨</td><td>CS</td></tr>\n<tr>\n<td>王敏</td><td>MA</td></tr>\n<tr>\n<td>张立</td><td>IS</td></tr>\n</tbody></table></div></div><blockquote>\n<p> <strong>[例2.7] 查询学生关系Student中都有哪些系。</strong></p>\n</blockquote>\n<p>π<sub>Sdept</sub>(Student)</p>\n<p>结果：</p>\n<div class=\"φcz\"><div class=\"φdb\"><table><thead><tr>\n<th>Sdept</th></tr>\n</thead><tbody><tr>\n<td>CS</td></tr>\n<tr>\n<td>IS</td></tr>\n<tr>\n<td>MA</td></tr>\n</tbody></table></div></div><h3 id=\"连接（join）\">连接（Join）<a href=\"#连接（join）\" title=\"连接（Join）\"></a></h3><p>连接也称为<strong>θ连接</strong></p>\n<p><strong>连接运算的含义</strong></p>\n<p>​    从两个关系的笛卡尔积中选取属性间满足一定条件的元组<br>​    <img src=\"https://cdn.jsdelivr.net/gh/Dxsummer/cdn/img/sql/20210407193052.png\" style=\"zoom:67%;\" /></p>\n<ul><li><p>A和B：分别为R和S上度数相等且可比的属性组</p>\n</li>\n<li><p>θ：比较运算符</p>\n</li>\n<li><p>连接运算从R和S的广义笛卡尔积R× S中选取R关系在A属性组上的值与S关系在B属性组上的值满足比较关系θ的元组  </p>\n</li>\n</ul><p><strong>等值连接（equijoin）</strong></p>\n<ul><li>θ为“＝” 的连接运算称为等值连接</li>\n<li>从关系R与S的广义笛卡尔积中选取A、 B属性值相等的那些元组， 即等值连接为：<img src=\"https://cdn.jsdelivr.net/gh/Dxsummer/cdn/img/sql/20210407193232.png\" style=\"zoom: 67%;\" /></li>\n</ul><p><strong>自然连接（Natural join）</strong></p>\n<ul><li>自然连接是一种<strong>特殊的等值连接</strong><ul><li>两个关系中进行<strong>比较的分量必须是相同的属性组</strong></li>\n<li><strong>在结果中把重复的属性列去掉</strong></li>\n</ul></li>\n<li>自然连接的含义</li>\n<li>R和S具有相同的属性组B<img src=\"https://cdn.jsdelivr.net/gh/Dxsummer/cdn/img/sql/20210407193528.png\" style=\"zoom:67%;\" /></li>\n</ul><p><strong>从行的角度进行运算</strong>  </p>\n<img src=\"https://cdn.jsdelivr.net/gh/Dxsummer/cdn/img/sql/20210407193722.png\" style=\"zoom:67%;\" /><p><strong>自然连接</strong>还需要<strong>取消重复列</strong>，所以是同时<strong>从行和列的角度进行运算</strong>。  </p>\n<blockquote>\n<p>[例2.8]关系R和关系S 如下所示：  </p>\n</blockquote>\n<img src=\"https://cdn.jsdelivr.net/gh/Dxsummer/cdn/img/sql/20210407194210.png\" style=\"zoom:50%;\" /><img src=\"https://cdn.jsdelivr.net/gh/Dxsummer/cdn/img/sql/20210407194051.png\" style=\"zoom: 50%;\" /><p><img src=\"https://cdn.jsdelivr.net/gh/Dxsummer/cdn/img/sql/20210407194350.png\" style=\"zoom:50%;\" /><img src=\"https://cdn.jsdelivr.net/gh/Dxsummer/cdn/img/sql/20210407195213.png\"></p>\n<h4 id=\"外连接\">外连接<a href=\"#外连接\" title=\"外连接\"></a></h4><img src=\"https://cdn.jsdelivr.net/gh/Dxsummer/cdn/img/sql/20210407195213.png\" style=\"zoom:50%;\" /><img src=\"https://cdn.jsdelivr.net/gh/Dxsummer/cdn/img/sql/20210407195429.png\" style=\"zoom:50%;\" /><h3 id=\"除运算（division）\">除运算（Division）<a href=\"#除运算（division）\" title=\"除运算（Division）\"></a></h3><p>R与S的除运算得到一个新的关系P(X)，<br>P是R中满足下列条件的元组在 X 属性列上的投影：<br>元组在X上分量值x的象集Y<sub>x</sub>包含S在Y上投影的集合， 记作：<br>    <img src=\"https://cdn.jsdelivr.net/gh/Dxsummer/cdn/img/sql/20210407195836.png\" style=\"zoom: 67%;\" /></p>\n<p><strong>除操作是同时从行和列角度进行运算</strong>  </p>\n<img src=\"https://cdn.jsdelivr.net/gh/Dxsummer/cdn/img/sql/20210407200013.png\" style=\"zoom: 67%;\" /><blockquote>\n<p> <strong>[例2.9]设关系R、 S分别为下图的(a)和(b)， RS的结果为图(c)</strong>  </p>\n</blockquote>\n<img src=\"https://cdn.jsdelivr.net/gh/Dxsummer/cdn/img/sql/20210407200323.png\" style=\"zoom:50%;\" /><ul><li>在关系R中， A可以取四个值{a1， a2， a3， a4}<br>a<sub>1</sub>的象集为 {(b1， c2)， (b2， c3)， (b2， c1)}<br>a2的象集为 {(b3， c7)， (b2， c3)}<br>a3的象集为 {(b4， c6)}<br>a4的象集为 {(b6， c6)}</li>\n<li>S在(B，C)上的投影为<br>{(b1， c2)， (b2， c1)， (b2， c3) }</li>\n<li><strong>只有a1的象集包含了S在(B， C)属性组上的投影</strong><br>所以 R÷S ={a1}  </li>\n</ul><h1 id=\"第三章-关系数据库标准语言sql\">第三章 关系数据库标准语言SQL<a href=\"#第三章-关系数据库标准语言sql\" title=\"第三章 关系数据库标准语言SQL\"></a></h1><h2 id=\"数据定义\">数据定义<a href=\"#数据定义\" title=\"数据定义\"></a></h2><img src=\"https://cdn.jsdelivr.net/gh/Dxsummer/cdn/img/python/20210410200353.png\" style=\"zoom:67%;\" /><div class=\"φcz\"><div class=\"φdb\"><table><thead><tr>\n<th>数据类型</th><th>含义</th></tr>\n</thead><tbody><tr>\n<td>CHAR(n),CHARACTER(n)</td><td>长度为n的定长字符串</td></tr>\n<tr>\n<td>VARCHAR(n), CHARACTERVARYING(n)</td><td>最大长度为n的变长字符串</td></tr>\n<tr>\n<td>CLOB</td><td>字符串大对象</td></tr>\n<tr>\n<td>BLOB</td><td>二进制大对象</td></tr>\n<tr>\n<td>INT， INTEGER</td><td>长整数（4字节）</td></tr>\n<tr>\n<td>SMALLINT</td><td>短整数（2字节）</td></tr>\n<tr>\n<td>BIGINT</td><td>大整数（8字节）</td></tr>\n<tr>\n<td>NUMERIC(p， d)</td><td>定点数，由p位数字（不包括符号、小数点）组成，小数后面有d位数字</td></tr>\n<tr>\n<td>DECIMAL(p, d), DEC(p, d)</td><td>同NUMERIC</td></tr>\n<tr>\n<td>REAL</td><td>取决于机器精度的单精度浮点数</td></tr>\n<tr>\n<td>DOUBLE PRECISION</td><td>取决于机器精度的双精度浮点数</td></tr>\n<tr>\n<td>FLOAT(n)</td><td>可选精度的浮点数，精度至少为n位数字</td></tr>\n<tr>\n<td>BOOLEAN</td><td>逻辑布尔量</td></tr>\n<tr>\n<td>DATE</td><td>日期，包含年、月、日，格式为YYYY-MM-DD</td></tr>\n<tr>\n<td>TIME</td><td>时间，包含一日的时、分、秒，格式为HH:MM:SS</td></tr>\n<tr>\n<td>TIMESTAMP</td><td>时间戳类型</td></tr>\n<tr>\n<td>INTERVAL</td><td>时间间隔类型</td></tr>\n</tbody></table></div></div><h3 id=\"模式\">模式<a href=\"#模式\" title=\"模式\"></a></h3><h4 id=\"定义模式\"><strong>定义模式</strong><a href=\"#定义模式\" title=\"定义模式\"></a></h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">SCHEMA</span> &lt;模式名&gt; AUTHORIZATION &lt;用户名&gt;[&lt;表定义子句&gt;|&lt;视图定义子句&gt;|&lt;授权定义子句&gt;]</span><br></pre></td></tr></table></figure><blockquote>\n<p>[例3.1] 为用户WANG定义一个学生-课程模式S-T</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">SCHEMA</span> “S-T” AUTHORIZATION WANG;</span><br></pre></td></tr></table></figure><blockquote>\n<p>[例3.2] <code>CREATE SCHEMA AUTHORIZATION WANG;</code></p>\n</blockquote>\n<p>该语句没有指定&lt;模式名&gt;， &lt;模式名&gt;隐含为&lt;用户名&gt;  </p>\n<blockquote>\n<p>[例3.3]为用户ZHANG创建了一个模式TEST，并且在其中定义一个表TAB1</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">SCHEMA</span> <span class=\"keyword\">TEST</span> AUTHORIZATION ZHANG</span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> TAB1 (COL1 <span class=\"built_in\">SMALLINT</span>,</span><br><span class=\"line\">                   COL2 <span class=\"built_in\">INT</span>,</span><br><span class=\"line\">                   COL3 <span class=\"built_in\">CHAR</span>(<span class=\"number\">20</span>),</span><br><span class=\"line\">                   COL4 <span class=\"built_in\">NUMERIC</span>(<span class=\"number\">10</span>,<span class=\"number\">3</span>),</span><br><span class=\"line\">                   COL5 <span class=\"built_in\">DECIMAL</span>(<span class=\"number\">5</span>,<span class=\"number\">2</span>)</span><br><span class=\"line\">                  );</span><br></pre></td></tr></table></figure><h4 id=\"删除模式\">删除模式<a href=\"#删除模式\" title=\"删除模式\"></a></h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">DROP</span> <span class=\"keyword\">SCHEMA</span> &lt;模式名&gt; &lt;<span class=\"keyword\">CASCADE</span>|RESTRICT&gt;</span><br></pre></td></tr></table></figure><p><strong>CASCADE（cascade级联）</strong></p>\n<ul><li>删除模式的同时把<strong>该模式中所有的数据库对象全部删除</strong></li>\n</ul><p><strong>RESTRICT（restrict限制）</strong></p>\n<ul><li>如果该模式中定义了下属的数据库对象（如表、视图等），则拒绝该删除语句的执行。</li>\n<li><strong>仅当该模式中没有任何下属的对象时才能执行</strong>。  </li>\n</ul><blockquote>\n<p>[例3.4]     <code>DROP SCHEMA ZHANG CASCADE;</code></p>\n</blockquote>\n<p>删除模式<code>ZHANG</code><br>同时该模式中定义的表<code>TAB1</code>也被删除  </p>\n<h3 id=\"基本表\">基本表<a href=\"#基本表\" title=\"基本表\"></a></h3><h4 id=\"定义\">定义<a href=\"#定义\" title=\"定义\"></a></h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> &lt;表名&gt;</span><br><span class=\"line\">(&lt;列名&gt; &lt;数据类型&gt;[ &lt;列级完整性约束条件&gt; ]</span><br><span class=\"line\"> [,&lt;列名&gt; &lt;数据类型&gt;[ &lt;列级完整性约束条件&gt;] ]</span><br><span class=\"line\">… </span><br><span class=\"line\"> [,&lt;表级完整性约束条件&gt; ] );</span><br></pre></td></tr></table></figure><ul><li><strong>&lt;表名&gt;</strong>：所要定义的基本表的名字</li>\n<li><strong>&lt;列名&gt;</strong>：组成该表的各个属性（列）</li>\n<li><strong>&lt;列级完整性约束条件&gt;</strong>：涉及相应属性列的完整性约束条件</li>\n<li><strong>&lt;表级完整性约束条件&gt;</strong>：涉及一个或多个属性列的完整性约束条件</li>\n<li>如果<strong>完整性约束条件</strong><u>涉及到该表的多个属性列</u>，则<strong>必须定义在表级上</strong>，否则既可以定义在列级也可以定义在表级。  </li>\n</ul><blockquote>\n<p>[例3.5] 建立“学生” 表Student。 学号是主码， 姓名取值唯一。</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> Student</span><br><span class=\"line\">    (Sno <span class=\"built_in\">CHAR</span>(<span class=\"number\">9</span>) PRIMARY <span class=\"keyword\">KEY</span>,</span><br><span class=\"line\">                                <span class=\"comment\">/* 列级完整性约束条件,Sno是主码*/</span></span><br><span class=\"line\">    Sname <span class=\"built_in\">CHAR</span>(<span class=\"number\">20</span>) <span class=\"keyword\">UNIQUE</span>, \t\t<span class=\"comment\">/* Sname取唯一值*/</span></span><br><span class=\"line\">    Ssex <span class=\"built_in\">CHAR</span>(<span class=\"number\">2</span>),</span><br><span class=\"line\">    Sage <span class=\"built_in\">SMALLINT</span>,</span><br><span class=\"line\">    Sdept <span class=\"built_in\">CHAR</span>(<span class=\"number\">20</span>)</span><br><span class=\"line\">    );</span><br></pre></td></tr></table></figure><blockquote>\n<p>[例3.6 ] 建立一个“课程”表Course</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> Course</span><br><span class=\"line\">    (Cno <span class=\"built_in\">CHAR</span>(<span class=\"number\">4</span>) PRIMARY <span class=\"keyword\">KEY</span>,</span><br><span class=\"line\">    Cname <span class=\"built_in\">CHAR</span>(<span class=\"number\">40</span>),</span><br><span class=\"line\">    Cpno <span class=\"built_in\">CHAR</span>(<span class=\"number\">4</span>),</span><br><span class=\"line\">    Ccredit <span class=\"built_in\">SMALLINT</span>，</span><br><span class=\"line\">    <span class=\"keyword\">FOREIGN</span> <span class=\"keyword\">KEY</span> (Cpno) <span class=\"keyword\">REFERENCES</span> Course(Cno)</span><br><span class=\"line\">     \t\t\t\t\t<span class=\"comment\">/*Cpno是外码被参照表是Course被参照列是Cno*/</span></span><br><span class=\"line\">    );</span><br></pre></td></tr></table></figure><blockquote>\n<p>[例3.7] 建立一个学生选课表SC</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> SC</span><br><span class=\"line\">    (Sno <span class=\"built_in\">CHAR</span>(<span class=\"number\">9</span>),</span><br><span class=\"line\">    Cno <span class=\"built_in\">CHAR</span>(<span class=\"number\">4</span>),</span><br><span class=\"line\">    Grade <span class=\"built_in\">SMALLINT</span>，</span><br><span class=\"line\">    PRIMARY <span class=\"keyword\">KEY</span> (Sno,Cno),</span><br><span class=\"line\">    \t<span class=\"comment\">/* 主码由两个属性构成，必须作为表级完整性进行定义*/</span></span><br><span class=\"line\">    <span class=\"keyword\">FOREIGN</span> <span class=\"keyword\">KEY</span> (Sno) <span class=\"keyword\">REFERENCES</span> Student(Sno),</span><br><span class=\"line\">    \t<span class=\"comment\">/* 表级完整性约束条件， Sno是外码，被参照表是Student */</span></span><br><span class=\"line\">    <span class=\"keyword\">FOREIGN</span> <span class=\"keyword\">KEY</span> (Cno)<span class=\"keyword\">REFERENCES</span> Course(Cno)</span><br><span class=\"line\">    \t<span class=\"comment\">/* 表级完整性约束条件， Cno是外码，被参照表是Course*/</span></span><br><span class=\"line\">    );</span><br></pre></td></tr></table></figure><h4 id=\"插入基本表\">插入基本表<a href=\"#插入基本表\" title=\"插入基本表\"></a></h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> S</span><br><span class=\"line\">  <span class=\"keyword\">VALUES</span>(<span class=\"string\">'S1'</span>,<span class=\"string\">'精益'</span>,<span class=\"number\">20</span>,<span class=\"string\">'天津'</span>);</span><br><span class=\"line\">  <span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> S</span><br><span class=\"line\">  <span class=\"keyword\">VALUES</span>(<span class=\"string\">'S2'</span>,<span class=\"string\">'盛锡'</span>,<span class=\"number\">10</span>,<span class=\"string\">'北京'</span>);</span><br><span class=\"line\">  <span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> S</span><br><span class=\"line\">  <span class=\"keyword\">VALUES</span>(<span class=\"string\">'S3'</span>,<span class=\"string\">'东方红'</span>,<span class=\"number\">30</span>,<span class=\"string\">'北京'</span>);</span><br><span class=\"line\">  <span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> S</span><br><span class=\"line\">  <span class=\"keyword\">VALUES</span>(<span class=\"string\">'S4'</span>,<span class=\"string\">'丰盛泰'</span>,<span class=\"number\">20</span>,<span class=\"string\">'天津'</span>);</span><br><span class=\"line\">  <span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> S</span><br><span class=\"line\">  <span class=\"keyword\">VALUES</span>(<span class=\"string\">'S5'</span>,<span class=\"string\">'为民'</span>,<span class=\"number\">30</span>,<span class=\"string\">'上海'</span>);</span><br></pre></td></tr></table></figure><h4 id=\"修改基本表\">修改基本表<a href=\"#修改基本表\" title=\"修改基本表\"></a></h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> &lt;表名&gt;</span><br><span class=\"line\">    [ <span class=\"keyword\">ADD</span>[<span class=\"keyword\">COLUMN</span>] &lt;新列名&gt; &lt;数据类型&gt; [ 完整性约束 ] ]</span><br><span class=\"line\">    [ <span class=\"keyword\">ADD</span> &lt;表级完整性约束&gt;]</span><br><span class=\"line\">    [ <span class=\"keyword\">DROP</span> [ <span class=\"keyword\">COLUMN</span> ] &lt;列名&gt; [<span class=\"keyword\">CASCADE</span>| RESTRICT] ]</span><br><span class=\"line\">    [ <span class=\"keyword\">DROP</span> <span class=\"keyword\">CONSTRAINT</span>&lt;完整性约束名&gt;[ RESTRICT | <span class=\"keyword\">CASCADE</span> ] ]</span><br><span class=\"line\">    [<span class=\"keyword\">ALTER</span> <span class=\"keyword\">COLUMN</span> &lt;列名&gt;&lt;数据类型&gt; ] ;</span><br></pre></td></tr></table></figure><ul><li>&lt;表名&gt;是要修改的基本表</li>\n<li>ADD子句用于增加新列、新的列级完整性约束条件和新的表级完整性约束条件</li>\n<li><strong><code>DROP COLUMN</code></strong>子句用于<strong>删除表中的列</strong></li>\n<li>如果指定了<strong><code>CASCADE</code></strong>短语，则<strong>自动删除引用了该列的其他对象</strong></li>\n<li>如果指定了<strong><code>RESTRICT</code></strong>短语，则<strong>如果该列被其他对象引用，关系数据库管理系统将拒绝删除该列</strong></li>\n<li><strong><code>DROP CONSTRAINT</code></strong>子句用于<strong>删除指定的完整性约束条件</strong></li>\n<li><strong><code>ALTER COLUMN</code></strong>子句用于<strong>修改原有的列定义，包括修改列名和数据类型</strong>  </li>\n</ul><blockquote>\n<p>[例3.8] 向Student表增加“入学时间” 列， 其数据类型为日期型</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> Student <span class=\"keyword\">ADD</span> S_entrance <span class=\"built_in\">DATE</span>;</span><br></pre></td></tr></table></figure><p>不管基本表中原来是否已有数据，新增加的列一律为空值  </p>\n<blockquote>\n<p>[例3.9] 将年龄的数据类型由字符型（假设原来的数据类型是字符型）改为整数。</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> Student <span class=\"keyword\">ALTER</span> <span class=\"keyword\">COLUMN</span> Sage <span class=\"built_in\">INT</span>;</span><br></pre></td></tr></table></figure><blockquote>\n<p>[例3.10] 增加课程名称必须取唯一值的约束条件。</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> Course <span class=\"keyword\">ADD</span> <span class=\"keyword\">UNIQUE</span>(Cname);</span><br></pre></td></tr></table></figure><h4 id=\"删除基本表\">删除基本表<a href=\"#删除基本表\" title=\"删除基本表\"></a></h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">DROP</span> <span class=\"keyword\">TABLE</span> &lt;表名&gt;［RESTRICT| <span class=\"keyword\">CASCADE</span>］ ;</span><br></pre></td></tr></table></figure><p><strong>RESTRICT：删除表是有限制的。</strong></p>\n<ul><li><p>欲删除的基本表不能被其他表的约束所引用</p>\n</li>\n<li><p>如果存在依赖该表的对象，则此表不能被删除</p>\n</li>\n</ul><p><strong>CASCADE：删除该表没有限制。</strong></p>\n<ul><li>在删除基本表的同时，相关的依赖对象一起删除  </li>\n</ul><blockquote>\n<p>[例3.11]     删除<code>Student</code>表</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">DROP</span> <span class=\"keyword\">TABLE</span> Student <span class=\"keyword\">CASCADE</span>;</span><br></pre></td></tr></table></figure><ul><li>基本表定义被删除，数据被删除</li>\n<li>表上建立的索引、视图、触发器等一般也将被删除  </li>\n</ul><blockquote>\n<p>[例3.12 ]若表上建有视图，选择RESTRICT时表不能删除;选择CASCADE时可以删除表，视图也自动删除。</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">VIEW</span> IS_Student</span><br><span class=\"line\"><span class=\"keyword\">AS</span></span><br><span class=\"line\">    <span class=\"keyword\">SELECT</span> Sno,Sname,Sage</span><br><span class=\"line\">    <span class=\"keyword\">FROM</span> Student</span><br><span class=\"line\">    <span class=\"keyword\">WHERE</span> Sdept=<span class=\"string\">'IS'</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">\t<span class=\"keyword\">DROP</span> <span class=\"keyword\">TABLE</span> Student RESTRICT;</span><br><span class=\"line\"><span class=\"comment\">--ERROR: cannot drop table Student because other objects depend on it</span></span><br></pre></td></tr></table></figure><blockquote>\n<p>[例3.12续]如果选择CASCADE时可以删除表，视图也自动被删除</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">DROP</span> <span class=\"keyword\">TABLE</span> Student <span class=\"keyword\">CASCADE</span>;</span><br><span class=\"line\"><span class=\"comment\">--NOTICE: drop cascades to view IS_Student</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> * <span class=\"keyword\">FROM</span> IS_Student;</span><br><span class=\"line\"><span class=\"comment\">--ERROR: relation \" IS_Student \" does not exist</span></span><br></pre></td></tr></table></figure><img src=\"https://cdn.jsdelivr.net/gh/Dxsummer/cdn/img/sql/20210410204544.png\" style=\"zoom: 67%;\" /><h4 id=\"模式与表\">模式与表<a href=\"#模式与表\" title=\"模式与表\"></a></h4><p><strong>每一个基本表都属于某一个模式</strong></p>\n<p><strong>一个模式包含多个基本表</strong></p>\n<p><strong>定义基本表所属模式</strong></p>\n<ul><li><p>方法一：在表名中明显地给出模式名</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Create</span> <span class=\"keyword\">table</span><span class=\"string\">\"S-T\"</span>.Student(......); <span class=\"comment\">/*模式名为 S-T*/</span></span><br><span class=\"line\"><span class=\"keyword\">Create</span> <span class=\"keyword\">table</span> <span class=\"string\">\"S-T\"</span>.Cource(......);</span><br><span class=\"line\"><span class=\"keyword\">Create</span> <span class=\"keyword\">table</span> <span class=\"string\">\"S-T\"</span>.SC(......);</span><br></pre></td></tr></table></figure></li>\n<li><p>方法二：在创建模式语句中同时创建表</p>\n</li>\n<li><p>方法三：设置所属的模式  </p>\n</li>\n</ul><p><strong>关系数据库管理系统会使用模式列表中第一个存在的模式作为数据库对象的模式名</strong>  </p>\n<p>创建基本表（其他数据库对象也一样）时，若没有指定模式，系统根据搜索路径来确定该对象所属的模式  </p>\n<h3 id=\"索引\">索引<a href=\"#索引\" title=\"索引\"></a></h3><h4 id=\"建立索引\">建立索引<a href=\"#建立索引\" title=\"建立索引\"></a></h4><p>建立索引的目的：<strong>加快查询速度</strong></p>\n<p>关系数据库管理系统中常见索引：</p>\n<ul><li>顺序文件上的索引</li>\n<li>B+树索引（参见爱课程网3.2节动画《B +树的增删<br>改》 ）</li>\n<li>散列（hash）索引</li>\n<li>位图索引</li>\n</ul><p><strong>特点：</strong></p>\n<ul><li>B+树索引具有动态平衡的优点</li>\n<li>HASH索引具有查找速度快的特点  </li>\n</ul><p><strong>语句格式</strong></p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> [<span class=\"keyword\">UNIQUE</span>] [CLUSTER] <span class=\"keyword\">INDEX</span> &lt;索引名&gt; <span class=\"keyword\">ON</span> &lt;表名&gt;(&lt;列名&gt;[&lt;次序&gt;][,&lt;列名&gt;[&lt;次序&gt;] ]…);</span><br></pre></td></tr></table></figure><ul><li>&lt;表名&gt;： 要建索引的基本<strong>表的名字</strong></li>\n<li>索引：可以建立在该<strong>表的一列或多列</strong>上， 各列名之间用逗号分隔</li>\n<li>&lt;次序&gt;： 指定索引值的排列次序， <strong>升序： ASC， 降序：DESC。 缺省值： ASC</strong></li>\n<li>UNIQUE： 此索引的<strong>每一个索引值只对应唯一的数据记录</strong></li>\n<li>CLUSTER： 表示要建立的索引是<strong>聚簇索引</strong>  </li>\n</ul><blockquote>\n<p>[例3.13] 为学生-课程数据库中的Student， Course， SC三个表建立索引。 Student表按学号升序建唯一索引， Course表按课程号升序建唯一索引， SC表按学号升序和课程号降序建唯一索引</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">UNIQUE</span> <span class=\"keyword\">INDEX</span> Stusno <span class=\"keyword\">ON</span> Student(Sno);</span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">UNIQUE</span> <span class=\"keyword\">INDEX</span> Coucno <span class=\"keyword\">ON</span> Course(Cno);</span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">UNIQUE</span> <span class=\"keyword\">INDEX</span> SCno <span class=\"keyword\">ON</span> SC(Sno <span class=\"keyword\">ASC</span>,Cno <span class=\"keyword\">DESC</span>);</span><br></pre></td></tr></table></figure><h4 id=\"修改索引\">修改索引<a href=\"#修改索引\" title=\"修改索引\"></a></h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">INDEX</span> &lt;旧索引名&gt; <span class=\"keyword\">RENAME</span> <span class=\"keyword\">TO</span> &lt;新索引名&gt;</span><br></pre></td></tr></table></figure><blockquote>\n<p>[例3.14] 将SC表的SCno索引名改为SCSno</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">INDEX</span> SCno <span class=\"keyword\">RENAME</span> <span class=\"keyword\">TO</span> SCSno;</span><br></pre></td></tr></table></figure><h4 id=\"删除索引\">删除索引<a href=\"#删除索引\" title=\"删除索引\"></a></h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">DROP</span> <span class=\"keyword\">INDEX</span> &lt;索引名&gt;;</span><br></pre></td></tr></table></figure><p>删除索引时，系统会从数据字典中删去有关该索引的描述。</p>\n<blockquote>\n<p>[例3.15] 删除Student表的Stusname索引</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">DROP</span> <span class=\"keyword\">INDEX</span> Stusname;</span><br></pre></td></tr></table></figure><h3 id=\"数据字典\">数据字典<a href=\"#数据字典\" title=\"数据字典\"></a></h3><p>数据字典是关系数据库管理系统内部的一组系统表，它记录了数据库中所有定义信息：</p>\n<ul><li>关系模式定义</li>\n<li>视图定义</li>\n<li>索引定义</li>\n<li>完整性约束定义</li>\n<li>各类用户对数据库的操作权限</li>\n<li>统计信息等</li>\n</ul><p>关系数据库管理系统在执行SQL的数据定义语句时，实际上就是在更新数据字典表中的相应信息。  </p>\n<h2 id=\"数据查询\">数据查询<a href=\"#数据查询\" title=\"数据查询\"></a></h2><p><strong>语句格式</strong></p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> [<span class=\"keyword\">ALL</span>|<span class=\"keyword\">DISTINCT</span>] &lt;目标列表达式&gt;[,&lt;目标列表达式&gt;] …<span class=\"keyword\">FROM</span> &lt;表名或视图名&gt;[,&lt;表名或视图名&gt; ]…|(<span class=\"keyword\">SELECT</span> 语句)[<span class=\"keyword\">AS</span>]&lt;别名&gt;</span><br><span class=\"line\">[ <span class=\"keyword\">WHERE</span> &lt;条件表达式&gt; ]</span><br><span class=\"line\">[ <span class=\"keyword\">GROUP</span> <span class=\"keyword\">BY</span> &lt;列名<span class=\"number\">1</span>&gt; [ <span class=\"keyword\">HAVING</span> &lt;条件表达式&gt; ] ]</span><br><span class=\"line\">[ <span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span> &lt;列名<span class=\"number\">2</span>&gt; [ <span class=\"keyword\">ASC</span>|<span class=\"keyword\">DESC</span> ] ];</span><br></pre></td></tr></table></figure><ul><li>SELECT子句：指定要显示的属性列</li>\n<li><strong>DISTINCT：去掉重复行</strong></li>\n<li>FROM子句：指定查询对象（基本表或视图）</li>\n<li>WHERE子句：指定查询条件</li>\n<li>GROUP BY子句：对查询结果<strong>按指定列的值分组</strong>， 该<strong>属性列值相等的元组为一个组</strong>。 通常会在每组中作用聚集函数。</li>\n<li><strong>HAVING短语：只有满足指定条件的<u>组才予以输出</u></strong></li>\n<li>ORDER BY子句：对查询结果表按指定列值的<strong>升序或降序排序</strong>  </li>\n</ul><p><strong>查询指定列</strong></p>\n<blockquote>\n<p> [例3.16] 查询全体学生的学号与姓名。</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> Sno,Sname <span class=\"keyword\">FROM</span> Student;</span><br></pre></td></tr></table></figure><blockquote>\n<p> [例3.17] 查询全体学生的姓名、 学号、 所在系。</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> Sname,Sno,Sdept <span class=\"keyword\">FROM</span> Student;</span><br></pre></td></tr></table></figure><p><strong>查询全部列</strong></p>\n<blockquote>\n<p>[例3.18] 查询全体学生的详细记录</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> Sno,Sname,Ssex,Sage,Sdept <span class=\"keyword\">FROM</span> Student;</span><br></pre></td></tr></table></figure><p>或</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> * <span class=\"keyword\">FROM</span> Student;</span><br></pre></td></tr></table></figure><p><strong>查询经过计算的值</strong></p>\n<blockquote>\n<p>[例3.19] 查全体学生的姓名及其出生年份。</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> Sname,<span class=\"number\">2014</span>-Sage <span class=\"comment\">/*假设当时为2014年*/</span></span><br><span class=\"line\"><span class=\"keyword\">FROM</span> Student;</span><br></pre></td></tr></table></figure><p>输出结果：</p>\n<div class=\"φcz\"><div class=\"φdb\"><table><thead><tr>\n<th>Sname</th><th>2014-Sage</th></tr>\n</thead><tbody><tr>\n<td>李勇</td><td>1994</td></tr>\n<tr>\n<td>刘晨</td><td>1995</td></tr>\n<tr>\n<td>王敏</td><td>1996</td></tr>\n<tr>\n<td>张立</td><td>1995</td></tr>\n</tbody></table></div></div><blockquote>\n<p>[例3.20] 查询全体学生的姓名、 出生年份和所在的院系， 要求用小写字母表示系名。</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> Sname,<span class=\"string\">'Year of Birth: '</span>,<span class=\"number\">2014</span>-Sage,<span class=\"keyword\">LOWER</span>(Sdept) <span class=\"keyword\">FROM</span> Student;</span><br></pre></td></tr></table></figure><p>输出结果：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Sname 'Year of Birth:' 2014-Sage LOWER(Sdept)</span><br><span class=\"line\">李勇 \t Year of Birth: \t\t1994 cs</span><br><span class=\"line\">刘晨 \t Year of Birth: \t\t1995 cs</span><br><span class=\"line\">王敏 \t Year of Birth: \t\t1996 ma</span><br><span class=\"line\">张立 \t Year of Birth: \t\t1995 is</span><br></pre></td></tr></table></figure><p> <strong>使用列别名改变查询结果的列标题:</strong></p>\n<p>SELECT Sname <font color=\"red\">NAME</font>,’Year of Birth:’ <font color=\"red\">BIRTH</font>,2014-Sage BIRTHDAY,LOWER(Sdept) <font color=\"red\">DEPARTMENT</font> FROM Student;</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> Sname <span class=\"keyword\">NAME</span>,<span class=\"string\">'Year of Birth:'</span> BIRTH,<span class=\"number\">2014</span>-Sage BIRTHDAY,<span class=\"keyword\">LOWER</span>(Sdept) DEPARTMENT <span class=\"keyword\">FROM</span> Student;</span><br></pre></td></tr></table></figure><p>输出结果：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">NAME BIRTH BIRTHDAY DEPARTMENT</span><br><span class=\"line\">李勇  Year of Birth:  1994 cs</span><br><span class=\"line\">刘晨  Year of Birth:  1995 cs</span><br><span class=\"line\">王敏  Year of Birth:  1996 ma</span><br><span class=\"line\">张立  Year of Birth:  1995 is</span><br></pre></td></tr></table></figure><h3 id=\"消除取值重复的行\"><strong>消除取值重复的行</strong><a href=\"#消除取值重复的行\" title=\"消除取值重复的行\"></a></h3><p>如果没有指定DISTINCT关键词，则缺省为ALL</p>\n<blockquote>\n<p>[例3.21] 查询选修了课程的学生学号。</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> Sno <span class=\"keyword\">FROM</span> SC;</span><br></pre></td></tr></table></figure><p>等价于：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">ALL</span> Sno <span class=\"keyword\">FROM</span> SC;</span><br></pre></td></tr></table></figure><p>执行上面的SELECT语句后，结果为：  </p>\n<img src=\"https://cdn.jsdelivr.net/gh/Dxsummer/cdn/img/python/20210415194214.png\" style=\"zoom:67%;\" /><p> <strong>指定<code>DISTINCT</code>关键词，去掉表中重复的行</strong></p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">DISTINCT</span> Sno <span class=\"keyword\">FROM</span> SC;</span><br></pre></td></tr></table></figure><p>执行结果：</p>\n<img src=\"https://cdn.jsdelivr.net/gh/Dxsummer/cdn/img/sql/20210415194524.png\" style=\"zoom:50%;\" /><h3 id=\"常用的查询条件\"><strong>常用的查询条件</strong><a href=\"#常用的查询条件\" title=\"常用的查询条件\"></a></h3><div class=\"φcz\"><div class=\"φdb\"><table><thead><tr>\n<th>查 询 条 件</th><th>谓 词</th></tr>\n</thead><tbody><tr>\n<td>比 较</td><td>=, &gt;, &lt;, &gt;=, &lt;=, !=, &lt;&gt;, !&gt;, !&lt;; NOT+上述比较运算符</td></tr>\n<tr>\n<td>确定范围</td><td>BETWEEN AND, NOT BETWEEN AND</td></tr>\n<tr>\n<td>确定集合</td><td>IN, NOT IN</td></tr>\n<tr>\n<td>字符匹配</td><td>LIKE, NOT LIKE</td></tr>\n<tr>\n<td>空 值</td><td>IS NULL, IS NOT NULL</td></tr>\n<tr>\n<td>多重条件（逻辑运算）</td><td>AND, OR, NOT</td></tr>\n</tbody></table></div></div><h3 id=\"比较大小\">比较大小<a href=\"#比较大小\" title=\"比较大小\"></a></h3><blockquote>\n<p>[例3.22] 查询计算机科学系全体学生的名单。</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> Sname <span class=\"keyword\">FROM</span> Student <span class=\"keyword\">WHERE</span> Sdept=‘CS’;</span><br></pre></td></tr></table></figure><blockquote>\n<p>[例3.23]查询所有年龄在20岁以下的学生姓名及其年龄。</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> Sname,Sage <span class=\"keyword\">FROM</span> Student <span class=\"keyword\">WHERE</span> Sage &lt; <span class=\"number\">20</span>;</span><br></pre></td></tr></table></figure><blockquote>\n<p>[例3.24]查询考试成绩有不及格的学生的学号。</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">DISTINCT</span> Sn <span class=\"keyword\">FROM</span> SC <span class=\"keyword\">WHERE</span> Grade&lt;<span class=\"number\">60</span>;</span><br></pre></td></tr></table></figure><h3 id=\"确定范围\">确定范围<a href=\"#确定范围\" title=\"确定范围\"></a></h3><p>谓词: </p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">BETWEEN … AND … NOT BETWEEN … AND …</span><br></pre></td></tr></table></figure><blockquote>\n<p>[例3.25] 查询年龄在20~23岁（包括20岁和23岁）之间的学生的姓名、系别和年龄</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> Sname, Sdept, Sage <span class=\"keyword\">FROM</span> Student <span class=\"keyword\">WHERE</span> Sage <span class=\"keyword\">BETWEEN</span> <span class=\"number\">20</span> <span class=\"keyword\">AND</span> <span class=\"number\">23</span>;</span><br></pre></td></tr></table></figure><blockquote>\n<p>[例3.26] 查询年龄不在20~23岁之间的学生姓名、 系别和年龄</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> Sname, Sdept, Sage <span class=\"keyword\">FROM</span> Student <span class=\"keyword\">WHERE</span> Sage <span class=\"keyword\">NOT</span> <span class=\"keyword\">BETWEEN</span> <span class=\"number\">20</span> <span class=\"keyword\">AND</span> <span class=\"number\">23</span>;</span><br></pre></td></tr></table></figure><h3 id=\"确定集合\">确定集合<a href=\"#确定集合\" title=\"确定集合\"></a></h3><blockquote>\n<p>[例3.27]查询计算机科学系（CS）、数学系（MA）和信息系（IS）学生的姓名和性别。</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> Sname, Ssex <span class=\"keyword\">FROM</span> Student <span class=\"keyword\">WHERE</span> Sdept <span class=\"keyword\">IN</span> (<span class=\"string\">'CS'</span>,<span class=\"string\">'MA’,'</span><span class=\"keyword\">IS</span><span class=\"string\">' );</span></span><br></pre></td></tr></table></figure><blockquote>\n<p>[例3.28]查询既不是计算机科学系、 数学系， 也不是信息系的学生的姓名和性别。</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> Sname, Ssex <span class=\"keyword\">FROM</span> Student <span class=\"keyword\">WHERE</span> Sdept <span class=\"keyword\">NOT</span> <span class=\"keyword\">IN</span> (<span class=\"string\">'IS'</span>,<span class=\"string\">'MA’,'</span>CS<span class=\"string\">' );</span></span><br></pre></td></tr></table></figure><h3 id=\"字符匹配\">字符匹配<a href=\"#字符匹配\" title=\"字符匹配\"></a></h3><ul><li><p><code>%</code> （百分号） 代表任意长度（长度可以为0） 的字符串</p>\n<ul><li>例如 <code>a%b</code> 表示以a开头， 以b结尾的任意长度的字符串</li>\n</ul></li>\n<li><p><code>_</code> （下横线） 代表任意单个字符。<br> 例如a_b表示以a开头， 以b结尾的长度为3的任意字符串  </p>\n</li>\n</ul><p><strong>匹配串为固定字符串</strong>  </p>\n<blockquote>\n<p>[例3.29] 查询学号为201215121的学生的详细情况。</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> * <span class=\"keyword\">FROM</span> Student <span class=\"keyword\">WHERE</span> Sno <span class=\"keyword\">LIKE</span> ‘<span class=\"number\">201215121</span><span class=\"string\">';</span></span><br></pre></td></tr></table></figure><p>等价于：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> * <span class=\"keyword\">FROM</span> Student <span class=\"keyword\">WHERE</span> Sno = <span class=\"string\">' 201215121 '</span>;</span><br></pre></td></tr></table></figure><p><strong>匹配串为含通配符的字符串</strong>  </p>\n<blockquote>\n<p>[例3.30] 查询所有姓刘学生的姓名、学号和性别。</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> Sname, Sno, Ssex <span class=\"keyword\">FROM</span> Student <span class=\"keyword\">WHERE</span> Sname <span class=\"keyword\">LIKE</span> <span class=\"string\">'刘%'</span>;</span><br></pre></td></tr></table></figure><blockquote>\n<p>[例3.31] 查询姓”欧阳”且全名为三个汉字的学生的姓名。</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> Sname <span class=\"keyword\">FROM</span> Student <span class=\"keyword\">WHERE</span> Sname <span class=\"keyword\">LIKE</span> <span class=\"string\">'欧阳__'</span>;</span><br></pre></td></tr></table></figure><blockquote>\n<p>[例3.32] 查询名字中第2个字为”阳”字的学生的姓名和学号。</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> Sname， Sno <span class=\"keyword\">FROM</span> Student <span class=\"keyword\">WHERE</span> Sname <span class=\"keyword\">LIKE</span> <span class=\"string\">'__阳%'</span>;</span><br></pre></td></tr></table></figure><blockquote>\n<p>[例3.33] 查询所有不姓刘的学生姓名、学号和性别。</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> Sname, Sno, Ssex <span class=\"keyword\">FROM</span> Student <span class=\"keyword\">WHERE</span> Sname <span class=\"keyword\">NOT</span> <span class=\"keyword\">LIKE</span> <span class=\"string\">'刘%'</span>;</span><br></pre></td></tr></table></figure><p><strong>使用换码字符将通配符转义为普通字符</strong>  </p>\n<blockquote>\n<p>[例3.34] 查询DB_Design课程的课程号和学分。</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> Cno，Ccredit <span class=\"keyword\">FROM</span> Course <span class=\"keyword\">WHERE</span> Cname <span class=\"keyword\">LIKE</span> <span class=\"string\">'DB\\_Design'</span> ESCAPE <span class=\"string\">'\\ '</span> ;</span><br></pre></td></tr></table></figure><blockquote>\n<p>[例3.35] 查询以”DB_”开头，且倒数第3个字符为 i的课程的详细情况。</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> *</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> Course</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> Cname <span class=\"keyword\">LIKE</span> <span class=\"string\">'DB\\_%i_ _'</span> ESCAPE <span class=\"string\">'\\ '</span> ;</span><br></pre></td></tr></table></figure><p><strong><code>ESCAPE &#39;＼ &#39;</code> 表示“ <code>＼</code>” 为换码字符</strong>  </p>\n<h3 id=\"涉及空值的查询\">涉及空值的查询<a href=\"#涉及空值的查询\" title=\"涉及空值的查询\"></a></h3><blockquote>\n<p>[例3.36] 某些学生选修课程后没有参加考试，所以有选课记录，但没 有考试成绩。查询缺少成绩的学生的学号和相应的课程号。</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> Sno, Cno <span class=\"keyword\">FROM</span> SC <span class=\"keyword\">WHERE</span> Grade <span class=\"keyword\">IS</span> <span class=\"literal\">NULL</span></span><br></pre></td></tr></table></figure><blockquote>\n<p>[例3.37] 查所有有成绩的学生学号和课程号。</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> Sno， Cno <span class=\"keyword\">FROM</span> SC <span class=\"keyword\">WHERE</span> Grade <span class=\"keyword\">IS</span> <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span>;</span><br></pre></td></tr></table></figure><h3 id=\"多重条件查询\">多重条件查询<a href=\"#多重条件查询\" title=\"多重条件查询\"></a></h3><p>[例3.38] 查询计算机系年龄在20岁以下的学生姓名。</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> Sname <span class=\"keyword\">FROM</span> Student <span class=\"keyword\">WHERE</span> Sdept= <span class=\"string\">'CS'</span> <span class=\"keyword\">AND</span> Sage&lt;<span class=\"number\">20</span>;</span><br></pre></td></tr></table></figure><blockquote>\n<p>改写[例3.27]<br>[例3.27] 查询计算机科学系（CS）、数学系（MA）和信息系（IS）学生的姓名和性别。</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> Sname, Ssex</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> Student</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> Sdept <span class=\"keyword\">IN</span> (<span class=\"string\">'CS '</span>,<span class=\"string\">'MA '</span>,<span class=\"string\">'IS'</span>)</span><br></pre></td></tr></table></figure><p>可改写为：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> Sname, Ssex</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> Student</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> Sdept= <span class=\"string\">' CS'</span> <span class=\"keyword\">OR</span> Sdept= <span class=\"string\">' MA'</span> <span class=\"keyword\">OR</span> Sdept= <span class=\"string\">'IS '</span>;</span><br></pre></td></tr></table></figure><h3 id=\"order-by\">ORDER BY<a href=\"#order-by\" title=\"ORDER BY\"></a></h3><p>升序： ASC;</p>\n<p>降序： DESC;    <strong>缺省值为升序</strong>  </p>\n<blockquote>\n<p>[例3.39]查询选修了3号课程的学生的学号及其成绩， 查询结果按分数降序排列。</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> Sno, Grade</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> SC</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> Cno= <span class=\"string\">' 3 '</span></span><br><span class=\"line\"><span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span> Grade <span class=\"keyword\">DESC</span>;</span><br></pre></td></tr></table></figure><blockquote>\n<p>[例3.40]查询全体学生情况，查询结果按所在系的系号升序排列，同一系中的学生按年龄降序排列。</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> *</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> Student</span><br><span class=\"line\"><span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span> Sdept, Sage <span class=\"keyword\">DESC</span>;</span><br></pre></td></tr></table></figure><h3 id=\"聚集函数\">聚集函数<a href=\"#聚集函数\" title=\"聚集函数\"></a></h3><ul><li><p>统计元组个数</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">COUNT(*)</span><br></pre></td></tr></table></figure></li>\n<li><p>统计一列中值的个数</p>\n</li>\n</ul><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">COUNT([DISTINCT|ALL] &lt;列名&gt;)</span><br></pre></td></tr></table></figure><ul><li>计算一列值的总和（此列必须为数值型）</li>\n</ul><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SUM([DISTINCT|ALL] &lt;列名&gt;)</span><br></pre></td></tr></table></figure><ul><li>计算一列值的平均值（此列必须为数值型）</li>\n</ul><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">AVG([DISTINCT|ALL] &lt;列名&gt;)</span><br></pre></td></tr></table></figure><ul><li>求一列中的最大值和最小值</li>\n</ul><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MAX([DISTINCT|ALL] &lt;列名&gt;)</span><br><span class=\"line\">MIN([DISTINCT|ALL] &lt;列名&gt;)</span><br></pre></td></tr></table></figure><blockquote>\n<p>[例3.41] 查询学生总人数。</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">COUNT</span>(*)</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> Student;</span><br></pre></td></tr></table></figure><blockquote>\n<p>[例3.42] 查询选修了课程的学生人数。</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">COUNT</span>(<span class=\"keyword\">DISTINCT</span> Sno)</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> SC;</span><br></pre></td></tr></table></figure><blockquote>\n<p>[例3.43] 计算1号课程的学生平均成绩。</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">AVG</span>(Grade)</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> SC</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> Cno= <span class=\"string\">' 1 '</span>;</span><br></pre></td></tr></table></figure><blockquote>\n<p>[例3.44] 查询选修1号课程的学生最高分数。</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">MAX</span>(Grade)</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> SC</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> Cno=<span class=\"string\">'1'</span>;</span><br></pre></td></tr></table></figure><blockquote>\n<p>[例3.45 ] 查询学生201215012选修课程的总学分数。</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">SUM</span>(Ccredit)</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> SC,Course</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> Sno=<span class=\"string\">'201215012'</span> <span class=\"keyword\">AND</span> SC.Cno=Course.Cno;</span><br></pre></td></tr></table></figure><h3 id=\"group-by\">GROUP BY<a href=\"#group-by\" title=\"GROUP BY\"></a></h3><ul><li>对查询结果分组后，聚集函数将分别作用于每个组  </li>\n<li>按指定的一列或多列值分组，值相等的为一组  </li>\n</ul><blockquote>\n<p>[例3.46] 求各个课程号及相应的选课人数。</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> Cno, <span class=\"keyword\">COUNT</span>(Sno)</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> SC</span><br><span class=\"line\"><span class=\"keyword\">GROUP</span> <span class=\"keyword\">BY</span> Cno;</span><br></pre></td></tr></table></figure><p>查询结果可能为：   </p>\n<img src=\"https://cdn.jsdelivr.net/gh/Dxsummer/cdn/img/sql/20210415210226.png\" style=\"zoom:67%;\" /><blockquote>\n<p>[例3.47] 查询选修了3门以上课程的学生学号。</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> Sno</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> SC</span><br><span class=\"line\"><span class=\"keyword\">GROUP</span> <span class=\"keyword\">BY</span> Sno</span><br><span class=\"line\"><span class=\"keyword\">HAVING</span> <span class=\"keyword\">COUNT</span>(*) &gt;<span class=\"number\">3</span>;</span><br></pre></td></tr></table></figure><blockquote>\n<p>[例3.48 ]查询平均成绩大于等于90分的学生学号和平均成绩</p>\n</blockquote>\n<p>下面的语句是不对的：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> Sno, <span class=\"keyword\">AVG</span>(Grade)</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> SC</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> <span class=\"keyword\">AVG</span>(Grade)&gt;=<span class=\"number\">90</span></span><br><span class=\"line\"><span class=\"keyword\">GROUP</span> <span class=\"keyword\">BY</span> Sno;</span><br></pre></td></tr></table></figure><p>因为<code>WHERE</code>子句中是<strong><font color=\"red\">不能用聚集函数作为条件表达式</font></strong></p>\n<p>正确的查询语句应该是：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> Sno, <span class=\"keyword\">AVG</span>(Grade)</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> SC</span><br><span class=\"line\"><span class=\"keyword\">GROUP</span> <span class=\"keyword\">BY</span> Sno</span><br><span class=\"line\"><span class=\"keyword\">HAVING</span> <span class=\"keyword\">AVG</span>(Grade)&gt;=<span class=\"number\">90</span>;</span><br></pre></td></tr></table></figure><p><mark><code>HAVING</code>短语与<code>WHERE</code>子句的区别：</mark></p>\n<ul><li>作用对象不同</li>\n<li><code>WHERE</code>子句<strong>作用于基表或视图</strong>， 从中选择满足条件的元组</li>\n<li><code>HAVING</code>短语<strong>作用于组</strong>， 从中选择满足条件的组  </li>\n</ul><h2 id=\"连接查询\">连接查询<a href=\"#连接查询\" title=\"连接查询\"></a></h2><h3 id=\"等值与非等值连接查询\">等值与非等值连接查询<a href=\"#等值与非等值连接查询\" title=\"等值与非等值连接查询\"></a></h3><blockquote>\n<p>[例 3.49] 查询每个学生及其选修课程的情况</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> Student.*, SC.*</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> Student, SC</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> Student.Sno = SC.Sno;</span><br></pre></td></tr></table></figure><blockquote>\n<p>[例 3.50] 对[例 3.49]用自然连接完成。</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> Student.Sno,Sname,Ssex,Sage,Sdept,Cno,Grade</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> Student,SC</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> Student.Sno = SC.Sno;</span><br></pre></td></tr></table></figure><blockquote>\n<p>[例 3.51 ]查询选修2号课程且成绩在90分以上的所有学生的学号和姓名。</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> Student.Sno, Sname</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> Student, SC</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> Student.Sno=SC.Sno <span class=\"keyword\">AND</span></span><br><span class=\"line\">SC.Cno=<span class=\"string\">' 2 '</span> <span class=\"keyword\">AND</span> SC.Grade&gt;<span class=\"number\">90</span>;</span><br></pre></td></tr></table></figure><h3 id=\"自身连接\">自身连接<a href=\"#自身连接\" title=\"自身连接\"></a></h3><ul><li><strong>自身连接</strong>： 一个表与其自己进行连接</li>\n<li>需要给表起<strong>别名</strong>以示区别</li>\n<li>由于所有属性名都是同名属性，因此<strong>必须使用别名前缀</strong>  </li>\n</ul><blockquote>\n<p>[例 3.52]查询每一门课的间接先修课（即先修课的先修课）</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> FIRST.Cno, SECOND.Cpno</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> Course <span class=\"keyword\">FIRST</span>, Course <span class=\"keyword\">SECOND</span></span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> FIRST.Cpno = SECOND.Cno;</span><br></pre></td></tr></table></figure><img src=\"https://cdn.jsdelivr.net/gh/Dxsummer/cdn/img/sql/20210422092409.png\" style=\"zoom:50%;\" /><img src=\"https://cdn.jsdelivr.net/gh/Dxsummer/cdn/img/sql/20210422093025.png\" style=\"zoom:50%;\" /><h3 id=\"外连接-1\">外连接<a href=\"#外连接-1\" title=\"外连接\"></a></h3><p><strong>外连接与普通连接的区别</strong></p>\n<ul><li>普通连接操作<strong>只输出满足连接条件的元组</strong></li>\n<li>外连接操作<strong>以指定表为连接主体</strong>，将主体<strong>表中不满足连接条件的元组一并输出</strong></li>\n<li>左外连接<ul><li>列出左边关系中所有的元组</li>\n</ul></li>\n<li>右外连接<ul><li>列出右边关系中所有的元组  </li>\n</ul></li>\n</ul><blockquote>\n<p>[例 3. 53] 改写[例 3.49]     查询每个学生及其选修课程的情况</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> Student.Sno,Sname,Ssex,Sage,Sdept,Cno,Grade</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> Student <span class=\"keyword\">LEFT</span> <span class=\"keyword\">OUT</span> <span class=\"keyword\">JOIN</span> SC <span class=\"keyword\">ON</span></span><br><span class=\"line\">(Student.Sno=SC.Sno);</span><br></pre></td></tr></table></figure><h3 id=\"多表连接\">多表连接<a href=\"#多表连接\" title=\"多表连接\"></a></h3><p>多表连接：<strong>两个以上的表进行连接</strong></p>\n<blockquote>\n<p> [例3.54]查询每个学生的学号、 姓名、 选修的课程名及成绩</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> Student.Sno, Sname, Cname, Grade</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> Student, SC, Course <span class=\"comment\">/*多表连接*/</span></span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> Student.Sno = SC.Sno</span><br><span class=\"line\"><span class=\"keyword\">AND</span> SC.Cno = Course.Cno;</span><br></pre></td></tr></table></figure><h2 id=\"嵌套查询\">嵌套查询<a href=\"#嵌套查询\" title=\"嵌套查询\"></a></h2><ul><li>一个<code>SELECT-FROM-WHERE</code>语句称为一个<strong>查询块</strong></li>\n<li>将一个查询块嵌套在另一个查询块的<code>WHERE</code>子句或<code>HAVING</code>短语的条件中的查询称为<strong>嵌套查询</strong></li>\n</ul><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> Sname \t<span class=\"comment\">/*外层查询/父查询*/</span></span><br><span class=\"line\"><span class=\"keyword\">FROM</span> Student</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> Sno <span class=\"keyword\">IN</span></span><br><span class=\"line\">            ( <span class=\"keyword\">SELECT</span> Sno \t<span class=\"comment\">/*内层查询/子查询*/</span></span><br><span class=\"line\">            \t<span class=\"keyword\">FROM</span> SC</span><br><span class=\"line\">            \t<span class=\"keyword\">WHERE</span> Cno= <span class=\"string\">' 2 '</span>);</span><br></pre></td></tr></table></figure><ul><li>上层的查询块称为<strong>外层查询</strong>或<strong>父查询</strong></li>\n<li>下层查询块称为<strong>内层查询</strong>或<strong>子查询</strong></li>\n<li>SQL语言允许多层嵌套查询<ul><li>即一个子查询中还可以嵌套其他子查询</li>\n</ul></li>\n<li><mark>子查询的限制</mark><ul><li><strong>不能使用<code>ORDER BY</code>子句</strong>  </li>\n</ul></li>\n</ul><h3 id=\"带有in谓词的子查询\">带有IN谓词的子查询<a href=\"#带有in谓词的子查询\" title=\"带有IN谓词的子查询\"></a></h3><blockquote>\n<p>[例 3.55] 查询与“刘晨”在同一个系学习的学生。此查询要求可以分步来完成</p>\n</blockquote>\n<p>① 确定“刘晨”所在系名</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> Sdept</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> Student</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> Sname= <span class=\"string\">' 刘晨 '</span>;</span><br></pre></td></tr></table></figure><p>​    结果为： CS  </p>\n<p>② 查找所有在CS系学习的学生。</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> Sno, Sname, Sdept</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> Student</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> Sdept= <span class=\"string\">' CS '</span>;</span><br></pre></td></tr></table></figure><p>​    结果为：  <img src=\"https://cdn.jsdelivr.net/gh/Dxsummer/cdn/img/sql/20210422112740.png\" style=\"zoom:50%;\" /></p>\n<p>将第一步查询嵌入到第二步查询的条件中</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> Sno, Sname, Sdept</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> Student</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> Sdept <span class=\"keyword\">IN</span></span><br><span class=\"line\">            (<span class=\"keyword\">SELECT</span> Sdept</span><br><span class=\"line\">           \t\t <span class=\"keyword\">FROM</span> Student</span><br><span class=\"line\">           \t\t <span class=\"keyword\">WHERE</span> Sname= <span class=\"string\">' 刘晨 '</span>);</span><br></pre></td></tr></table></figure><p>此查询为<strong>不相关子查询</strong>。  </p>\n<blockquote>\n<p>用自身连接完成[例 3.55]查询要求</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> S1.Sno, S1.Sname,S1.Sdept</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> Student S1,Student S2</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> S1.Sdept = S2.Sdept <span class=\"keyword\">AND</span> S2.Sname = <span class=\"string\">'刘晨'</span>;</span><br></pre></td></tr></table></figure><blockquote>\n<p>[例 3.56]查询选修了课程名为“信息系统”的学生学号和姓名  </p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> Sno,Sname \t\t③ 最后在Student关系中取出Sno和Sname</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> Student </span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> Sno <span class=\"keyword\">IN</span></span><br><span class=\"line\">(<span class=\"keyword\">SELECT</span> Sno \t\t\t② 然后在SC关系中找出选修了<span class=\"number\">3</span>号课程的学生学号</span><br><span class=\"line\">\t<span class=\"keyword\">FROM</span> SC </span><br><span class=\"line\">\t<span class=\"keyword\">WHERE</span> Cno <span class=\"keyword\">IN</span></span><br><span class=\"line\">    (<span class=\"keyword\">SELECT</span> Cno \t\t① 首先在Course关系中找出“信息系统”的课程号，为<span class=\"number\">3</span>号</span><br><span class=\"line\">    \t<span class=\"keyword\">FROM</span> Course </span><br><span class=\"line\">   \t\t<span class=\"keyword\">WHERE</span> Cname= <span class=\"string\">'信息系统'</span>)</span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure><blockquote>\n<p>用连接查询实现[例 3.56] ：</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> Sno,Sname</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> Student,SC,Course</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> Student.Sno = SC.Sno <span class=\"keyword\">AND</span></span><br><span class=\"line\">SC.Cno = Course.Cno <span class=\"keyword\">AND</span></span><br><span class=\"line\">Course.Cname=<span class=\"string\">'信息系统'</span>;</span><br></pre></td></tr></table></figure><h3 id=\"带有比较运算符的子查询\">带有比较运算符的子查询<a href=\"#带有比较运算符的子查询\" title=\"带有比较运算符的子查询\"></a></h3><blockquote>\n<p>在[例 3.55]中，由于一个学生只可能在一个系学习，则可以用 = 代替IN ：</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> Sno,Sname,Sdept</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> Student</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> Sdept =</span><br><span class=\"line\">(<span class=\"keyword\">SELECT</span> Sdept</span><br><span class=\"line\">\t<span class=\"keyword\">FROM</span> Student</span><br><span class=\"line\">\t<span class=\"keyword\">WHERE</span> Sname= <span class=\"string\">'刘晨'</span>);</span><br></pre></td></tr></table></figure><blockquote>\n<p>[例 3.57 ]找出每个学生超过他选修课程平均成绩的课程号。</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> Sno, Cno </span><br><span class=\"line\"><span class=\"keyword\">FROM</span> SC x</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> Grade &gt;=</span><br><span class=\"line\">(<span class=\"keyword\">SELECT</span> <span class=\"keyword\">AVG</span>（Grade）</span><br><span class=\"line\">\t<span class=\"keyword\">FROM</span> SC y</span><br><span class=\"line\">\t<span class=\"keyword\">WHERE</span> y.Sno=x.Sno);</span><br></pre></td></tr></table></figure><h3 id=\"带有any（some）或all谓词的子查询\">带有ANY（SOME）或ALL谓词的子查询<a href=\"#带有any（some）或all谓词的子查询\" title=\"带有ANY（SOME）或ALL谓词的子查询\"></a></h3><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; ANY 大于子查询结果中的某个值</span><br><span class=\"line\">&gt; ALL 大于子查询结果中的所有值</span><br><span class=\"line\">&lt; ANY 小于子查询结果中的某个值</span><br><span class=\"line\">&lt; ALL 小于子查询结果中的所有值</span><br><span class=\"line\">&gt;= ANY 大于等于子查询结果中的某个值</span><br><span class=\"line\">&gt;= ALL 大于等于子查询结果中的所有值</span><br><span class=\"line\">&lt;= ANY 小于等于子查询结果中的某个值</span><br><span class=\"line\">&lt;= ALL 小于等于子查询结果中的所有值</span><br><span class=\"line\">= ANY 等于子查询结果中的某个值</span><br><span class=\"line\">=ALL 等于子查询结果中的所有值（通常没有实际意义）</span><br><span class=\"line\">!=（或&lt;&gt;） ANY 不等于子查询结果中的某个值</span><br><span class=\"line\">!=（或&lt;&gt;） ALL 不等于子查询结果中的任何一个值</span><br></pre></td></tr></table></figure><blockquote>\n<p>[例 3.58] 查询非计算机科学系中比计算机科学系任意一个学生年龄小的学生姓名和年龄</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> Sname,Sage</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> Student</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> Sage &lt; <span class=\"keyword\">ANY</span> </span><br><span class=\"line\">\t(<span class=\"keyword\">SELECT</span> Sage <span class=\"keyword\">FROM</span> Student <span class=\"keyword\">WHERE</span> Sdept= <span class=\"string\">' CS '</span>)</span><br><span class=\"line\"><span class=\"keyword\">AND</span> Sdept &lt;&gt; <span class=\"string\">'CS '</span> ; <span class=\"comment\">/*父查询块中的条件 */</span></span><br></pre></td></tr></table></figure><p>结果：<img src=\"https://cdn.jsdelivr.net/gh/Dxsummer/cdn/img/sql/20210423101207.png\" style=\"zoom:50%;\" /></p>\n<p>执行过程：<br>（1） 首先处理子查询，找出CS系中所有学生的年龄，构成一个集合（20,19）<br>（2） 处理父查询，找所有不是CS系且年龄小于20 或 19的学生  </p>\n<blockquote>\n<p>用聚集函数实现[例 3.58]</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> Sname,Sage</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> Student</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> Sage &lt; (<span class=\"keyword\">SELECT</span> <span class=\"keyword\">MAX</span>（Sage）<span class=\"keyword\">FROM</span> Student <span class=\"keyword\">WHERE</span> Sdept= <span class=\"string\">'CS '</span>)</span><br><span class=\"line\"><span class=\"keyword\">AND</span> Sdept &lt;&gt; <span class=\"string\">' CS '</span>;</span><br></pre></td></tr></table></figure><blockquote>\n<p>[例 3.59] 查询非计算机科学系中比计算机科学系所有学生年龄都小的学生姓名及年龄。</p>\n</blockquote>\n<p><strong>方法一：用ALL谓词</strong></p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> Sname,Sage</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> Student</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> Sage &lt; <span class=\"keyword\">ALL</span> (<span class=\"keyword\">SELECT</span> Sage <span class=\"keyword\">FROM</span> Student <span class=\"keyword\">WHERE</span> Sdept= <span class=\"string\">' CS '</span>)</span><br><span class=\"line\"><span class=\"keyword\">AND</span> Sdept &lt;&gt; <span class=\"string\">' CS ’;</span></span><br></pre></td></tr></table></figure><p><strong>方法二：用聚集函数</strong></p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> Sname,Sage</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> Student</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> Sage &lt; (<span class=\"keyword\">SELECT</span> <span class=\"keyword\">MIN</span>(Sage) <span class=\"keyword\">FROM</span> Student <span class=\"keyword\">WHERE</span> Sdept= <span class=\"string\">' CS '</span>)</span><br><span class=\"line\"><span class=\"keyword\">AND</span> Sdept &lt;&gt;<span class=\"string\">' CS '</span>;</span><br></pre></td></tr></table></figure><p><strong>表3.7 ANY（或SOME）， ALL谓词与聚集函数、 IN谓词的等价转换关系</strong></p>\n<div class=\"φcz\"><div class=\"φdb\"><table><thead><tr>\n<th style=\"padding:0\"></th><th>=</th><th>&lt;&gt;或!=</th><th>&lt;</th><th>&lt;=</th><th>&gt;</th><th>&gt;=</th></tr>\n</thead><tbody><tr>\n<td>ANY</td><td>IN</td><td>–</td><td>&lt;MAX</td><td>&lt;=MAX</td><td>&gt;MIN</td><td>&gt;= MIN</td></tr>\n<tr>\n<td>ALL</td><td>–</td><td>NOT IN</td><td>&lt;MIN</td><td>&lt;= MIN</td><td>&gt;MAX</td><td>&gt;= MAX</td></tr>\n</tbody></table></div></div><h3 id=\"带有exists谓词的子查询\">带有EXISTS谓词的子查询<a href=\"#带有exists谓词的子查询\" title=\"带有EXISTS谓词的子查询\"></a></h3><p><strong>EXISTS谓词</strong>  </p>\n<ul><li>存在量词</li>\n<li>带有EXISTS谓词的子查询<strong>不返回任何数据，只产生逻辑真值“<code>true</code>”或逻辑假值“<code>false</code>”。</strong><ul><li>若内层查询结果<strong>非空</strong>，则外层的WHERE子句返回<strong>真值</strong></li>\n<li>若内层查询结果为<strong>空</strong>，则外层的WHERE子句返回<strong>假值</strong></li>\n</ul></li>\n<li>由EXISTS引出的子查询，其目标列表达式通常都用 <code>*</code> ，因为带EXISTS的子查询只返回真值或假值，给出列名无实际意义  </li>\n</ul><p><strong>NOT EXISTS谓词</strong></p>\n<ul><li>若内层查询结果<strong>非空</strong>，则外层的<code>WHERE</code>子句返回<strong>假值</strong></li>\n<li>若内层查询结果为<strong>空</strong>，则外层的<code>WHERE</code>子句返回<strong>真值</strong>  </li>\n</ul><blockquote>\n<p>[例 3.60] 查询所有选修了1号课程的学生姓名。</p>\n</blockquote>\n<p>思路分析：</p>\n<ul><li>本查询涉及Student和SC关系</li>\n<li>在Student中依次取每个元组的Sno值，用此值去检查SC表</li>\n<li>若SC中存在这样的元组，其Sno值等于此Student.Sno值，并且其Cno= ‘1’，则取此Student.Sname送入结果表</li>\n</ul><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> Sname</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> Student</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> <span class=\"keyword\">EXISTS</span></span><br><span class=\"line\">(<span class=\"keyword\">SELECT</span> * <span class=\"keyword\">FROM</span> SC <span class=\"keyword\">WHERE</span> Sno=Student.Sno <span class=\"keyword\">AND</span> Cno= <span class=\"string\">' 1 '</span>);</span><br></pre></td></tr></table></figure><h1 id=\"第四章--数据库安全性\">第四章  数据库安全性<a href=\"#第四章--数据库安全性\" title=\"第四章  数据库安全性\"></a></h1><h2 id=\"tcsectdi安全级别划分\">TCSEC/TDI安全级别划分<a href=\"#tcsectdi安全级别划分\" title=\"TCSEC/TDI安全级别划分\"></a></h2><div class=\"φcz\"><div class=\"φdb\"><table><thead><tr>\n<th>安 全 级 别</th><th>定 义</th></tr>\n</thead><tbody><tr>\n<td>A1</td><td>验证设计（Verified Design）</td></tr>\n<tr>\n<td>B3</td><td>安全域（Security Domains）</td></tr>\n<tr>\n<td>B2</td><td>结构化保护（Structural Protection）</td></tr>\n<tr>\n<td>B1</td><td>标记安全保护（Labeled Security Protection）</td></tr>\n<tr>\n<td>C2</td><td>受控的存取保护（Controlled Access Protection）<br/>Windows 2000<br/>Oracle 7</td></tr>\n<tr>\n<td>C1</td><td>自主安全保护（Discretionary Security Protection<br/>现有的商业系统稍作改进即可满足</td></tr>\n<tr>\n<td>D</td><td>最小保护（Minimal Protection）<br/>将一切不符合更高标准的系统均归于D组<br/>典型例子： DOS是安全标准为D的操作系统<br/>DOS在安全性方面几乎没有什么专门的机制来保障</td></tr>\n</tbody></table></div></div><ul><li>按系统可靠或可信程度逐渐增高</li>\n<li>各安全级别之间具有一种偏序向下兼容的关系，即较高安全性级别提供的安全保护要包含较低级别的所有保护要求，同时提供更多或更完善的保护能力  </li>\n</ul><img src=\"https://cdn.jsdelivr.net/gh/Dxsummer/cdn/img/sql/20210506103600.jpg\" alt=\"计算机系统的安全模型  \" style=\"zoom:50%;\" /><ul><li>系统根据用户标识鉴定用户身份，合法用户才准许进入计算机系统</li>\n<li>数据库管理系统还要进行存取控制，只允许用户执行合法操作</li>\n<li>操作系统有自己的保护措施</li>\n<li>数据以密码形式存储到数据库中 </li>\n</ul><img src=\"https://cdn.jsdelivr.net/gh/Dxsummer/cdn/img/sql/20210506103942.jpg\" alt=\"数据库管理系统安全性控制模型  \" style=\"zoom: 50%;\" /><h2 id=\"自主存取控制方法\">自主存取控制方法<a href=\"#自主存取控制方法\" title=\"自主存取控制方法\"></a></h2><p>通过 SQL 的<code>GRANT</code> 语句和<code>REVOKE</code> 语句实现</p>\n<ul><li>用户权限组成<ul><li>数据对象</li>\n<li>操作类型</li>\n</ul></li>\n<li>定义用户存取权限：定义用户可以在哪些数据库对象上进行哪些类型的操作</li>\n<li>定义<strong>存取权限</strong>称为<strong>授权</strong>  </li>\n</ul><img src=\"https://cdn.jsdelivr.net/gh/Dxsummer/cdn/img/sql/20210506104401.png\" style=\"zoom:50%;\" /><h3 id=\"grant\">GRANT<a href=\"#grant\" title=\"GRANT\"></a></h3><p>GRANT语句的一般格式：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">GRANT</span> &lt;权限&gt;[,&lt;权限&gt;]...</span><br><span class=\"line\"><span class=\"keyword\">ON</span> &lt;对象类型&gt; &lt;对象名&gt;[,&lt;对象类型&gt; &lt;对象名&gt;]…</span><br><span class=\"line\"><span class=\"keyword\">TO</span> &lt;用户&gt;[,&lt;用户&gt;]...</span><br><span class=\"line\">[<span class=\"keyword\">WITH</span> <span class=\"keyword\">GRANT</span> <span class=\"keyword\">OPTION</span>];</span><br></pre></td></tr></table></figure><p>语义：将对指定操作对象的指定操作权限授予指定的用户  </p>\n<p><strong>发出GRANT：</strong></p>\n<ul><li><p>数据库管理员</p>\n</li>\n<li><p>数据库对象创建者（即属主Owner）</p>\n</li>\n<li><p>拥有该权限的用户</p>\n</li>\n</ul><p><strong>按受权限的用户</strong></p>\n<ul><li>一个或多个具体用户</li>\n<li>PUBLIC（即全体用户）  </li>\n</ul><p><strong>WITH GRANT OPTION子句:</strong></p>\n<ul><li>指定：可以再授予</li>\n<li>没有指定： 不能传播</li>\n</ul><p><strong>不允许循环授权</strong>  </p>\n<img src=\"https://cdn.jsdelivr.net/gh/Dxsummer/cdn/img/sql/20210506105016.jpg\" style=\"zoom: 50%;\" /><blockquote>\n<p>[例4.1] 把查询Student表权限授给用户U1</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">GRANT</span> <span class=\"keyword\">SELECT</span></span><br><span class=\"line\"><span class=\"keyword\">ON</span> <span class=\"keyword\">TABLE</span> Student</span><br><span class=\"line\"><span class=\"keyword\">TO</span> U1;</span><br></pre></td></tr></table></figure><blockquote>\n<p>[例4.2] 把对Student表和Course表的全部权限授予用户U2和U3</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">GRANT</span> <span class=\"keyword\">ALL</span> PRIVILIGES</span><br><span class=\"line\"><span class=\"keyword\">ON</span> <span class=\"keyword\">TABLE</span> Student,Course</span><br><span class=\"line\"><span class=\"keyword\">TO</span> U2,U3;</span><br></pre></td></tr></table></figure><blockquote>\n<p>[例4.3] 把对表SC的查询权限授予所有用户</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">GRANT</span> <span class=\"keyword\">SELECT</span></span><br><span class=\"line\"><span class=\"keyword\">ON</span> <span class=\"keyword\">TABLE</span> SC</span><br><span class=\"line\"><span class=\"keyword\">TO</span> <span class=\"keyword\">PUBLIC</span>;</span><br></pre></td></tr></table></figure><blockquote>\n<p>[例4.4] 把查询Student表和修改学生学号的权限授给用户U4</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">GRANT</span> <span class=\"keyword\">UPDATE</span>(Sno), <span class=\"keyword\">SELECT</span></span><br><span class=\"line\"><span class=\"keyword\">ON</span> <span class=\"keyword\">TABLE</span> Student</span><br><span class=\"line\"><span class=\"keyword\">TO</span> U4;</span><br></pre></td></tr></table></figure><ul><li>对属性列的授权时必须明确指出相应属性列名  </li>\n</ul><blockquote>\n<p>[例4.5] 把对表SC的INSERT权限授予U5用户，并允许他再将此权限授予其他用户</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">GRANT</span> <span class=\"keyword\">INSERT</span></span><br><span class=\"line\"><span class=\"keyword\">ON</span> <span class=\"keyword\">TABLE</span> SC</span><br><span class=\"line\"><span class=\"keyword\">TO</span> U5</span><br><span class=\"line\"><span class=\"keyword\">WITH</span> <span class=\"keyword\">GRANT</span> <span class=\"keyword\">OPTION</span>;</span><br></pre></td></tr></table></figure><p>执行例4.5后， U5不仅拥有了对表SC的<code>INSERT</code>权限，还可以传播此权限：</p>\n<blockquote>\n<p>[例4.6] </p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">GRANT</span> <span class=\"keyword\">INSERT</span></span><br><span class=\"line\"><span class=\"keyword\">ON</span> <span class=\"keyword\">TABLE</span> SC</span><br><span class=\"line\"><span class=\"keyword\">TO</span> U6</span><br><span class=\"line\"><span class=\"keyword\">WITH</span> <span class=\"keyword\">GRANT</span> <span class=\"keyword\">OPTION</span>;</span><br></pre></td></tr></table></figure><p>同样， U6还可以将此权限授予U7：</p>\n<blockquote>\n<p>[例4.7] </p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">GRANT</span> <span class=\"keyword\">INSERT</span></span><br><span class=\"line\"><span class=\"keyword\">ON</span> <span class=\"keyword\">TABLE</span> SC</span><br><span class=\"line\"><span class=\"keyword\">TO</span> U7;</span><br></pre></td></tr></table></figure><p>但U7不能再传播此权限。  </p>\n<h3 id=\"revoke\">REVOKE<a href=\"#revoke\" title=\"REVOKE\"></a></h3><ul><li><p>授予的权限可以由数据库管理员或其他授权者用REVOKE语句收回</p>\n</li>\n<li><p>REVOKE语句的一般格式为：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">REVOKE</span> &lt;权限&gt;[,&lt;权限&gt;]...</span><br><span class=\"line\"><span class=\"keyword\">ON</span> &lt;对象类型&gt; &lt;对象名&gt;[,&lt;对象类型&gt;&lt;对象名&gt;]…</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> &lt;用户&gt;[,&lt;用户&gt;]...[<span class=\"keyword\">CASCADE</span> | RESTRICT];</span><br></pre></td></tr></table></figure></li>\n</ul><blockquote>\n<p>[例4.8] 把用户U4修改学生学号的权限收回</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">REVOKE</span> <span class=\"keyword\">UPDATE</span>(Sno)</span><br><span class=\"line\"><span class=\"keyword\">ON</span> <span class=\"keyword\">TABLE</span> Student</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> U4;</span><br></pre></td></tr></table></figure><blockquote>\n<p>[例4.9] 收回所有用户对表SC的查询权限</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">REVOKE</span> <span class=\"keyword\">SELECT</span></span><br><span class=\"line\"><span class=\"keyword\">ON</span> <span class=\"keyword\">TABLE</span> SC</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> <span class=\"keyword\">PUBLIC</span>;</span><br></pre></td></tr></table></figure><blockquote>\n<p>[例4.10] 把用户U5对SC表的INSERT权限收回</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">REVOKE</span> <span class=\"keyword\">INSERT</span></span><br><span class=\"line\"><span class=\"keyword\">ON</span> <span class=\"keyword\">TABLE</span> SC</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> U5 <span class=\"keyword\">CASCADE</span> ;</span><br></pre></td></tr></table></figure><ul><li><p>将用户U5的<code>INSERT</code>权限收回的时候应该使用CASCADE，否则拒绝执行该语句</p>\n</li>\n<li><p>如果U6或U7还从其他用户处获得对SC表的INSERT权限，则他们仍具有此权限，系统只收回直接或间接从U5处获得的权限  </p>\n</li>\n</ul><h2 id=\"创建数据库模式的权限\">创建数据库模式的权限<a href=\"#创建数据库模式的权限\" title=\"创建数据库模式的权限\"></a></h2><ul><li>数据库管理员在创建用户时实现</li>\n</ul><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">USER</span>语句格式</span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">USER</span> &lt;username&gt;</span><br><span class=\"line\">[<span class=\"keyword\">WITH</span>][DBA|<span class=\"keyword\">RESOURCE</span>|<span class=\"keyword\">CONNECT</span>];</span><br></pre></td></tr></table></figure><p>注：<br><code>CREATE USER</code>不是SQL标准，各个系统的实现相差甚远  </p>\n<p><strong>CREATE USER语句格式说明</strong></p>\n<ul><li>只有系统的超级用户才有权创建一个新的数据库用户</li>\n<li>新创建的数据库用户有三种权限： CONNECT、RESOURCE和DBA</li>\n<li>如没有指定创建的新用户的权限，默认该用户拥有CONNECT权限。拥有CONNECT权限的用户不能创建新用户，不能创建模式，也不能创建基本表，只能登录数据库  </li>\n</ul><p><strong>CREATE USER语句格式说明（续）</strong></p>\n<ul><li>拥有<code>RESOURCE</code>权限的用户能创建<strong>基本表</strong>和<strong>视图</strong>，成为所创建对象的属主。但不能创建模式，不能创建新的用户</li>\n<li>拥有<code>DBA</code>权限的用户是系统中的超级用户，可以创建新的用户、创建模式、创建基本表和视图等； <code>DBA</code>拥有对所有数据库对象的<strong>存取权限</strong>，还可以<strong>把这些权限授予一般用户</strong>  </li>\n</ul><div class=\"φcz\"><div class=\"φdb\"><table><thead><tr>\n<th style=\"padding:0\"></th><th>可否</th><th>执行的</th><th>操作</th><th style=\"padding:0\"></th></tr>\n</thead><tbody><tr>\n<td>拥有的权限</td><td>CREATE USER</td><td>CREATE SCHEMA</td><td>CREATE TABLE</td><td>登录数据库，执行数据查询和操纵</td></tr>\n<tr>\n<td>DBA</td><td>可以</td><td>可以</td><td>可以</td><td>可以</td></tr>\n<tr>\n<td>RESOURCE</td><td>不可以</td><td>不可以</td><td>不可以</td><td>不可以</td></tr>\n<tr>\n<td>CONNECT</td><td>不可以</td><td>不可以</td><td>不可以</td><td>可以，但必须拥有相应权限</td></tr>\n</tbody></table></div></div><p><strong>角色的创建</strong></p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">ROLE</span> &lt;角色名&gt;</span><br></pre></td></tr></table></figure><p><strong>给角色授权</strong></p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">GRANT</span> &lt;权限&gt;[,&lt;权限&gt;]…</span><br><span class=\"line\"><span class=\"keyword\">ON</span> &lt;对象类型&gt;对象名</span><br><span class=\"line\"><span class=\"keyword\">TO</span> &lt;角色&gt;[,&lt;角色&gt;]…</span><br></pre></td></tr></table></figure><p><strong>将一个角色授予其他的角色或用户</strong></p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">GRANT</span> &lt;角色<span class=\"number\">1</span>&gt;[,&lt;角色<span class=\"number\">2</span>&gt;]…</span><br><span class=\"line\"><span class=\"keyword\">TO</span> &lt;角色<span class=\"number\">3</span>&gt;[,&lt;用户<span class=\"number\">1</span>&gt;]…</span><br><span class=\"line\">[<span class=\"keyword\">WITH</span> <span class=\"keyword\">ADMIN</span> <span class=\"keyword\">OPTION</span>]</span><br></pre></td></tr></table></figure><ul><li>该语句把角色授予某用户，或授予另一个角色</li>\n<li>授予者是角色的创建者或拥有在这个角色上的ADMIN OPTION</li>\n<li>指定了WITH ADMIN OPTION则获得某种权限的角色或用户还可以把这种权限授予其他角色</li>\n<li>一个角色的权限：直接授予这个角色的全部权限加上其他角色授予这个角色的全部权限  </li>\n</ul><p><strong>角色权限的收回</strong></p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">REVOKE</span> &lt;权限&gt;[,&lt;权限&gt;]…</span><br><span class=\"line\"><span class=\"keyword\">ON</span> &lt;对象类型&gt; &lt;对象名&gt;</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> &lt;角色&gt;[,&lt;角色&gt;]…</span><br></pre></td></tr></table></figure><ul><li>用户可以回收角色的权限，从而修改角色拥有的权限</li>\n<li>REVOKE执行者是<ul><li>角色的创建者</li>\n<li>拥有在这个（些）角色上的ADMIN OPTION  </li>\n</ul></li>\n</ul><blockquote>\n<p>[例4.11] 通过角色来实现将一组权限授予一个用户。<br>步骤如下：</p>\n</blockquote>\n<p>（1）首先创建一个角色 R1</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">ROLE</span> R1;</span><br></pre></td></tr></table></figure><p>（2）然后使用GRANT语句，使角色R1拥有Student表的</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span>、 <span class=\"keyword\">UPDATE</span>、 <span class=\"keyword\">INSERT</span>权限</span><br><span class=\"line\"><span class=\"keyword\">GRANT</span> <span class=\"keyword\">SELECT</span>, <span class=\"keyword\">UPDATE</span>, <span class=\"keyword\">INSERT</span></span><br><span class=\"line\"><span class=\"keyword\">ON</span> <span class=\"keyword\">TABLE</span> Student</span><br><span class=\"line\"><span class=\"keyword\">TO</span> R1;</span><br></pre></td></tr></table></figure><p>3）将这个角色授予王平，张明，赵玲。使他们具有角色R1所包含的全部权限</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">GRANT</span> R1</span><br><span class=\"line\"><span class=\"keyword\">TO</span> 王平,张明,赵玲;</span><br></pre></td></tr></table></figure><p>（4） 可以一次性通过R1来回收王平的这3个权限</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">REVOKE</span> R1</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> 王平;</span><br></pre></td></tr></table></figure><blockquote>\n<p>[例4.12] 角色的权限修改 使角色R1在原来的基础上增加了Student表的DELETE 权限  </p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">GRANT</span> <span class=\"keyword\">DELETE</span></span><br><span class=\"line\"><span class=\"keyword\">ON</span> <span class=\"keyword\">TABLE</span> Student</span><br><span class=\"line\"><span class=\"keyword\">TO</span> R1;</span><br></pre></td></tr></table></figure><blockquote>\n<p>[例4.13] 使R1减少了SELECT权限  </p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">REVOKE</span> <span class=\"keyword\">SELECT</span></span><br><span class=\"line\"><span class=\"keyword\">ON</span> <span class=\"keyword\">TABLE</span> Student</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> R1；</span><br></pre></td></tr></table></figure><h2 id=\"强制存取控制方法\">强制存取控制方法<a href=\"#强制存取控制方法\" title=\"强制存取控制方法\"></a></h2><p><strong>敏感度标记（Label）</strong></p>\n<ul><li>对于主体和客体， DBMS为它们每个实例（值）指派一个<strong>敏感度标记</strong>（Label）</li>\n<li>敏感度标记分成若干级别<ul><li>绝密（Top Secret， TS）</li>\n<li>机密（Secret， S）</li>\n<li>可信（Confidential， C）</li>\n<li>公开（Public， P）</li>\n<li>TS&gt;=S&gt;=C&gt;=P</li>\n</ul></li>\n<li><strong>主体</strong>的敏感度标记称为<strong>许可证级别</strong>（Clearance Level）</li>\n<li><strong>客体</strong>的敏感度标记称为<strong>密级</strong>（Classification Level）  </li>\n</ul><blockquote>\n<p>[例4.14] 建立计算机系学生的视图，把对该视图的SELECT权限授于王平，把该视图上的所有操作权限授于张明</p>\n</blockquote>\n<p>先建立计算机系学生的视图CS_Student</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">VIEW</span> CS_Student</span><br><span class=\"line\"><span class=\"keyword\">AS</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> *</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> Student</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> Sdept=<span class=\"string\">'CS'</span>;</span><br></pre></td></tr></table></figure><p>在视图上进一步定义存取权限</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">GRANT</span> <span class=\"keyword\">SELECT</span></span><br><span class=\"line\"><span class=\"keyword\">ON</span> CS_Student</span><br><span class=\"line\"><span class=\"keyword\">TO</span> 王平;</span><br><span class=\"line\"><span class=\"keyword\">GRANT</span> <span class=\"keyword\">ALL</span> PRIVILIGES</span><br><span class=\"line\"><span class=\"keyword\">ON</span> CS_Student</span><br><span class=\"line\"><span class=\"keyword\">TO</span> 张明;</span><br></pre></td></tr></table></figure><h2 id=\"审计\">审计<a href=\"#审计\" title=\"审计\"></a></h2><p><strong>审计功能</strong></p>\n<ul><li>基本功能<ul><li>提供多种审计查阅方式提供多种审计查阅方式</li>\n<li>多套审计规则：一般在初始化设定</li>\n<li>提供审计分析和报表功能</li>\n</ul></li>\n<li>审计日志管理功能<ul><li>防止审计员误删审计记录，审计日志必须先转储后删除</li>\n<li>对转储的审计记录文件提供完整性和保密性保护</li>\n<li>只允许审计员查阅和转储审计记录， 不允许任何用户新增和修改审计记录等</li>\n</ul></li>\n<li>提供查询审计设置及审计记录信息的专门视图  </li>\n</ul><p><strong>AUDIT语句和NOAUDIT语句</strong></p>\n<ul><li>AUDIT语句：设置审计功能</li>\n<li>NOAUDIT语句：取消审计功能  </li>\n</ul><blockquote>\n<p>[例4.15] 对修改SC表结构或修改SC表数据的操作进行审计</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">AUDIT <span class=\"keyword\">ALTER</span>,<span class=\"keyword\">UPDATE</span></span><br><span class=\"line\"><span class=\"keyword\">ON</span> SC;</span><br></pre></td></tr></table></figure><blockquote>\n<p>[例4.16] 取消对SC表的一切审计</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">NOAUDIT <span class=\"keyword\">ALTER</span>,<span class=\"keyword\">UPDATE</span></span><br><span class=\"line\"><span class=\"keyword\">ON</span> SC;</span><br></pre></td></tr></table></figure><h2 id=\"数据加密\">数据加密<a href=\"#数据加密\" title=\"数据加密\"></a></h2><p><strong>数据加密</strong></p>\n<ul><li>防止数据库中数据在存储和传输中失密的有效手段</li>\n</ul><p><strong>加密的基本思想</strong></p>\n<ul><li>根据一定的算法将原始数据—明文（Plain text）变换为不可直接识别的格式-—密文（Cipher text）</li>\n</ul><p><strong>加密方法</strong></p>\n<ul><li>存储加密</li>\n<li>传输加密  </li>\n</ul><p><strong>存储加密</strong></p>\n<ul><li><p>透明存储加密</p>\n<ul><li>内核级加密保护方式，对用户完全透明</li>\n<li>将数据在写到磁盘时对数据进行加密， 授权用户读取数据时再对其进行解密</li>\n<li>数据库的应用程序不需要做任何修改，只需在创建表语句中说明需加密的字段即可</li>\n</ul><p><strong><font color=\"red\">内核级加密方法: 性能较好，安全完备性较高</font></strong></p>\n</li>\n<li><p>非透明存储加密</p>\n<ul><li>通过多个加密函数实现  </li>\n</ul></li>\n</ul><p><strong>传输加密</strong></p>\n<ul><li>链路加密<ul><li>在<strong>链路层</strong>进行加密</li>\n<li>传输信息由<strong>报头</strong>和<strong>报文</strong>两部分组成</li>\n<li>报文和报头均加密</li>\n</ul></li>\n<li>端到端加密<ul><li>在发送端加密，接收端解密</li>\n<li>只加密报文不加密报头</li>\n<li>所需密码设备数量相对较少， 容易被非法监听者发现并从中获取敏感信息  </li>\n</ul></li>\n</ul><img src=\"https://cdn.jsdelivr.net/gh/Dxsummer/cdn/img/sql/20210507192525.png\" alt=\"数据库管理系统可信传输示意图\" style=\"zoom:50%;\" /><h1 id=\"第五章-数据库完整性\">第五章 数据库完整性<a href=\"#第五章-数据库完整性\" title=\"第五章 数据库完整性\"></a></h1><p><strong>提供完整性检查的方法</strong></p>\n<ul><li>数据库管理系统中检查数据是否满足完整性约束条件的机制称为<strong>完整性检查</strong>。</li>\n<li>一般在INSERT、 UPDATE、 DELETE语句执行后开始检查，也可以在事务提交时检查  </li>\n</ul><h2 id=\"实体完整性\">实体完整性<a href=\"#实体完整性\" title=\"实体完整性\"></a></h2><p><strong>关系模型的实体完整性</strong></p>\n<ul><li><code>CREATE TABLE</code>中用<code>PRIMARY KEY</code>定义</li>\n</ul><p><strong>单属性构成的码有两种说明方法</strong></p>\n<ul><li>定义为<strong>列级约束条件</strong></li>\n<li>定义为<strong>表级约束条件</strong></li>\n</ul><p><strong>对多个属性构成的码只有一种说明方法</strong></p>\n<ul><li>定义为表级约束条件  </li>\n</ul><blockquote>\n<p>[例5.1] 将Student表中的Sno属性定义为码</p>\n</blockquote>\n<p>（1） 在列级定义主码</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> Student</span><br><span class=\"line\">( Sno <span class=\"built_in\">CHAR</span>(<span class=\"number\">9</span>) PRIMARY <span class=\"keyword\">KEY</span>,</span><br><span class=\"line\">Sname <span class=\"built_in\">CHAR</span>(<span class=\"number\">20</span>) <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">Ssex <span class=\"built_in\">CHAR</span>(<span class=\"number\">2</span>),</span><br><span class=\"line\">Sage <span class=\"built_in\">SMALLINT</span>,</span><br><span class=\"line\">Sdept <span class=\"built_in\">CHAR</span>(<span class=\"number\">20</span>)</span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure><p>（2） 在表级定义主码</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> Student</span><br><span class=\"line\">( Sno <span class=\"built_in\">CHAR</span>(<span class=\"number\">9</span>),</span><br><span class=\"line\">Sname <span class=\"built_in\">CHAR</span>(<span class=\"number\">20</span>) <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">Ssex <span class=\"built_in\">CHAR</span>(<span class=\"number\">2</span>),</span><br><span class=\"line\">Sage <span class=\"built_in\">SMALLINT</span>,</span><br><span class=\"line\">Sdept <span class=\"built_in\">CHAR</span>(<span class=\"number\">20</span>),</span><br><span class=\"line\">PRIMARY <span class=\"keyword\">KEY</span> (Sno)</span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure><blockquote>\n<p>[例5.2] 将SC表中的Sno， Cno属性组定义为码</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> SC</span><br><span class=\"line\">( Sno <span class=\"built_in\">CHAR</span>(<span class=\"number\">9</span>) <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">Cno <span class=\"built_in\">CHAR</span>(<span class=\"number\">4</span>) <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">Grade <span class=\"built_in\">SMALLINT</span>,</span><br><span class=\"line\">PRIMARY <span class=\"keyword\">KEY</span> (Sno,Cno) <span class=\"comment\">/*只能在表级定义主码*/</span></span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure><h2 id=\"参照完整性\">参照完整性<a href=\"#参照完整性\" title=\"参照完整性\"></a></h2><p><strong>关系模型的参照完整性定义</strong></p>\n<ul><li>在<code>CREATE TABLE</code>中用<code>FOREIGN KEY</code>短语定义哪些列为外码</li>\n<li>用<code>REFERENCES</code>短语指明这些外码参照哪些表的主码  </li>\n</ul><p>例如，关系SC中（Sno， Cno）是<strong>主码</strong>。 Sno， Cno分别参照Student表的主码和Course表的<strong>主码</strong></p>\n<blockquote>\n<p>[例5.3]定义SC中的参照完整性</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> SC</span><br><span class=\"line\">( Sno <span class=\"built_in\">CHAR</span>(<span class=\"number\">9</span>) <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">Cno <span class=\"built_in\">CHAR</span>(<span class=\"number\">4</span>) <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">Grade <span class=\"built_in\">SMALLINT</span>,</span><br><span class=\"line\">PRIMARY <span class=\"keyword\">KEY</span> (Sno, Cno), <span class=\"comment\">/*在表级定义实体完整性*/</span></span><br><span class=\"line\"><span class=\"keyword\">FOREIGN</span> <span class=\"keyword\">KEY</span> (Sno) <span class=\"keyword\">REFERENCES</span> Student(Sno),</span><br><span class=\"line\"><span class=\"comment\">/*在表级定义参照完整性*/</span></span><br><span class=\"line\"><span class=\"keyword\">FOREIGN</span> <span class=\"keyword\">KEY</span> (Cno) <span class=\"keyword\">REFERENCES</span> Course(Cno)</span><br><span class=\"line\"><span class=\"comment\">/*在表级定义参照完整性*/</span></span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure><p>例如，对表SC和Student有四种可能<strong>破坏参照完整性的情况</strong> :</p>\n<ul><li><p><font color=\"red\">SC表中增加一个元组</font>，该元组的Sno属性的值在表Student中找不到一个元组，其Sno属性的值与之相等。</p>\n</li>\n<li><p><font color=\"red\">修改SC表中的一个元组</font>，修改后该元组的Sno属性的值在表Student中找不到一个元组，其Sno属性的值与之相等。</p>\n</li>\n<li><p><font color=\"red\">从Student表中删除一个元组</font>，造成SC表中某些元组的Sno属性的值在表Student中找不到一个元组，其Sno属性的值与之相等。</p>\n</li>\n<li><p><font color=\"red\">修改Student表中一个元组的Sno属性</font>，造成SC表中某些元组的Sno属性的值在表Student中找不到一个元组，其Sno属性的值与之相等 。  </p>\n</li>\n</ul><img src=\"https://cdn.jsdelivr.net/gh/Dxsummer/cdn/img/sql/20210507195243.png\" style=\"zoom:50%;\" /><p><strong>参照完整性违约处理</strong></p>\n<p>（1） 拒绝（NO ACTION） 执行</p>\n<ul><li>不允许该操作执行。该策略一般设置为默认策略</li>\n</ul><p>（2） <strong><mark>级联（CASCADE） 操作</mark></strong></p>\n<ul><li>当删除或修改被参照表（Student） 的一个元组造成了与参照表（SC） 的不一致，则删除或修改参照表中的所有造成不一致的元组</li>\n</ul><p>（3）设置为空值（SET-NULL）</p>\n<ul><li>当删除或修改被参照表的一个元组时造成了不一致，则将参照表中的所有造成不一致的元组的对应属性设置为空值  </li>\n</ul><blockquote>\n<p>例如，有下面2个关系</p>\n</blockquote>\n<p>学生（<u>学号</u>，姓名，性别，<u>专业号</u>，年龄）<br>专业（<u>专业号</u>，专业名）</p>\n<ul><li>假设专业表中某个元组被删除，专业号为12</li>\n<li>按照设置为空值的策略，就要把学生表中专业号=12的所有元组的专业号设置为空值</li>\n<li>对应语义：某个专业删除了，该专业的所有学生专业未定，等待重新分配专业  </li>\n</ul><blockquote>\n<p>[例5.4] 显式说明参照完整性的违约处理示例</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> SC</span><br><span class=\"line\">( Sno <span class=\"built_in\">CHAR</span>(<span class=\"number\">9</span>) <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span>，</span><br><span class=\"line\">Cno <span class=\"built_in\">CHAR</span>(<span class=\"number\">4</span>) <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span>，</span><br><span class=\"line\">Grade <span class=\"built_in\">SMALLINT</span>,</span><br><span class=\"line\">PRIMARY <span class=\"keyword\">KEY</span>(Sno,Cno)，</span><br><span class=\"line\"><span class=\"keyword\">FOREIGN</span> <span class=\"keyword\">KEY</span> (Sno) <span class=\"keyword\">REFERENCES</span> Student(Sno)</span><br><span class=\"line\"><span class=\"keyword\">ON</span> <span class=\"keyword\">DELETE</span> <span class=\"keyword\">CASCADE</span> <span class=\"comment\">/*级联删除SC表中相应的元组*/</span></span><br><span class=\"line\"><span class=\"keyword\">ON</span> <span class=\"keyword\">UPDATE</span> <span class=\"keyword\">CASCADE</span>, <span class=\"comment\">/*级联更新SC表中相应的元组*/</span></span><br><span class=\"line\"><span class=\"keyword\">FOREIGN</span> <span class=\"keyword\">KEY</span> (Cno) <span class=\"keyword\">REFERENCES</span> Course(Cno)</span><br><span class=\"line\"><span class=\"keyword\">ON</span> <span class=\"keyword\">DELETE</span> <span class=\"keyword\">NO</span> <span class=\"keyword\">ACTION</span> <span class=\"comment\">/*当删除course 表中的元组造成了与SC表不一致时拒绝删除*/</span></span><br><span class=\"line\"><span class=\"keyword\">ON</span> <span class=\"keyword\">UPDATE</span> <span class=\"keyword\">CASCADE</span> <span class=\"comment\">/*当更新course表中的cno时，级联更新SC表中相应的元组*/</span></span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure><h2 id=\"属性上的约束\">属性上的约束<a href=\"#属性上的约束\" title=\"属性上的约束\"></a></h2><p>CREATE TABLE时<strong>定义属性上的约束条件</strong></p>\n<ul><li>列值非空（NOT NULL）</li>\n<li>列值唯一（UNIQUE）</li>\n<li>检查列值是否满足一个条件表达式（CHECK）  </li>\n</ul><p><strong>不允许取空值</strong></p>\n<blockquote>\n<p>[例5.5] 在定义SC表时，说明Sno、 Cno、 Grade属性不允许取空值。</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> SC</span><br><span class=\"line\">( Sno <span class=\"built_in\">CHAR</span>(<span class=\"number\">9</span>) <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">Cno <span class=\"built_in\">CHAR</span>(<span class=\"number\">4</span>) <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">Grade <span class=\"built_in\">SMALLINT</span> <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">PRIMARY <span class=\"keyword\">KEY</span> (Sno, Cno),</span><br><span class=\"line\">…</span><br><span class=\"line\"><span class=\"comment\">/* 如果在表级定义实体完整性，隐含了Sno， Cno不允许取空值，则在列级不允许取空值的定义 可以不写 * /</span></span><br><span class=\"line\"><span class=\"comment\">);</span></span><br></pre></td></tr></table></figure><p><strong>列值唯一</strong></p>\n<blockquote>\n<p>[例5.6]建立部门表DEPT，要求部门名称Dname列取值唯一，部门编号Deptno列为主码</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> DEPT</span><br><span class=\"line\">( Deptno <span class=\"built_in\">NUMERIC</span>(<span class=\"number\">2</span>),</span><br><span class=\"line\">Dname <span class=\"built_in\">CHAR</span>(<span class=\"number\">9</span>) <span class=\"keyword\">UNIQUE</span> <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span>，<span class=\"comment\">/*要求Dname列值唯一, 并且不能取空值*/</span></span><br><span class=\"line\">Location <span class=\"built_in\">CHAR</span>(<span class=\"number\">10</span>),</span><br><span class=\"line\">PRIMARY <span class=\"keyword\">KEY</span> (Deptno)</span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure><p><strong>用CHECK短语指定列值应该满足的条件</strong></p>\n<blockquote>\n<p>[例5.7] Student表的Ssex只允许取“男”或“女”。</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> Student</span><br><span class=\"line\">( Sno <span class=\"built_in\">CHAR</span>(<span class=\"number\">9</span>) PRIMARY <span class=\"keyword\">KEY</span>,</span><br><span class=\"line\">Sname <span class=\"built_in\">CHAR</span>(<span class=\"number\">8</span>) <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">Ssex <span class=\"built_in\">CHAR</span>(<span class=\"number\">2</span>) <span class=\"keyword\">CHECK</span> （Ssex <span class=\"keyword\">IN</span> （‘男’,’女’）） ，<span class=\"comment\">/*性别属性Ssex只允许取'男'或'女' */</span></span><br><span class=\"line\">Sage <span class=\"built_in\">SMALLINT</span>,</span><br><span class=\"line\">Sdept <span class=\"built_in\">CHAR</span>(<span class=\"number\">20</span>)</span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure><blockquote>\n<p>[例5.8] SC表的Grade的值应该在0和100之间。</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> SC</span><br><span class=\"line\">( Sno <span class=\"built_in\">CHAR</span>(<span class=\"number\">9</span>) ,</span><br><span class=\"line\">Cno <span class=\"built_in\">CHAR</span>(<span class=\"number\">4</span>),</span><br><span class=\"line\">Grade <span class=\"built_in\">SMALLINT</span> <span class=\"keyword\">CHECK</span> (Grade&gt;=<span class=\"number\">0</span> <span class=\"keyword\">AND</span> Grade &lt;=<span class=\"number\">100</span>)，<span class=\"comment\">/*Grade取值范围是0到100*/</span></span><br><span class=\"line\">PRIMARY <span class=\"keyword\">KEY</span> (Sno,Cno),</span><br><span class=\"line\"><span class=\"keyword\">FOREIGN</span> <span class=\"keyword\">KEY</span> (Sno) <span class=\"keyword\">REFERENCES</span> Student(Sno),</span><br><span class=\"line\"><span class=\"keyword\">FOREIGN</span> <span class=\"keyword\">KEY</span> (Cno) <span class=\"keyword\">REFERENCES</span> Course(Cno)</span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure><p>在CREATE TABLE时可以用<strong><code>CHECK</code>短语</strong>定义元组上的约束条件，即<strong>元组级的限制</strong></p>\n<p>同属性值限制相比，元组级的限制可以设置不同属性之间的取值的相互约束条件  </p>\n<blockquote>\n<p>[例5.9]当学生的性别是男时，其名字不能以Ms.打头。</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> Student</span><br><span class=\"line\">( Sno <span class=\"built_in\">CHAR</span>(<span class=\"number\">9</span>),</span><br><span class=\"line\">Sname <span class=\"built_in\">CHAR</span>(<span class=\"number\">8</span>) <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span>，</span><br><span class=\"line\">Ssex <span class=\"built_in\">CHAR</span>(<span class=\"number\">2</span>),</span><br><span class=\"line\">Sage <span class=\"built_in\">SMALLINT</span>,</span><br><span class=\"line\">Sdept <span class=\"built_in\">CHAR</span>(<span class=\"number\">20</span>),</span><br><span class=\"line\">PRIMARY <span class=\"keyword\">KEY</span> (Sno),</span><br><span class=\"line\"><span class=\"keyword\">CHECK</span> (Ssex=<span class=\"string\">'女'</span> <span class=\"keyword\">OR</span> Sname <span class=\"keyword\">NOT</span> <span class=\"keyword\">LIKE</span> <span class=\"string\">'Ms.%'</span>)</span><br><span class=\"line\"><span class=\"comment\">/*定义了元组中Sname和 Ssex两个属性值之间的约束条件*/</span></span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure><ul><li>性别是女性的元组都能通过该项检查，因为<code>Ssex=‘女’</code>成立;</li>\n<li>当性别是男性时，要通过检查则名字一定不能以Ms.打头  </li>\n</ul><h2 id=\"完整性约束命名子句\">完整性约束命名子句<a href=\"#完整性约束命名子句\" title=\"完整性约束命名子句\"></a></h2><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CONSTRAINT &lt;完整性约束条件名&gt;&lt;完整性约束条件&gt;</span><br></pre></td></tr></table></figure><ul><li>&lt;完整性约束条件&gt;包括<code>NOT NULL</code>、 <code>UNIQUE</code>、<code>PRIMARY KEY</code>短语、 <code>FOREIGN KEY</code>短语、 <code>CHECK</code>短语等  </li>\n</ul><blockquote>\n<p>[例5.10]建立学生登记表Student，要求学号在90000~99999之间，姓名不能取空值，年龄小于30，性别只能是“男”或“女”。</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> Student</span><br><span class=\"line\">( Sno <span class=\"built_in\">NUMERIC</span>(<span class=\"number\">6</span>)</span><br><span class=\"line\"><span class=\"keyword\">CONSTRAINT</span> C1 <span class=\"keyword\">CHECK</span> (Sno <span class=\"keyword\">BETWEEN</span> <span class=\"number\">90000</span> <span class=\"keyword\">AND</span> <span class=\"number\">99999</span>),</span><br><span class=\"line\">Sname <span class=\"built_in\">CHAR</span>(<span class=\"number\">20</span>)</span><br><span class=\"line\"><span class=\"keyword\">CONSTRAINT</span> C2 <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">Sage <span class=\"built_in\">NUMERIC</span>(<span class=\"number\">3</span>)</span><br><span class=\"line\"><span class=\"keyword\">CONSTRAINT</span> C3 <span class=\"keyword\">CHECK</span> (Sage &lt; <span class=\"number\">30</span>),</span><br><span class=\"line\">Ssex <span class=\"built_in\">CHAR</span>(<span class=\"number\">2</span>)</span><br><span class=\"line\"><span class=\"keyword\">CONSTRAINT</span> C4 <span class=\"keyword\">CHECK</span> (Ssex <span class=\"keyword\">IN</span> ( ‘男’,<span class=\"string\">'女'</span>)),</span><br><span class=\"line\"><span class=\"keyword\">CONSTRAINT</span> StudentKey PRIMARY <span class=\"keyword\">KEY</span>(Sno)</span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure><ul><li>在Student表上建立了5个约束条件，包括主码约束（命名为StudentKey）以及C1、 C2、 C3、 C4四个列级约束。  </li>\n</ul><blockquote>\n<p>[例5.11]建立教师表TEACHER，要求每个教师的应发工资不低于3000元。</p>\n</blockquote>\n<p>应发工资是工资列Sal与扣除项Deduct之和。</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> TEACHER</span><br><span class=\"line\">( Eno <span class=\"built_in\">NUMERIC</span>(<span class=\"number\">4</span>) PRIMARY <span class=\"keyword\">KEY</span> <span class=\"comment\">/*在列级定义主码*/</span></span><br><span class=\"line\">Ename <span class=\"built_in\">CHAR</span>(<span class=\"number\">10</span>),</span><br><span class=\"line\">Job <span class=\"built_in\">CHAR</span>(<span class=\"number\">8</span>),</span><br><span class=\"line\">Sal <span class=\"built_in\">NUMERIC</span>(<span class=\"number\">7</span>,<span class=\"number\">2</span>),</span><br><span class=\"line\">Deduct <span class=\"built_in\">NUMERIC</span>(<span class=\"number\">7</span>,<span class=\"number\">2</span>),</span><br><span class=\"line\">Deptno <span class=\"built_in\">NUMERIC</span>(<span class=\"number\">2</span>),</span><br><span class=\"line\"><span class=\"keyword\">CONSTRAINT</span> TEACHERFKey <span class=\"keyword\">FOREIGN</span> <span class=\"keyword\">KEY</span> (Deptno) <span class=\"keyword\">REFERENCES</span> DEPT(Deptno),</span><br><span class=\"line\"><span class=\"keyword\">CONSTRAINT</span> C1 <span class=\"keyword\">CHECK</span> (Sal + Deduct &gt;= <span class=\"number\">3000</span>)</span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure><p><strong>修改表中的完整性限制</strong></p>\n<ul><li>使用ALTER TABLE语句修改表中的完整性限制</li>\n</ul><blockquote>\n<p>[例5.12]去掉例5.10 Student表中对性别的限制。</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> Student <span class=\"keyword\">DROP</span> <span class=\"keyword\">CONSTRAINT</span> C4;</span><br></pre></td></tr></table></figure><blockquote>\n<p>[例5.13] 修改表Student中的约束条件，要求学号改为在900000~999999之间，年龄由小于30改为小于40</p>\n</blockquote>\n<ul><li>可以先删除原来的约束条件，再增加新的约束条件</li>\n</ul><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> Student <span class=\"keyword\">DROP</span> <span class=\"keyword\">CONSTRAINT</span> C1;</span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> Student <span class=\"keyword\">ADD</span> <span class=\"keyword\">CONSTRAINT</span> C1 <span class=\"keyword\">CHECK</span> (Sno <span class=\"keyword\">BETWEEN</span> <span class=\"number\">900000</span> <span class=\"keyword\">AND</span> <span class=\"number\">999999</span>),</span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> Student <span class=\"keyword\">DROP</span> <span class=\"keyword\">CONSTRAINT</span> C3;</span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> Student <span class=\"keyword\">ADD</span> <span class=\"keyword\">CONSTRAINT</span> C3 <span class=\"keyword\">CHECK</span>(Sage &lt; <span class=\"number\">40</span>);</span><br></pre></td></tr></table></figure><h2 id=\"断言\">断言<a href=\"#断言\" title=\"断言\"></a></h2><ul><li><p>SQL中，可以使用 <code>CREATE ASSERTION</code>语句，通过<strong>声明性断言</strong>来指定更具一般性的约束。</p>\n</li>\n<li><p>可以定义涉及多个表的或聚集操作的比较复杂的完整性约束。</p>\n</li>\n<li><p>断言创建以后，任何对断言中所涉及的关系的操作都会触发关系数据库管理系统对断言的检查，任何使断言不为真值的操作都会被拒绝执行  </p>\n</li>\n</ul><p><strong>创建断言的语句格式</strong></p>\n<ul><li><pre><code class=\"sql\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">ASSERTION</span>&lt;断言名&gt;&lt;<span class=\"keyword\">CHECK</span> 子句&gt;\n&lt;!<span class=\"comment\">--￼138--&gt;</span>\n</code></pre>\n</li>\n</ul><blockquote>\n<p>[例5.19]限制每一门课程最多60名学生选修</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">ASSERTION</span> ASSE_SC_CNUM1</span><br><span class=\"line\"><span class=\"keyword\">CHECK</span>(<span class=\"number\">60</span> &gt;= <span class=\"keyword\">ALL</span> (<span class=\"keyword\">SELECT</span> <span class=\"keyword\">count</span>(*)</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> SC</span><br><span class=\"line\"><span class=\"keyword\">GROUP</span> <span class=\"keyword\">by</span> cno)</span><br><span class=\"line\">);</span><br><span class=\"line\"><span class=\"comment\">/*此断言的谓词，涉及聚集操作count 和分组函数group by的SQL语句*/</span></span><br></pre></td></tr></table></figure><blockquote>\n<p>[例5.20] 限制每个学期每一门课程最多60名学生选修</p>\n</blockquote>\n<p>首先需要修改SC表的模式，增加一个“学期（TERM）”属性</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> SC <span class=\"keyword\">ADD</span> TERM <span class=\"built_in\">DATE</span>;</span><br></pre></td></tr></table></figure><p>然后，定义断言：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">ASSERTION</span> ASSE_SC_CNUM2</span><br><span class=\"line\"><span class=\"keyword\">CHECK</span>(<span class=\"number\">60</span> &gt;= <span class=\"keyword\">ALL</span> (<span class=\"keyword\">SELECT</span> <span class=\"keyword\">count</span>(*) <span class=\"keyword\">FROM</span> SC <span class=\"keyword\">GROUP</span> <span class=\"keyword\">by</span> cno,TERM)</span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure><p><strong>删除断言的语句格式为</strong></p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">DROP</span> <span class=\"keyword\">ASSERTION</span> &lt;断言名&gt;;</span><br></pre></td></tr></table></figure><ul><li>如果断言很复杂，则系统在检测和维护断言的开销较高，这是在使用断言时应该注意的  </li>\n</ul><h2 id=\"触发器\">触发器<a href=\"#触发器\" title=\"触发器\"></a></h2><p>触发器（Trigger）是用户定义在关系表上的一类由事件驱动的特殊过程</p>\n<ul><li>触发器保存在数据库服务器中</li>\n<li>任何用户对表的增、删、改操作均由服务器<strong>自动激活</strong>相应的触发器</li>\n<li>触发器可以实施更为复杂的检查和操作，具有更精细和更强大的数据控制能力  </li>\n</ul><h3 id=\"定义触发器\">定义触发器<a href=\"#定义触发器\" title=\"定义触发器\"></a></h3><p><strong>CREATE TRIGGER语法格式</strong></p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TRIGGER</span> &lt;触发器名&gt;</span><br><span class=\"line\">&#123;<span class=\"keyword\">BEFORE</span> | <span class=\"keyword\">AFTER</span>&#125; &lt;触发事件&gt; <span class=\"keyword\">ON</span> &lt;表名&gt;</span><br><span class=\"line\"><span class=\"keyword\">REFERENCING</span> <span class=\"keyword\">NEW</span>|<span class=\"keyword\">OLD</span> <span class=\"keyword\">ROW</span> <span class=\"keyword\">AS</span>&lt;变量&gt; <span class=\"comment\">/*引用 old表示插入之前的值，new表示新插入的值；*/</span></span><br><span class=\"line\"><span class=\"keyword\">FOR</span> <span class=\"keyword\">EACH</span> &#123;<span class=\"keyword\">ROW</span> | <span class=\"keyword\">STATEMENT</span>&#125;  <span class=\"comment\">/*行 语句*/</span></span><br><span class=\"line\">[<span class=\"keyword\">WHEN</span> &lt;触发条件&gt;]&lt;触发动作体&gt;</span><br></pre></td></tr></table></figure><p>触发器又叫做<strong>事件-条件-动作</strong>（event-condition-action）规则。<br>当特定的系统事件发生时，对规则的条件进行检查，如果条件成立则执行规则中的动作，否则不执行该动作。规则中的动作体可以很复杂，通常是一段SQL存储过程  </p>\n<p><strong>定义触发器的语法说明</strong></p>\n<p>（1）<strong>表的拥有者才可以在表上创建触发器</strong></p>\n<p>（2）<strong>触发器名</strong></p>\n<ul><li>触发器名可以包含模式名，也可以不包含模式名</li>\n<li>同一模式下，触发器名必须是唯一的</li>\n<li>触发器名和表名必须在同一模式下</li>\n</ul><p>（3）<strong>表名</strong></p>\n<ul><li>触发器只能定义在基本表上，不能定义在视图上</li>\n<li>当基本表的数据发生变化时，将激活定义在该表上相应触发事件的触发器  </li>\n</ul><p>（4）<strong>触发事件</strong></p>\n<ul><li>触发事件可以是<code>INSERT</code>、 <code>DELETE</code>或<code>UPDATE</code>也可以是这几个事件的组合</li>\n<li>还可以<code>UPDATE OF&lt;触发列， ...&gt;</code>，即进一步指明修改哪些列时激活触发器</li>\n<li>AFTER/BEFORE是触发的时机</li>\n<li><code>AFTER</code>表示在触发事件的操作<strong>执行之后激活触发器</strong></li>\n<li><code>BEFORE</code>表示在触发事件的操作<strong>执行之前激活触发器</strong>  </li>\n</ul><p>(5）<strong>触发器类型</strong></p>\n<ul><li>行级触发器（<code>FOR EACH ROW</code>）</li>\n<li>语句级触发器（<code>FOR EACH STATEMENT</code>）</li>\n</ul><blockquote>\n<p>例如,在例5.11的TEACHER表上创建一个AFTER UPDATE触发器，触发事件是UPDATE语句：</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">UPDATE</span> TEACHER <span class=\"keyword\">SET</span> Deptno=<span class=\"number\">5</span>;</span><br></pre></td></tr></table></figure><p>假设表TEACHER有1000行</p>\n<ul><li>如果是<strong>语句级触发器</strong>，那么执行完该语句后，触发动作只发生一次</li>\n<li>如果是<strong>行级触发器</strong>，触发动作将执行1000次  </li>\n</ul><p><strong>（6）触发条件</strong></p>\n<ul><li>触发器被激活时，只有当触发条件为真时触发动作体才执行;  否则触发动作体不执行。</li>\n<li>如果省略WHEN触发条件，则触发动作体在触发器激活后立即执行  </li>\n</ul><p><strong>(7）触发动作体</strong></p>\n<ul><li>触发动作体可以是一个匿名PL/SQL过程块也可以是对已创建存储过程的调用</li>\n<li><font color=\"green\">如果是<strong>行级触发器</strong>，用户都可以在过程体中使用<code>NEW</code>和<code>OLD</code><strong>引用事件之后的新值和事件之前的旧值</strong></font></li>\n<li>如果是<strong>语句级触发器</strong>，则<strong>不能</strong>在触发动作体中使用<code>NEW</code>或<code>OLD</code>进行引用</li>\n<li>如果触发动作体执行失败，激活触发器的事件就会终止执行，触发器的目标表或触发器可能影响的其他对象不发生任何变化</li>\n<li>注意：不同的RDBMS产品触发器语法各部相同  </li>\n</ul><blockquote>\n<p>[例5.21]当对表SC的Grade属性进行修改时，若分数增加了10%则将此次操作记录到下面表中：</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SC_U（Sno,Cno,Oldgrade,Newgrade）</span><br></pre></td></tr></table></figure><p>其中Oldgrade是修改前的分数， Newgrade是修改后的分数。</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TRIGGER</span> SC_T</span><br><span class=\"line\"><span class=\"keyword\">AFTER</span> <span class=\"keyword\">UPDATE</span> <span class=\"keyword\">OF</span> Grade <span class=\"keyword\">ON</span> SC</span><br><span class=\"line\"><span class=\"keyword\">REFERENCING</span></span><br><span class=\"line\"><span class=\"keyword\">OLD</span> <span class=\"keyword\">row</span> <span class=\"keyword\">AS</span> OldTuple,</span><br><span class=\"line\"><span class=\"keyword\">NEW</span> <span class=\"keyword\">row</span> <span class=\"keyword\">AS</span> NewTuple</span><br><span class=\"line\"><span class=\"keyword\">FOR</span> <span class=\"keyword\">EACH</span> <span class=\"keyword\">ROW</span></span><br><span class=\"line\"><span class=\"keyword\">WHEN</span> (NewTuple.Grade &gt;= <span class=\"number\">1.1</span>*OldTuple.Grade)</span><br><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> SC_U(Sno,Cno,OldGrade,NewGrade)</span><br><span class=\"line\"><span class=\"keyword\">VALUES</span>(OldTuple.Sno,OldTuple.Cno,OldTuple.Grade,NewTuple.Gr</span><br><span class=\"line\">ade)</span><br></pre></td></tr></table></figure><blockquote>\n<p>[例5.22] 将每次对表Student的插入操作所增加的学生个数记录到表StudentInsertLog中。</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TRIGGER</span> Student_Count</span><br><span class=\"line\"><span class=\"keyword\">AFTER</span> <span class=\"keyword\">INSERT</span> <span class=\"keyword\">ON</span> Student</span><br><span class=\"line\"><span class=\"comment\">/*指明触发器激活的时间是在执行INSERT后*/</span></span><br><span class=\"line\"><span class=\"keyword\">REFERENCING</span></span><br><span class=\"line\"><span class=\"keyword\">NEW</span> <span class=\"keyword\">TABLE</span> <span class=\"keyword\">AS</span> DELTA</span><br><span class=\"line\"><span class=\"keyword\">FOR</span> <span class=\"keyword\">EACH</span> <span class=\"keyword\">STATEMENT</span></span><br><span class=\"line\"><span class=\"comment\">/*语句级触发器, 即执行完INSERT语句后下面的触发动作体才执行一次*/</span></span><br><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> StudentInsertLog (Numbers)</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">COUNT</span>(*) <span class=\"keyword\">FROM</span> DELTA</span><br></pre></td></tr></table></figure><blockquote>\n<p>[例5.23] 定义一个BEFORE行级触发器，为教师表Teacher定义完整性规则“教授的工资不得低于4000元，如果低于4000元，自动改为4000元”。</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TRIGGER</span> Insert_Or_Update_Sal</span><br><span class=\"line\"><span class=\"keyword\">BEFORE</span> <span class=\"keyword\">INSERT</span> <span class=\"keyword\">OR</span> <span class=\"keyword\">UPDATE</span> <span class=\"keyword\">ON</span> Teacher\t<span class=\"comment\">/*触发事件是插入或更新操作*/</span></span><br><span class=\"line\"><span class=\"keyword\">FOR</span> <span class=\"keyword\">EACH</span> <span class=\"keyword\">ROW</span> \t<span class=\"comment\">/*行级触发器*/</span></span><br><span class=\"line\"><span class=\"keyword\">BEGIN</span> \t\t\t<span class=\"comment\">/*定义触发动作体，是PL/SQL过程块*/</span></span><br><span class=\"line\">    <span class=\"keyword\">IF</span> (new.Job=<span class=\"string\">'教授'</span>) <span class=\"keyword\">AND</span> (new.Sal &lt; <span class=\"number\">4000</span>)</span><br><span class=\"line\">    <span class=\"keyword\">THEN</span> new.Sal :=<span class=\"number\">4000</span>;</span><br><span class=\"line\">    <span class=\"keyword\">END</span> <span class=\"keyword\">IF</span>;</span><br><span class=\"line\"><span class=\"keyword\">END</span>;</span><br></pre></td></tr></table></figure><h3 id=\"激活触发器\">激活触发器<a href=\"#激活触发器\" title=\"激活触发器\"></a></h3><ul><li><p>触发器的执行，是由<font color=\"red\"><strong>触发事件激活</strong></font>的，并由数据库服务器自动执行</p>\n</li>\n<li><p>一个数据表上可能定义了<font color=\"red\"><strong>多个触发器</strong></font>，遵循如下的执行顺序:</p>\n</li>\n</ul><p>（1） 执行该表上的BEFORE触发器;</p>\n<p>（2） 激活触发器的SQL语句;</p>\n<p>（3） 执行该表上的AFTER触发器。  </p>\n<h3 id=\"删除触发器\">删除触发器<a href=\"#删除触发器\" title=\"删除触发器\"></a></h3><p><strong>删除触发器的SQL语法：</strong></p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">DROP</span> <span class=\"keyword\">TRIGGER</span> &lt;触发器名&gt; <span class=\"keyword\">ON</span> &lt;表名&gt;;</span><br></pre></td></tr></table></figure><ul><li>触发器必须是一个已经创建的触发器，并且只能由具有相应权限的用户删除  </li>\n</ul>","prev":{"title":"数据库系统概论（第五版）课后答案","link":"posts/d47736e1"},"next":{"title":"SQL Sever安装教程","link":"posts/d6a1283f"},"plink":"https://dxsummer.gitee.io/posts/ab4279d1/","toc":[{"id":"第二章-关系数据库","title":"第二章 关系数据库","index":"1","children":[{"id":"1-关系数据结构及形式化定义","title":"1. 关系数据结构及形式化定义","index":"1.1","children":[{"id":"11-关系","title":"1.1 关系","index":"1.1.1","children":[{"id":"111-域","title":"1.1.1 域","index":"1.1.1.1"},{"id":"112-笛卡尔积","title":"1.1.2 笛卡尔积","index":"1.1.1.2"},{"id":"113-关系","title":"1.1.3 关系","index":"1.1.1.3"}]},{"id":"12-关系模式","title":"1.2 关系模式","index":"1.1.2","children":[{"id":"121-什么是关系模式","title":"1.2.1 什么是关系模式","index":"1.1.2.1"},{"id":"122-定义关系模式","title":"1.2.2 定义关系模式","index":"1.1.2.2"},{"id":"123-关系模式与关系","title":"1.2.3 关系模式与关系","index":"1.1.2.3"}]},{"id":"13-关系数据库","title":"1.3 关系数据库","index":"1.1.3"},{"id":"14-关系模型的存储结构","title":"1.4 关系模型的存储结构","index":"1.1.4"}]},{"id":"2-关系操作","title":"2. 关系操作","index":"1.2","children":[{"id":"21-关系数据库语言的分类","title":"2.1 关系数据库语言的分类","index":"1.2.1"}]},{"id":"3-关系的完整性","title":"3. 关系的完整性","index":"1.3","children":[{"id":"31-实体完整性","title":"3.1 实体完整性","index":"1.3.1"},{"id":"32-参照完整性","title":"3.2 参照完整性","index":"1.3.2","children":[{"id":"321-关系间的引用","title":"3.2.1 关系间的引用","index":"1.3.2.1"},{"id":"322-外码","title":"3.2.2 外码","index":"1.3.2.2"},{"id":"323-参照完整性规则","title":"3.2.3 参照完整性规则","index":"1.3.2.3"}]},{"id":"33-用户定义的完整性","title":"3.3 用户定义的完整性","index":"1.3.3"}]},{"id":"4-关系代数","title":"4. 关系代数","index":"1.4","children":[{"id":"并（union）","title":"并（Union）","index":"1.4.1"},{"id":"差-（difference）","title":"差 （Difference）","index":"1.4.2"},{"id":"交（-intersection）","title":"交（ Intersection）","index":"1.4.3"},{"id":"笛卡尔积（-cartesian-product）","title":"笛卡尔积（ Cartesian Product）","index":"1.4.4"},{"id":"选择（selection）","title":"选择（Selection）","index":"1.4.5"},{"id":"投影（projection）","title":"投影（Projection）","index":"1.4.6"},{"id":"连接（join）","title":"连接（Join）","index":"1.4.7","children":[{"id":"外连接","title":"外连接","index":"1.4.7.1"}]},{"id":"除运算（division）","title":"除运算（Division）","index":"1.4.8"}]}]},{"id":"第三章-关系数据库标准语言sql","title":"第三章 关系数据库标准语言SQL","index":"2","children":[{"id":"数据定义","title":"数据定义","index":"2.1","children":[{"id":"模式","title":"模式","index":"2.1.1","children":[{"id":"定义模式","title":"定义模式","index":"2.1.1.1"},{"id":"删除模式","title":"删除模式","index":"2.1.1.2"}]},{"id":"基本表","title":"基本表","index":"2.1.2","children":[{"id":"定义","title":"定义","index":"2.1.2.1"},{"id":"插入基本表","title":"插入基本表","index":"2.1.2.2"},{"id":"修改基本表","title":"修改基本表","index":"2.1.2.3"},{"id":"删除基本表","title":"删除基本表","index":"2.1.2.4"},{"id":"模式与表","title":"模式与表","index":"2.1.2.5"}]},{"id":"索引","title":"索引","index":"2.1.3","children":[{"id":"建立索引","title":"建立索引","index":"2.1.3.1"},{"id":"修改索引","title":"修改索引","index":"2.1.3.2"},{"id":"删除索引","title":"删除索引","index":"2.1.3.3"}]},{"id":"数据字典","title":"数据字典","index":"2.1.4"}]},{"id":"数据查询","title":"数据查询","index":"2.2","children":[{"id":"消除取值重复的行","title":"消除取值重复的行","index":"2.2.1"},{"id":"常用的查询条件","title":"常用的查询条件","index":"2.2.2"},{"id":"比较大小","title":"比较大小","index":"2.2.3"},{"id":"确定范围","title":"确定范围","index":"2.2.4"},{"id":"确定集合","title":"确定集合","index":"2.2.5"},{"id":"字符匹配","title":"字符匹配","index":"2.2.6"},{"id":"涉及空值的查询","title":"涉及空值的查询","index":"2.2.7"},{"id":"多重条件查询","title":"多重条件查询","index":"2.2.8"},{"id":"order-by","title":"ORDER BY","index":"2.2.9"},{"id":"聚集函数","title":"聚集函数","index":"2.2.10"},{"id":"group-by","title":"GROUP BY","index":"2.2.11"}]},{"id":"连接查询","title":"连接查询","index":"2.3","children":[{"id":"等值与非等值连接查询","title":"等值与非等值连接查询","index":"2.3.1"},{"id":"自身连接","title":"自身连接","index":"2.3.2"},{"id":"外连接-1","title":"外连接","index":"2.3.3"},{"id":"多表连接","title":"多表连接","index":"2.3.4"}]},{"id":"嵌套查询","title":"嵌套查询","index":"2.4","children":[{"id":"带有in谓词的子查询","title":"带有IN谓词的子查询","index":"2.4.1"},{"id":"带有比较运算符的子查询","title":"带有比较运算符的子查询","index":"2.4.2"},{"id":"带有any（some）或all谓词的子查询","title":"带有ANY（SOME）或ALL谓词的子查询","index":"2.4.3"},{"id":"带有exists谓词的子查询","title":"带有EXISTS谓词的子查询","index":"2.4.4"}]}]},{"id":"第四章--数据库安全性","title":"第四章  数据库安全性","index":"3","children":[{"id":"tcsectdi安全级别划分","title":"TCSEC&#x2F;TDI安全级别划分","index":"3.1"},{"id":"自主存取控制方法","title":"自主存取控制方法","index":"3.2","children":[{"id":"grant","title":"GRANT","index":"3.2.1"},{"id":"revoke","title":"REVOKE","index":"3.2.2"}]},{"id":"创建数据库模式的权限","title":"创建数据库模式的权限","index":"3.3"},{"id":"强制存取控制方法","title":"强制存取控制方法","index":"3.4"},{"id":"审计","title":"审计","index":"3.5"},{"id":"数据加密","title":"数据加密","index":"3.6"}]},{"id":"第五章-数据库完整性","title":"第五章 数据库完整性","index":"4","children":[{"id":"实体完整性","title":"实体完整性","index":"4.1"},{"id":"参照完整性","title":"参照完整性","index":"4.2"},{"id":"属性上的约束","title":"属性上的约束","index":"4.3"},{"id":"完整性约束命名子句","title":"完整性约束命名子句","index":"4.4"},{"id":"断言","title":"断言","index":"4.5"},{"id":"触发器","title":"触发器","index":"4.6","children":[{"id":"定义触发器","title":"定义触发器","index":"4.6.1"},{"id":"激活触发器","title":"激活触发器","index":"4.6.2"},{"id":"删除触发器","title":"删除触发器","index":"4.6.3"}]}]}],"reward":true,"copyright":{"author":"DxSummer","link":"<a href=\"https://dxsummer.gitee.io/posts/ab4279d1/\" title=\"SQL Sever笔记\">https://dxsummer.gitee.io/posts/ab4279d1/</a>","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\\\"https://creativecommons.org/licenses/by-nc-sa/4.0/\\\" rel=\\\"external nofollow\\\" target=\\\"_blank\\\">CC BY-NC-ND 4.0</a>)","published":"2021年4月5日","updated":"2021年5月12日"}}